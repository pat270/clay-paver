<%
	// Variable Tooltip Definitions
	const variableMap = {
		"enable-shadows": {
			tooltip: "Globally enable/disable decorative box-shadows. This is `true` by default. If set to `false`, decorative box shadows cannot be re-implemented through variables.",
		},
		"enable-transitions": {
			tooltip: "Globally enable/disable CSS transitions. This is true by default. If set to `false` transitions cannot be re-implemented through variables.",
		},
		"enable-caret": {
			tooltip: "Display's Bootstrap's default caret icon on `.dropdown-toggle`. This is set to `false` by default. Clay CSS uses SVG icons instead.",
		},
		"enable-grid-classes": {
			tooltip: "Enable/disable Bootstrap's Grid class styles from being output (e.g., `.row` or `.col-md-12`). This is set to `true` by default.",
		},
		"enable-gradients": {
			tooltip: "Enable/disable Bootstrap's gradient styles <a href=\"https://getbootstrap.com/docs/4.0/utilities/colors/#background-gradient\" rel=\"noopener noreferrer\" target=\"_blank\">https://getbootstrap.com/docs/4.0/utilities/colors/#background-gradient</a>. This is set to false by default. Clay CSS doesn't support this theme.",
		},
		"enable-print-styles": {
			tooltip: "Enable/disable Bootstrap's print styles from being output. This is set to `true` by default.",
		},
		"yiq-contrasted-threshold": {
			tooltip: "The yiq lightness value that determines when the lightness of color changes from 'dark' to 'light'. This is set to `150` by default, acceptable values are between `0` and `255`.",
		},
		"yiq-text-dark": {
			tooltip: "The color to return from `@function color-yiq($color)` when `$yiq` is greater than or equal to `$yiq-contrasted-threshold`. This sets the color of text on light backgrounds.",
		},
		"yiq-text-light": {
			tooltip: "The color to return from `@function color-yiq($color)` when `$yiq` is less than `$yiq-contrasted-threshold`. This sets the color of text on dark backgrounds.",
		},
		"font-import-url": {
			tooltip: "The CSS `@import` URL for a Google Font. Copy and paste the URL from the Google Font `@IMPORT` tab here (e.g., https://fonts.googleapis.com/css?family=Open+Sans).",
		},
		"font-family-sans-serif": {
			tooltip: "Defines the sans-serif font stack to use.",
		},
		"font-family-serif": {
			tooltip: "Defines the serif font stack to use.",
		},
		"font-family-monospace": {
			tooltip: "Defines the monospace font stack to use, generally used for code snippets.",
		},
		"font-family-base": {
			tooltip: "Sets the base font stack to use for the site. This is applied on the `body` element.",
		},
		"font-size-base": {
			tooltip: "Sets the base font size to use on the `body` element and default sized components. This is set to `1rem` by default.",
		},
		"font-size-sm": {
			tooltip: "Sets the font size for SM components. This is set to `0.875rem` by default.",
		},
		"font-size-lg": {
			tooltip: "Sets the font size for LG components. This is set to `1.25rem` by default.",
		},
		"font-size-base-mobile": {
			tooltip: "Sets the base font size to use on the `body` element and default sized components at screen sizes `$scaling-breakpoint-down` or `sm` (max-width: 767px).",
		},
		"font-size-lg-mobile": {
			tooltip: "Sets the font size for LG components at screen sizes `$scaling-breakpoint-down` or sm (max-width: 767px).",
		},
		"transition-base": {
			tooltip: "Sets the default transition to use if no transition is passed into Bootstrap's `@include transition` mixin.",
		},
		"transition-fade": {
			tooltip: "Sets the transition to use on `.fade`.",
		},
		"transition-collapse": {
			tooltip: "Sets the transition to use for the collapse component. This transition is applied on `.collapsing`.",
		},
		"component-active-color": {
			tooltip: "Globally sets the `color` to use on components with an `active` state. This doesn't propagate very well, use with discretion.",
		},
		"component-active-bg": {
			tooltip: "Globally sets the `background-color` to use on components with an `active` state. This doesn't propagate very well, use with discretion.",
		},
		"grid-columns": {
			tooltip: "Sets the total number of grid columns. Liferay CE/DXP only supports a column value of 12, use with discretion.",
		},
		"grid-gutter-width": {
			tooltip: "The total space in `px` between each grid column. The default value for Clay CSS Atlas is `24px` (`padding-left: 12px` and `padding-right: 12px` for each column).",
		},
		"grid-breakpoints-xs": {
			tooltip: "Sets the minimum width for the `xs` breakpoint. The default value is `0`. If changing any `grid-breakpoints` value, you must enter a value for all.",
		},
		"grid-breakpoints-sm": {
			tooltip: "Sets the minimum width for the `sm` breakpoint. The default value is `576px`. If changing any `grid-breakpoints` value, you must enter a value for all.",
		},
		"grid-breakpoints-md": {
			tooltip: "Sets the minimum width for the `md` breakpoint. The default value is `768px`. If changing any `grid-breakpoints` value, you must enter a value for all.",
		},
		"grid-breakpoints-lg": {
			tooltip: "Sets the minimum width for the `lg` breakpoint. The default value is `992px`. If changing any `grid-breakpoints` value, you must enter a value for all.",
		},
		"grid-breakpoints-xl": {
			tooltip: "Sets the minimum width for the `xl` breakpoint. The default value is `1200px`. If changing any `grid-breakpoints` value, you must enter a value for all.",
		},
		"container-max-widths-sm": {
			tooltip: "Sets the max-width on `.container` at screen sizes `sm` (min-width: 576px) and sets max-width `.container-fluid-max-sm`. The default value is `540px`. If changing any `container-max-widths` value, you must enter a value for all.",
		},
		"container-max-widths-md": {
			tooltip: "Sets the max-width on `.container` at screen sizes `md` (min-width: 768px) and sets max-width `.container-fluid-max-md`. The default value is `720px`. If changing any `container-max-widths` value, you must enter a value for all.",
		},
		"container-max-widths-lg": {
			tooltip: "Sets the max-width on `.container` at screen sizes `lg` (min-width: 992px) and sets max-width `.container-fluid-max-lg`. The default value is `960px`. If changing any `container-max-widths` value, you must enter a value for all.",
		},
		"container-max-widths-xl": {
			tooltip: "Sets the max-width on `.container` at screen sizes `xs` (min-width: 1200px) and sets max-width `.container-fluid-max-xl`. The default value is `1140px`. If changing any `container-max-widths` value, you must enter a value for all.",
		},
		"container-form-lg-enabled": {
			tooltip: "Enable/disable `.container-form-lg` styles. The default value is `true`.",
		},
		"headings-font-family": {
			tooltip: "Sets the font stack to use on `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `.h1`, `.h2`, `.h3`, `.h4`, `.h5`, `.h6` elements.",
		},
		"headings-font-weight": {
			tooltip: "Sets the `font-weight` to use on heading elements (e.g., `h#` elements, `.h#` classes, and `*-title` classes). ",
		},
		"headings-line-height": {
			tooltip: "Sets the `line-height` to use on heading elements (e.g., `h#` elements, `.h#` classes, and `*-title` classes). This is `1.2` by default.",
		},
		"headings-margin-bottom": {
			tooltip: "Sets `margin-bottom` on heading elements (e.g., `h#` elements and `.h#` classes).",
		},
		"headings-color": {
			tooltip: "Sets the `color` on heading elements (e.g., `h#` elements and `.h#` classes).",
		},
		"": {
			tooltip: "",
		},
		"": {
			tooltip: "",
		},
		"": {
			tooltip: "",
		},
		"": {
			tooltip: "",
		},
		"": {
			tooltip: "",
		},
	};

	for (let i = 0; i < arr.length; i++) {
		let tt;

		if (arr[i].header) {
%>

			<h4 class="cp-variables-form-header"><%= arr[i].header.replace(/-/g, ' ') %></h4>

<%
			continue;
		}

		if (arr[i].subheader) {
%>

			<h5 class="cp-variables-form-subheader"><%= arr[i].subheader.replace(/-/g, ' ') %></h5>

<%
			continue;
		}

		if (variableMap[arr[i].id]) {
			let tooltipText = variableMap[arr[i].id].tooltip;

			if (tooltipText && tooltipText !== '') {
				tt = tooltipText;
			}
		}
%>

		<%- include('../cpTextInput', { id: arr[i].id, color: arr[i].color, tooltip: tt, svgIconsPath: svgIconsPath }) %>

<%
	}
%>