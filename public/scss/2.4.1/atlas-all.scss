// Sass ternary shorthand: if($variable-name, true, false)
// @param $var - The variable name
// @param $val - The default value

@function setter($var, $val: false) {
	@if ($var != null) {
		@return $var;
	}

	@return $val;
}

// Returns a number with the opposite sign, generally used for null values so
// Sass doesn't output value '-null'
// @param $num - a number

@function math-sign($num) {
	@if (type-of($num) == 'number') {
		@return -($num);
	}

	@return null;
}

// Helper for displaying warning messages for required variables
// @param $var - The variable to check
// @param $msg - The error message

@function required($var, $msg: 'This value is required!') {
	@if not ($var) {
		@warn($msg);
	}

	@return $var;
}

// Builds the calc string used in the CSS top property for
// `.collapse-icon-closed` and `.collapse-icon-open`
// @param $container-padding-top - Padding-top of containing element (e.g.,
// $nav-link-padding-y)
// @param $offset - Additional offset to add to $container-padding-top
// @param $font-size - Font-size of containing element (e.g. font-size of
// `.nav-link`)
// @param $line-height - Line-height of containing element (e.g., line-height of
// `.nav-link`)

@function clay-collapse-icon-align($container-padding-top: 0, $offset: 0, $font-size: 1rem, $line-height: 1.5) {
	$str1: '';
	$str2: '';

	@if ($container-padding-top != 0) {
		$str1: '#{$container-padding-top} + ';
	}

	@if ($offset != 0) {
		$str1: '#{$str1}#{$offset} + ';
	}

	$str2: '(((#{$font-size} * #{$line-height}) - 1em) / 2)';

	@return(calc(#{$str1}#{$str2}));
}

// Converts a pixel value to rem based on the `$base` font size. If the return
// value will be used inside a Sass arithmetic operation don't set `$add-unit`
// to true
// @param $number - pixel value to convert
// @param $add-unit - boolean value that adds rem unit at the end
// @param $base - base font size to calculate rem value against

@function clay-px-to-rem($number, $add-unit: false, $base: 16) {
	@if type-of($number) == 'number' {
		@if unit($number) == 'px' {
			$number: $number / 1px;
			$number: $number / $base;
		}
		@else if unitless($number) {
			$number: $number / $base;
		}
		@else {
			@debug 'Unable to convert: #{$number} should be a `px` value.';
		}
	}

	@if $add-unit {
		$number: #{$number}rem;
	}

	@return $number;
}

// Returns name of previous breakpoint or null if first breakpoint
// @param $name - breakpoint name {xs|sm|md|lg|xl}
// @param $breakpoints - Sass map that defines the breakpoints to use
// @param $breakpoint-names - A Sass list of all the keys in $breakpoints

@function clay-breakpoint-prev($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
	@each $value in $breakpoint-names {
		@if (breakpoint-next($value) == $name) {
			@return $value;
		}
	}

	@return nth($breakpoint-names, 1);
}

// str-replace and svg-url functions from http://codepen.io/jakob-e/pen/doMoML

// Function to replace characters in a string
// @param $string - the string to operate on
// @param $search - the character to replace
// @param $replace - the character to replace $search with

@function clay-str-replace($string, $search, $replace: '') {
	$index: str-index($string, $search);

	@if $index {
		$string: str-slice($string, 1, $index - 1) +
			$replace +
			clay-str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

// Function to encode SVG and provide back a data url
// @param $svg - The SVG markup to encode

@function clay-svg-url($svg) {
	$encoded: '';
	$index: 0;
	$slice: 2000;

	$loops: ceil(str-length($svg) / $slice);

	@for $i from 1 through $loops {
		$chunk: str-slice($svg, $index, $index + $slice - 1);

		$chunk: clay-str-replace($chunk, '"', '\'');
		$chunk: clay-str-replace($chunk, ' ', '%20');
		$chunk: clay-str-replace($chunk, '{', '%7B');
		$chunk: clay-str-replace($chunk, '}', '%7D');
		$chunk: clay-str-replace($chunk, '<', '%3C');
		$chunk: clay-str-replace($chunk, '>', '%3E');
		$chunk: clay-str-replace($chunk, '&', '%26');
		$chunk: clay-str-replace($chunk, '#', '%23');

		$encoded: #{$encoded}#{$chunk};

		$index: $index + $slice;
	}

	@return url("data:image/svg+xml;charset=utf8,#{$encoded}");
}

// Function that colors and returns a specified lexicon icon as data uri
// @param $name - Icon name e.g. angle-right
// @param $color - Color of icon

@function clay-icon($name, $color) {
	$lx-icons: clay-get-icons($color);

	@return clay-svg-url(map-get($lx-icons, $name));
}

@function clay-get-icons($color: '') {
	// Don't touch the $lx-icons variable. It's auto-generated to contain all of the icons from the icons directory
	$lx-icons: (

	'add-cell': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M455.1 0H56.9C25.5 0 0 25.5 0 56.9v398.2C0 486.5 25.5 512 56.9 512h398.2c31.4 0 56.9-25.5 56.9-56.9V56.9C512 25.5 486.5 0 455.1 0z"/><path class="lexicon-icon-outline" d="M455.1 0H56.9C25.5 0 0 25.5 0 56.9v398.2C0 486.5 25.5 512 56.9 512h398.2c31.4 0 56.9-25.5 56.9-56.9V56.9C512 25.5 486.5 0 455.1 0zM160 448H64v-96h96v96zm0-128H64V192h96v128zm0-160H64V64h96v96zm160 288H192v-96h128v96zm0-288H192V64h128v96zm128 288h-96v-96h96v96zm0-128h-96V192h96v128zm0-160h-96V64h96v96z" fill="#{$color}"/></svg>',

	'add-column': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M0 56.9v398.2C0 486.5 25.5 512 56.9 512h398.2c31.4 0 56.9-25.5 56.9-56.9V56.9C512 25.5 486.5 0 455.1 0H56.9C25.5 0 0 25.5 0 56.9z"/><path class="lexicon-icon-outline" d="M0 56.9v398.2C0 486.5 25.5 512 56.9 512h398.2c31.4 0 56.9-25.5 56.9-56.9V56.9C512 25.5 486.5 0 455.1 0H56.9C25.5 0 0 25.5 0 56.9zM448 352v96h-96v-96h96zm-288 0v96H64v-96h96zm288-160v128h-96V192h96zm-288 0v128H64V192h96zM448 64v96h-96V64h96zm-288 0v96H64V64h96z" fill="#{$color}"/></svg>',

	'add-role': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="add-role-key-hole lexicon-icon-outline" d="M336 166c0-87.7-128-85.6-128 0 0 28.1 17.9 51.9 42.7 60.8v68.7c0 27 42.7 30.3 42.7 0v-68.7c24.7-8.9 42.6-32.7 42.6-60.8z" fill="#{$color}"/><path class="add-role-border lexicon-icon-outline" d="M445.6 29.9C273.8-9 262.8-10.6 98.4 28.9 78.7 35.2 64 50.7 64 71.3c0 0 .1 194.3.2 195 13.3-6.3 27.6-10.8 42.7-12.9 0 0 .7-164.9 0-182.1 157.3-38.7 172.4-37.7 330.3 1v193C435 381.7 329.4 403.6 288.1 420.5c.2 7.4-5.4 28.6-11 41.6 4 1.2 9.1 4.2 28-1.1 123.3-43 170.4-78.4 174.9-195.7v-193c0-20.6-16.7-36.5-34.4-42.4z" fill="#{$color}"/><path class="add-role-plus lexicon-icon-outline" d="M139 296c-59.1 0-107 48.4-107 108s47.9 108 107 108 107-48.4 107-108-47.9-108-107-108zm53.5 129.6h-32.1V458c0 28.4-42.8 28.4-42.8 0v-32.4H85.5c-28.8 0-28.1-43.2 0-43.2h32.1V350c0-29 42.8-29 42.8 0v32.4h32.1c28.1 0 29.4 43.2 0 43.2z" fill="#{$color}"/></svg>',

	'add-row': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M455.1 0H56.9C25.5 0 0 25.5 0 56.9v398.2C0 486.5 25.5 512 56.9 512h398.2c31.4 0 56.9-25.5 56.9-56.9V56.9C512 25.5 486.5 0 455.1 0z"/><path class="lexicon-icon-outline" d="M455.1 0H56.9C25.5 0 0 25.5 0 56.9v398.2C0 486.5 25.5 512 56.9 512h398.2c31.4 0 56.9-25.5 56.9-56.9V56.9C512 25.5 486.5 0 455.1 0zM160 448H64v-96h96v96zm0-288H64V64h96v96zm160 288H192v-96h128v96zm0-288H192V64h128v96zm128 288h-96v-96h96v96zm0-288h-96V64h96v96z" fill="#{$color}"/></svg>',

	'adjust': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M256 0C114.9 0 0 114.8 0 256s114.8 256 256 256c141.1 0 256-114.9 256-256S397.1 0 256 0z"/><path class="lexicon-icon-outline" d="M256 0C114.9 0 0 114.8 0 256s114.8 256 256 256c141.1 0 256-114.9 256-256S397.1 0 256 0zM56.9 256c0-109.8 89.3-199.1 199.1-199.1v398.2c-109.8 0-199.1-89.3-199.1-199.1z" fill="#{$color}"/></svg>',

	'align-center': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M419.986 96H92.013c-17.664 0-32-14.336-32-32s14.299-32 32-32h328.009c17.664 0 32 14.336 32 32-.037 17.664-14.336 32-32.037 32h.001zM480 224H32c-17.664 0-32-14.299-32-32 0-17.664 14.336-32 32-32h448c17.664 0 32 14.336 32 32 0 17.701-14.336 32-32 32zM419.986 352H92.013c-17.664 0-32-14.336-32-32s14.336-32 32-32h328.009c17.664 0 32 14.336 32 32-.037 17.664-14.336 32-32.037 32h.001zM480 480H32c-17.664 0-32-14.336-32-32s14.336-32 32-32h448c17.664 0 32 14.336 32 32s-14.336 32-32 32z" fill="#{$color}"/></svg>',

	'align-image-center': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline align-image-center-page-bottom" d="M479.9 480H32c-43.7-2-41.5-62.2 0-64h447.9c44.6 2.1 40.9 62.6 0 64z" fill="#{$color}"/><path class="lexicon-icon-outline align-image-center-page-top" d="M479.9 96H32c-43.7-2-41.5-62.2 0-64h447.9c44.6 2.1 40.9 62.7 0 64z" fill="#{$color}"/><path class="lexicon-icon-outline align-image-center-image" fill="#{$color}" d="M128 160h256v192H128z"/></svg>',

	'align-image-left': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline align-image-left-page-bottom" d="M479.9 480H32c-43.7-2-41.5-62.2 0-64h447.9c44.6 2.1 40.9 62.6 0 64z" fill="#{$color}"/><path class="lexicon-icon-outline align-image-left-middle-text1" d="M479.9 224h-160c-44.8-3.4-40.4-62.3 0-64h160c45.5 3.3 40 61.9 0 64z" fill="#{$color}"/><path class="lexicon-icon-outline align-image-left-middle-text2" d="M479.9 352h-160c-44.8-3.4-40.4-62.3 0-64h160c45.5 3.3 40 61.9 0 64z" fill="#{$color}"/><path class="lexicon-icon-outline align-image-left-page-top" d="M479.9 96H32c-43.7-2-41.5-62.2 0-64h447.9c44.6 2.2 40.9 62.7 0 64z" fill="#{$color}"/><path class="lexicon-icon-outline align-image-left-image" fill="#{$color}" d="M0 160h224v192H0z"/></svg>',

	'align-image-right': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline align-image-right-page-top" d="M32.1 32H480c43.7 2 41.5 62.2 0 64H32.1c-44.6-2.1-40.9-62.6 0-64z" fill="#{$color}"/><path class="lexicon-icon-outline align-image-right-middle-text2" d="M32.1 288h160c44.8 3.4 40.4 62.3 0 64h-160c-45.5-3.3-40-61.9 0-64z" fill="#{$color}"/><path class="lexicon-icon-outline align-image-right-middle-text1" d="M32.1 160h160c44.8 3.4 40.4 62.3 0 64h-160c-45.5-3.3-40-61.9 0-64z" fill="#{$color}"/><path class="lexicon-icon-outline align-image-right-page-bottom" d="M32.1 416H480c43.7 2 41.5 62.2 0 64H32.1c-44.6-2.2-40.9-62.7 0-64z" fill="#{$color}"/><path class="lexicon-icon-outline align-image-right-image" fill="#{$color}" d="M288 160h224v192H288z"/></svg>',

	'align-justify': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M32 96h448c17.664 0 32-14.336 32-32s-14.336-32-32-32H32C14.336 32 0 46.336 0 64s14.336 32 32 32zM480 160H32c-17.664 0-32 14.336-32 32s14.336 32 32 32h448c17.664 0 32-14.336 32-32s-14.336-32-32-32zM480 288H32c-17.664 0-32 14.299-32 32 0 17.664 14.336 32 32 32h448c17.664 0 32-14.336 32-32 0-17.701-14.336-32-32-32zM480 416H32c-17.664 0-32 14.336-32 32s14.336 32 32 32h448c17.664 0 32-14.336 32-32s-14.336-32-32-32z" fill="#{$color}"/></svg>',

	'align-left': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M32 96h320c17.664 0 32-14.336 32-32s-14.336-32-32-32H32C14.336 32 0 46.336 0 64s14.336 32 32 32zM32 224h448c17.664 0 32-14.336 32-32s-14.336-32-32-32H32c-17.664 0-32 14.336-32 32 0 17.701 14.336 32 32 32zM32 352h320c17.664 0 32-14.336 32-32s-14.336-32-32-32H32c-17.664 0-32 14.299-32 32 0 17.664 14.336 32 32 32zM480 416H32c-17.664 0-32 14.336-32 32s14.336 32 32 32h448c17.664 0 32-14.336 32-32s-14.336-32-32-32z" fill="#{$color}"/></svg>',

	'align-right': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M512 64c0-17.664-14.336-32-32-32H160c-17.664 0-32 14.336-32 32s14.336 32 32 32h320c17.664 0 32-14.336 32-32zM512 192c0-17.664-14.336-32-32-32H32c-17.664 0-32 14.336-32 32s14.336 32 32 32h448c17.664 0 32-14.299 32-32zM512 320c0-17.701-14.336-32-32-32H160c-17.664 0-32 14.336-32 32s14.336 32 32 32h320c17.664 0 32-14.336 32-32zM0 448c0 17.664 14.336 32 32 32h448c17.664 0 32-14.336 32-32s-14.336-32-32-32H32c-17.664 0-32 14.336-32 32z" fill="#{$color}"/></svg>',

	'analytics': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="analytics-bar1 lexicon-icon-outline" d="M96 415.8H32c-17.7 0-32 14.3-32 32v32c0 17.7 14.3 32 32 32h64c17.7 0 32-14.3 32-32v-32c0-17.7-14.3-32-32-32z" fill="#{$color}"/><path class="analytics-bar2 lexicon-icon-outline" d="M288 319.8h-64c-17.7 0-32 14.3-32 32v128c0 17.7 14.3 32 32 32h64c17.7 0 32-14.3 32-32v-128c0-17.7-14.3-32-32-32z" fill="#{$color}"/><path class="analytics-bar3 lexicon-icon-outline" d="M480 223.8h-64c-17.7 0-32 14.3-32 32v224c0 17.7 14.3 32 32 32h64c17.7 0 32-14.3 32-32v-224c0-17.7-14.3-32-32-32z" fill="#{$color}"/><path class="analytics-uptrend-arrow lexicon-icon-outline" d="M415 110.2v23.6c3.1 44.2 64.6 41.3 64.8 0V32.6c0-17.9-13.2-32.4-32.4-32.4H346.1c-42.8 2.3-43.2 61.9 0 64.8h23.6l-95.3 94.9-114.2-.2h-.1c-10.1 0-19.5 4.7-25.6 12.8L38.6 300.3c-24.2 35.4 25.4 70.9 51.2 38.4l86.5-115.1 111.4.2h.1c8.5 0 16.6-3.4 22.6-9.3L415 110.2z" fill="#{$color}"/></svg>',

	'angle-down': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M256 384a28.207 28.207 0 0 0 19.111-8.272l227.221-227.221c11.058-11.026 11.058-28.941 0-39.999-11.026-11.058-28.94-11.058-39.999 0L256 314.841 49.667 108.508c-11.059-11.058-28.973-11.058-39.999 0-11.059 11.058-11.059 28.972 0 39.999l227.221 227.221A28.194 28.194 0 0 0 256 384z" fill="#{$color}"/></svg>',

	'angle-left': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M114.106 254.607c.22 6.936 2.972 13.811 8.272 19.11L349.6 500.938c11.026 11.058 28.94 11.058 39.999 0 11.058-11.026 11.058-28.94 0-39.999L183.266 254.606 389.599 48.273c11.058-11.059 11.058-28.973 0-39.999-11.058-11.059-28.973-11.059-39.999 0L122.379 235.495c-5.3 5.3-8.052 12.174-8.273 19.111z" fill="#{$color}"/></svg>',

	'angle-right': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M396.394 255.607a28.207 28.207 0 0 0-8.272-19.111L160.901 9.275c-11.026-11.059-28.94-11.059-39.999 0-11.058 11.026-11.058 28.941 0 39.999l206.333 206.333L120.902 461.94c-11.058 11.058-11.058 28.973 0 39.999 11.059 11.059 28.972 11.059 39.999 0l227.221-227.221a28.196 28.196 0 0 0 8.272-19.111z" fill="#{$color}"/></svg>',

	'angle-up': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M255.5 115.213a28.199 28.199 0 0 0-19.111 8.273L9.168 350.707c-11.059 11.026-11.059 28.94 0 39.999 11.026 11.058 28.941 11.058 39.999 0L255.5 184.373l206.333 206.333c11.058 11.058 28.973 11.058 39.999 0 11.058-11.058 11.058-28.973 0-39.999L274.611 123.486c-5.3-5.3-12.175-8.052-19.111-8.273z" fill="#{$color}"/></svg>',

	'announcement': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256 256-114.6 256-256S397.4 0 256 0zM95.9 240.2c.2-28.7 10.4-34.2 24.2-37.4l71.7-6.8v88.3s-54-3-71.9-5.4c-11.6-1.7-24.2-8.8-24-38.7zM192 400.1c-.7 20.9-31 21.6-32 0v-86l32 2.4v83.6zm192.1-63.6c-.3 14.6-17.3 21.3-27.4 11.1-21.4-21.4-86.1-61.2-132.8-61.2v-92.8c46.1 0 111.2-39.1 132.6-60.5 10.8-10.8 27.4-2.6 27.4 11.1l.2 192.3z"/></svg>',

	'anonymize': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M480 220.3l-64-32-52.9-132.2c-6.3-15.6-23.6-23.8-39.6-18.6l-70.2 22.8-64.5-22.1c-16.1-5.5-33.8 2.6-40.1 18.4L96 188.3l-64 32h64v86.3c0 6.9 2.1 13.1 5 18.8 52.4 200.3 256.4 202.3 310 0 2.9-5.7 5-11.9 5-18.8v-86.3h64zm-338.2 128c84.9 0 94.2-64 114.2-64s27.3 64 114.2 64c-54.2 128-173.5 128.6-228.4 0zm242.2-96H128v-32h256v32z" fill="#{$color}"/></svg>',

	'api-lock': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline api-lock-a" d="M112.1 467.3H54.7L43.2 512H0l58.8-191.5h51L168.5 512h-44.9l-11.5-44.7zm-8.7-33.2S86.3 366 83.8 356.2h-1.2c-2.3 10-19.3 77.9-19.3 77.9h40.1z" fill="#{$color}"/><path class="lexicon-icon-outline api-lock-p" d="M192 320.5h65.5c10.2 0 73.4 0 73.4 64 0 64.2-63.5 63.8-73.4 63.8h-26.2V512H192V320.5zm62.9 89.5c23 0 34.6-10.7 34.6-25.4 0-25.3-23.2-27.3-34.6-27.3h-22.3V410h22.3z" fill="#{$color}"/><path class="lexicon-icon-outline api-lock-i" d="M369.3 320.5H416V512h-46.7V320.5z" fill="#{$color}"/><path class="lexicon-icon-outline api-lock-lock" d="M460.8 192.3H288V96.1c0-35.3 28.7-64.1 64-64.1s64 28.8 64 64.1v31.5h32V96.1C448 43 405 0 352 0s-96 43-96 96.1v96.1h-19.2c-28.2 0-44.8 23-44.8 51.3v12.8h256v160.2h32c32 0 32-30.7 32-51.3V243.6c0-28.3-23-51.3-51.2-51.3z" fill="#{$color}"/></svg>',

	'api-web': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline api-web-a" d="M112.1 467.3H54.7L43.2 512H0l58.8-191.5h51L168.5 512h-44.9l-11.5-44.7zm-8.7-33.2S86.3 366 83.8 356.2h-1.2c-2.3 10-19.3 77.9-19.3 77.9h40.1z" fill="#{$color}"/><path class="lexicon-icon-outline api-web-p" d="M192 320.5h65.5c10.2 0 73.4 0 73.4 64 0 64.2-63.5 63.8-73.4 63.8h-26.2V512H192V320.5zm62.9 89.5c23 0 34.6-10.7 34.6-25.4 0-25.3-23.2-27.3-34.6-27.3h-22.3V410h22.3z" fill="#{$color}"/><path class="lexicon-icon-outline api-web-i" d="M369.3 320.5H416V512h-46.7V320.5z" fill="#{$color}"/><path class="lexicon-icon-outline api-web-web" d="M160 241.7c28.1-8.2 64.1-13.1 96-13.1v27.8h32v-25.9c49.8 2.8 96 26.2 96 26.2v31.4l31.9.5.3-16.3s43.7 24.1 64 48.3v31.7s31.9-38 31.9-111.8C512 106.8 403.3 0 272 0S32 107.5 32 240.4v48.1s-8.3-.5 32 0c28-22.6 63.5-32.3 63.5-32.3l32.4.3.1-14.8zm303.3-76.5c-17.9-14.5-38.2-27.1-60.5-37.4-6.3-22.8-14.9-44.1-25.2-63.9 38.6 23.3 69 58.8 85.7 101.3zM256 96.1c-23.4 0-46.1 2.4-67.8 6.5 9.6-23.2 21.6-44.5 36.1-62.5 10.3-2.5 20.9-4.2 31.8-5l-.1 61zm32-60.9c10.9.8 21.5 2.6 31.8 5 16.2 20.3 29.5 44.6 39.6 71.4-22.6-6.8-46.4-11.5-71.4-13.7V35.2zM166.4 63.9c-8.2 15.6-15.2 32.2-20.9 49.8-17.5 5.7-34.1 12.8-49.7 21 17.4-29.1 41.6-53.4 70.6-70.8zM72.1 192.5c18-14.4 39.2-26.5 62.4-36.1-3.6 19.1-5.7 38.9-6.1 59.2-22.4 8.7-43 19.7-61.7 32.4-.1-2.5-3.9-27 5.4-55.5zm93.3 11.3c1.3-21.1 4.4-41.5 9.4-60.8 25.6-6.6 52.7-10.5 81.2-10.5v59.8c-31.7 0-62.1 4.2-90.6 11.5zM288 134.2c30.1 2.9 58.5 9.7 84.3 19.8 4.2 19.2 6.3 39.6 6.9 60.4-28.2-10.5-58.8-17.6-91.2-20.4v-59.8zm187 137.7c-17.2-15.8-37.2-29.7-59.4-41.3 1.5-21.3-1.1-40.6-3.5-57.1 26.5 15.8 48.8 35.4 65.1 57.8.2 3 1.7 24-2.2 40.6z" fill="#{$color}"/></svg>',

	'archive': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M0 128v295.1C0 454.5 25.5 480 56.9 480h398.2c31.4 0 56.9-25.5 56.9-56.9V128H0z"/><path class="lexicon-icon-outline" d="M0 128v295.1C0 454.5 25.5 480 56.9 480h398.2c31.4 0 56.9-25.5 56.9-56.9V128H0zm64 288V192h384v224H64zM480 96H32C14.4 96 0 81.6 0 64s14.4-32 32-32h448c17.6 0 32 14.4 32 32s-14.4 32-32 32z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M320 320H192c-17.6 0-32-14.4-32-32s14.4-32 32-32h128c17.6 0 32 14.4 32 32s-14.4 32-32 32z" fill="#{$color}"/></svg>',

	'arrow-up-full': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M0 256.6C0 388 97.8 496.1 224 512V250.8l-.1.1-27.2 27.4c-30.3 29.8-75.5-15.6-45.3-45.5l81.9-82.2c12.5-12.6 32.8-12.6 45.3 0l81.9 82.5c28.7 29.3-12 76.2-45.3 45.5l-27.1-27.2-.2-.2V512c126.2-15.9 224-124 224-255.4C511-84.5 0-86.5 0 256.6z" fill="#{$color}"/></svg>',

	'asterisk': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M323.6 190l146.7-48.8L512 263.9l-149.2 47.6 93.6 125.2L351.5 513l-96.1-126.4L161.8 513 56.9 435.3l92.3-123.9L0 263.8l40.4-122.6 148 48.8V31h135.3l-.1 159z" fill="#{$color}"/></svg>',

	'audio': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M384 32H192c-35.2 0-64 28.8-64 64v225.6c-5.2-1-10.5-1.6-16-1.6-44.2 0-80 35.8-80 80s35.8 80 80 80 80-35.8 80-80V192h192v97.6c-5.2-1-10.5-1.6-16-1.6-44.2 0-80 35.8-80 80s35.8 80 80 80 80-35.8 80-80V96c0-35.2-28.8-64-64-64z" fill="#{$color}"/></svg>',

	'autosize': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline autosize-border" d="M460.8 51.2v409.6H51.2V51.2h409.6m0-51.2H51.2C23 0 0 23 0 51.2v409.6C0 489 23 512 51.2 512h409.6c28.2 0 51.2-23 51.2-51.2V51.2C512 23 489 0 460.8 0z" fill="#{$color}"/><path class="lexicon-icon-outline autosize-arrow-bottom-left" d="M128 409.6h69.1c23 0 33.3-28.2 17.9-43.5l-15.4-15.4 46.1-46.1c22-21.8-8.7-60.4-35.8-35.8l-46.1 46.1-15.4-15.4c-15.4-15.4-43.5-5.1-43.5 17.9v69.1c-2.5 12.9 7.7 23.1 23.1 23.1z" fill="#{$color}"/><path class="lexicon-icon-outline autosize-arrow-top-right" d="M384 102.4h-69.1c-23 0-33.3 28.2-17.9 43.5l15.4 15.4-46.1 46.1c-23.5 24.8 12 58.9 35.8 35.8l46.1-46.1 15.4 15.4c15.4 15.4 43.5 5.1 43.5-17.9v-69.1c2.5-12.9-7.7-25.7-23.1-23.1z" fill="#{$color}"/></svg>',

	'bars': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M480 64H32C14.336 64 0 49.664 0 32S14.336 0 32 0h448c17.664 0 32 14.336 32 32s-14.336 32-32 32zM480 288H32c-17.664 0-32-14.336-32-32s14.336-32 32-32h448c17.664 0 32 14.336 32 32s-14.336 32-32 32zM480 512H32c-17.664 0-32-14.336-32-32s14.336-32 32-32h448c17.664 0 32 14.336 32 32s-14.336 32-32 32z" fill="#{$color}"/></svg>',

	'bell-off': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M163.5 440.3c30.5 96.7 154.5 95.7 185 0-60.5 7.7-124.5 7.7-185 0z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M461.7 408.3L101.6 48.4c-26-24.4-66 11.1-39.4 39.4l38.5 38.5C79.4 168.8 64 230.5 64 320l-32 32c0 60 218.1 79.1 349.9 55.3l40.4 40.4c23.9 25 66.4-11 39.4-39.4zM128 341.6s0-89.2 28-160l165.7 165.6c-65 4.2-119.9 2.4-193.7-5.6zM373.1 240.8l74.9 74.8C446.4 32 288 32 288 32c0-41-64-42-64 0 0 0-20.4 0-46.7 13.1l54.2 54.1C317 78 358.7 162.3 373.1 240.8z" fill="#{$color}"/></svg>',

	'bell-on': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M384 341.6c-96 10.4-160 10.4-256 0 0 0 0-245.6 128-245.6s128 245.6 128 245.6zM224 32S64 32 64 320l-32 32c0 86 448 88 448 0l-32-32C448 32 288 32 288 32c0-41-64-42-64 0zM163.5 440.3c30.5 96.7 154.5 95.7 185 0-60.5 7.7-124.5 7.7-185 0z" fill="#{$color}"/></svg>',

	'blogs': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M448 0H64C28.7 0 0 28.7 0 64v384c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64z"/><path class="lexicon-icon-outline" d="M448 0H64C28.7 0 0 28.7 0 64v384c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64zm0 448H64V64h384v384z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M384 256H128c-17.7 0-32 14.3-32 32s14.3 32 32 32h256c17.7 0 32-14.3 32-32s-14.3-32-32-32zM288 352H128c-17.7 0-32 14.3-32 32s14.3 32 32 32h160c17.7 0 32-14.3 32-32s-14.3-32-32-32zM384 96H128c-17.6 0-32 14.4-32 32v64c0 17.6 14.4 32 32 32h256c17.6 0 32-14.4 32-32v-64c0-17.6-14.4-32-32-32z" fill="#{$color}"/></svg>',

	'bold': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M262.217 0c25.307 0 47.689 3.511 67.182 10.459 19.456 6.985 35.913 16.603 49.298 28.891 13.349 12.288 23.589 26.843 30.647 43.703s10.606 35.145 10.606 54.894c0 26.478-7.058 49.591-21.175 69.339s-32.146 33.207-54.053 40.448c12.654 2.889 24.466 7.936 35.401 15.177 10.971 7.205 20.553 16.018 28.855 26.368 8.265 10.35 14.848 22.272 19.712 35.73 4.864 13.495 7.314 28.16 7.314 44.069 0 20.699-3.767 39.826-11.301 57.417-7.57 17.591-18.249 32.622-32.146 45.129-13.861 12.507-30.683 22.382-50.395 29.623-19.712 7.131-41.728 10.752-66.085 10.752H75.995v-512h186.222zm-15.36 211.602c23.369 0 41.509-5.778 54.418-17.335s19.346-27.209 19.346-46.921c0-19.749-6.217-35.255-18.615-46.592-12.398-11.301-31.049-16.969-55.845-16.969h-70.839v127.817h71.534zm10.24 217.344c24.832 0 44.069-5.888 57.673-17.701 13.641-11.776 20.443-28.05 20.443-48.75 0-20.224-6.473-36.718-19.346-49.481-12.91-12.763-32.037-19.127-57.307-19.127h-83.237v135.058h81.774z" fill="#{$color}"/></svg>',

	'bookmarks': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M448 0H64C28.7 0 0 28.7 0 64v384c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64z"/><path class="lexicon-icon-outline" d="M448 0H64C28.7 0 0 28.7 0 64v384c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64zm0 448H64V64h160v224l96-81.5 96 81.5V64h32v384z" fill="#{$color}"/></svg>',

	'box-container': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline box-container-border" d="M448 64v384H64V64h384m0-64H64C28.7 0 0 28.7 0 64v384c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64z" fill="#{$color}"/><path class="lexicon-icon-outline box-container-square1" d="M384 256h-64c-17.7 0-32-14.3-32-32v-64c0-17.7 14.3-32 32-32h64c17.7 0 32 14.3 32 32v64c0 17.7-14.3 32-32 32z" fill="#{$color}"/><path class="lexicon-icon-outline box-container-square2" d="M384 416h-64c-17.7 0-32-14.3-32-32v-64c0-17.7 14.3-32 32-32h64c17.7 0 32 14.3 32 32v64c0 17.7-14.3 32-32 32z" fill="#{$color}"/><path class="lexicon-icon-outline box-container-square3" d="M224 416h-64c-17.7 0-32-14.3-32-32v-64c0-17.7 14.3-32 32-32h64c17.7 0 32 14.3 32 32v64c0 17.7-14.3 32-32 32z" fill="#{$color}"/></svg>',

	'breadcrumb': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline breadcrumb-arrow-outline" d="M111.8 128L214 255.8 111.8 383.6H32V128h79.8m0-32H32c-19.2 0-32 12.8-32 32v255.6c0 19.2 12.8 32 32 32h79.9c9.6 0 19.2-3.2 25.6-12.8L239.7 275c9.6-12.8 9.6-28.8 0-38.3L137.4 108.8c-6.4-9.6-16-12.8-25.6-12.8z" fill="#{$color}"/><path class="lexicon-icon-outline breadcrumb-arrow-solid" d="M377 415.5H258.8c-25.6 0-41.5-32-25.6-51.1l86.3-108.6-86.3-108.6c-16-19.2 0-51.1 25.6-51.1H377c9.6 0 19.2 3.2 25.6 12.8l102.2 127.8c9.6 12.8 9.6 28.8 0 38.3L402.6 402.7c-6.4 9.6-16 12.8-25.6 12.8z" fill="#{$color}"/></svg>',

	'calendar': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="calendar-border lexicon-icon-outline" d="M512 160c0-35-28.7-64-63.7-64h-.3V32c0-44-64-41-64 0v64h-96V32c0-40-64-44-64 0v64h-96V32c0-45-64-40-64 0v64h-.3C28.7 96 0 125 0 160v288c0 35 29 64 64 64h352l96-96V160zM384 448.1v-64h64l-64 64zM448 320H320v128H64V160h384v160z" fill="#{$color}"/><path class="calendar-date lexicon-icon-outline" fill="#{$color}" d="M96 192h32v32H96zM160 192h32v32h-32zM224 192h32v32h-32zM288 192h32v32h-32zM352 192h32v32h-32zM96 256h32v32H96zM160 256h32v32h-32zM224 256h32v32h-32zM288 256h32v32h-32zM352 256h32v32h-32zM96 320h32v32H96zM96 384h32v32H96zM160 384h32v32h-32zM160 320h32v32h-32zM224 320h32v32h-32z"/></svg>',

	'camera': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M180.7 79.8c0-15.6-12.8-28.4-28.4-28.4H75.9c-15.6 0-28.4 12.8-28.4 28.4v22.6h133.2V79.8z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M454.6 123.3h-33V78c0-26.8-22-48.8-48.8-48.8H242c-26.8 0-48.8 22-48.8 48.8v45.3H57.4C25.7 123.3 0 149 0 180.6v244.8c0 31.6 25.7 57.4 57.4 57.4h397.3c31.6 0 57.4-25.7 57.4-57.4V180.6c-.1-31.6-25.8-57.3-57.5-57.3zM90.4 241.9c-16.6 0-30.1-13.5-30.1-30.1s13.5-30.1 30.1-30.1 30.1 13.5 30.1 30.1-13.5 30.1-30.1 30.1zm225.8 210.8c-74.8 0-135.5-60.7-135.5-135.5s60.7-135.5 135.5-135.5 135.5 60.7 135.5 135.5-60.6 135.5-135.5 135.5z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M391.5 317.2c0 41.6-33.7 75.3-75.3 75.3s-75.3-33.7-75.3-75.3 33.7-75.3 75.3-75.3 75.3 33.7 75.3 75.3z" fill="#{$color}"/></svg>',

	'cards': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M465.1 0H46.9C21.1 0 0 21.1 0 46.9v130.8c0 25.8 21.1 46.9 46.9 46.9H465c25.8 0 46.9-21.1 46.9-46.9V46.9C512 21.1 490.9 0 465.1 0zM465.1 287.3H46.9c-25.8 0-46.9 21.1-46.9 47v130.8C0 490.9 21.1 512 46.9 512H465c25.8 0 46.9-21.1 46.9-46.9V334.3c.1-25.9-21-47-46.8-47z"/><path class="lexicon-icon-outline" d="M465.1 0H46.9C21.1 0 0 21.1 0 46.9v130.8c0 25.8 21.1 46.9 46.9 46.9H465c25.8 0 46.9-21.1 46.9-46.9V46.9C512 21.1 490.9 0 465.1 0zM448 160.7H64v-96h384v96zM465.1 287.3H46.9c-25.8 0-46.9 21.1-46.9 47v130.8C0 490.9 21.1 512 46.9 512H465c25.8 0 46.9-21.1 46.9-46.9V334.3c.1-25.9-21-47-46.8-47zM448 448H64v-96h384v96z" fill="#{$color}"/></svg>',

	'cards2': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M192 0H32C14.336 0 0 14.336 0 32v160c0 17.664 14.336 32 32 32h160c17.664 0 32-14.336 32-32V32c0-17.664-14.336-32-32-32zM192 288H32c-17.664 0-32 14.336-32 32v160c0 17.664 14.336 32 32 32h160c17.664 0 32-14.336 32-32V320c0-17.664-14.336-32-32-32zM480 0H320c-17.664 0-32 14.336-32 32v160c0 17.664 14.336 32 32 32h160c17.664 0 32-14.336 32-32V32c0-17.664-14.336-32-32-32zM480 288H320c-17.664 0-32 14.336-32 32v160c0 17.664 14.336 32 32 32h160c17.664 0 32-14.336 32-32V320c0-17.664-14.336-32-32-32z" fill="#{$color}"/></svg>',

	'caret-bottom-l': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M165.2 223.7l81.5 85c5.4 5.6 14.2 5.6 19.6 0l81.5-85c8.7-9.1 2.5-24.7-9.8-24.7H175c-12.3.1-18.5 15.6-9.8 24.7z" fill="#{$color}"/></svg>',

	'caret-bottom': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M103.5 204.3l136.1 136.1c9 9 23.7 9 32.7 0l136.1-136.1c14.6-14.6 4.3-39.5-16.4-39.5H119.9c-20.7 0-31 24.9-16.4 39.5z" fill="#{$color}"/></svg>',

	'caret-double-l': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M347.913 199.336l-81.538-85c-5.413-5.642-14.188-5.642-19.6 0l-81.538 85c-8.731 9.101-2.548 24.664 9.8 24.664h163.077c12.348 0 18.531-15.563 9.8-24.664zM165.236 312.664l81.538 85c5.412 5.642 14.188 5.642 19.6 0l81.538-85c8.731-9.101 2.548-24.664-9.8-24.664H175.035c-12.347 0-18.531 15.563-9.8 24.664z" fill="#{$color}"/></svg>',

	'caret-double': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M407.139 151.999L271.003 15.863c-9.036-9.037-23.688-9.037-32.725 0L102.142 151.999c-14.577 14.577-4.253 39.501 16.362 39.501h272.272c20.615 0 30.94-24.924 16.362-39.501zM103.18 359.002l136.136 136.136c9.036 9.036 23.688 9.036 32.724 0l136.136-136.136c14.577-14.577 4.253-39.502-16.362-39.502H119.542c-20.615 0-30.939 24.925-16.362 39.502z" fill="#{$color}"/></svg>',

	'caret-left-l': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M288.8 164.7l-85 81.5c-5.6 5.4-5.6 14.2 0 19.6l85 81.5c9.1 8.7 24.7 2.5 24.7-9.8v-163c-.2-12.3-15.7-18.5-24.7-9.8z" fill="#{$color}"/></svg>',

	'caret-left': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M307.6 103.5L171.5 239.6c-9 9-9 23.7 0 32.7l136.1 136.1c14.6 14.6 39.5 4.3 39.5-16.4V119.9c0-20.7-24.9-31-39.5-16.4z" fill="#{$color}"/></svg>',

	'caret-right-l': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M224.2 347.2l85-81.5c5.6-5.4 5.6-14.2 0-19.6l-85-81.5c-9.1-8.7-24.7-2.5-24.7 9.8v163c.1 12.4 15.6 18.6 24.7 9.8z" fill="#{$color}"/></svg>',

	'caret-right': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M204.3 408.4l136.1-136.1c9-9 9-23.7 0-32.7L204.3 103.5c-14.6-14.6-39.5-4.3-39.5 16.4V392c0 20.7 24.9 31 39.5 16.4z" fill="#{$color}"/></svg>',

	'caret-top-l': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M347.8 288.2l-81.5-85c-5.4-5.6-14.2-5.6-19.6 0l-81.5 85c-8.7 9.1-2.5 24.7 9.8 24.7h163c12.3-.1 18.5-15.6 9.8-24.7z" fill="#{$color}"/></svg>',

	'caret-top': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M408.5 307.7L272.4 171.6c-9-9-23.7-9-32.7 0L103.5 307.7c-14.6 14.6-4.3 39.5 16.4 39.5h272.3c20.6 0 30.9-24.9 16.3-39.5z" fill="#{$color}"/></svg>',

	'categories': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M491.7 262.6l-1-1.2-5.2-5.2c32.9-35 35.5-86.1 6.2-121.6l-1-1.2-96.6-96.6C364.9 7.7 333.2 1.3 316.9.1l-1.1-.1H85.6C63 0 41.5 9.1 25.2 25.6 8.9 42 0 63.5 0 86v340.3c0 22.7 9 44.2 25.3 60.5C41.5 503 63 512 85.6 512l223.1-.1h1.2l1.2-.1c19.4-1.5 56.4-8.5 86.2-39.5l87.4-87.4.7-.7c32.9-34.9 35.6-86.1 6.3-121.6zm-151.2-50.1C335 218 327.7 221 320 221c-15.5 0-29-13.5-29-29 0-16 13-29 29-29 7.8 0 15 3 20.5 8.5s8.5 12.8 8.5 20.5c0 7.8-3 15-8.5 20.5z"/><path class="lexicon-icon-outline" d="M320 256c17.1 0 33.2-6.6 45.3-18.7 12.1-12.1 18.7-28.2 18.7-45.3 0-34.1-29.8-64-64-64-35.3 0-64 28.7-64 64 0 17.1 6.7 33.2 18.7 45.3 12.1 12.1 28.2 18.7 45.3 18.7zm0-93c7.8 0 15 3 20.5 8.5s8.5 12.8 8.5 20.5c0 7.8-3 15-8.5 20.5S327.7 221 320 221c-15.5 0-29-13.5-29-29-.1-16 13-29 29-29z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M0 426.3c0 22.7 9 44.2 25.3 60.5C41.5 503 63 512 85.6 512l223.1-.1h1.2l1.2-.1c19.4-1.5 56.4-8.5 86.2-39.5l87.4-87.4.7-.7c33-35 35.6-86.2 6.3-121.7l-1-1.2-5.2-5.2c32.9-35 35.5-86.1 6.2-121.6l-1-1.2-96.6-96.6C364.9 7.7 333.2 1.3 316.9.1l-1.1-.1H85.6C63 0 41.5 9.1 25.2 25.6 8.9 42 0 63.5 0 86m85.6 234c-5.6 0-10.8-2.2-15.1-6.5-4.3-4.3-6.5-9.5-6.5-15.2V86.1C64 74.5 74.3 64 85.6 64h227.6c7.7.8 21.7 4.2 35.6 18.1l94.3 94.3c7.7 10.3 6.1 24.8-4 35.8l-87.2 87.2-.5.5c-14.5 15.2-33.3 19.2-43.9 20.1H85.6m0 128c-5.6 0-10.8-2.2-15.1-6.5-4.3-4.3-6.5-9.5-6.5-15.2v-45.1c7 1.8 14.2 2.8 21.6 2.8l223.1-.1h1.2l1.2-.1c19.4-1.5 56.4-8.5 86.2-39.5l42.9-42.9 2.9 2.9c7.7 10.3 6.1 24.8-4 35.8l-87.2 87.2-.5.5c-14.5 15.2-33.3 19.2-43.9 20.1l-221.9.1" fill="#{$color}"/></svg>',

	'chain-broken': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M479.311 30.213c-18.425-18.424-42.952-28.587-69.006-28.587h-.029c-26.053 0-50.552 10.133-68.976 28.558l-114.03 114.03c-9.845 9.845-9.845 25.794 0 35.611 9.845 9.845 25.794 9.845 35.611 0l114.03-114.03c8.925-8.925 20.757-13.818 33.365-13.818 12.609 0 24.471 4.923 33.394 13.847 18.425 18.424 18.425 48.365.029 66.789l-114.03 114.03c-9.846 9.845-9.846 25.794 0 35.611 4.923 4.923 11.372 7.37 17.82 7.37s12.897-2.447 17.82-7.37l114.03-114.03c38.029-38.058 38-99.953-.029-138.011zM249.523 326.791L136.299 440.015c-8.867 8.867-20.642 13.733-33.193 13.733h-.058c-12.609-.029-24.471-4.952-33.395-13.875s-13.876-20.786-13.876-33.394c-.029-12.58 4.865-24.384 13.733-33.25l113.224-113.224c9.845-9.845 9.845-25.794 0-35.611-9.845-9.845-25.794-9.845-35.611 0L33.899 337.618c-18.424 18.396-28.529 42.894-28.5 68.949.029 26.025 10.22 50.524 28.645 68.948s42.894 28.587 68.948 28.644h.144c25.996 0 50.437-10.105 68.805-28.5l113.224-113.224c9.846-9.846 9.846-25.795 0-35.611-9.875-9.875-25.794-9.875-35.639-.029z" fill="#{$color}"/></svg>',

	'change': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M32 256c17.6 0 32-14.4 32-32v-96h342.6l-17.1 17.1c-12.4 12.4-12.4 32.8 0 45.3 12.4 12.4 32.8 12.4 45.3 0l67.9-67.9c12.4-12.4 12.4-32.8 0-45.3L434.8 9.3c-12.4-12.4-32.8-12.4-45.3 0-12.4 12.4-12.4 32.8 0 45.3l9.4 9.4H32C14.4 64 0 78.4 0 96v128c0 17.6 14.4 32 32 32zM480 256c-17.6 0-32 14.4-32 32v96H105.4l17.1-17.1c12.4-12.4 12.4-32.8 0-45.3-12.4-12.4-32.8-12.4-45.3 0L9.3 389.5c-12.4 12.4-12.4 32.8 0 45.3l67.9 67.9c12.4 12.4 32.8 12.4 45.3 0 12.4-12.4 12.4-32.8 0-45.3l-9.4-9.4H480c17.6 0 32-14.4 32-32V288c0-17.6-14.4-32-32-32z" fill="#{$color}"/></svg>',

	'check-circle-full': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M484.1 139.7c-54.4 62.6-167 190-203.8 233-5.9 6.8-14.6 11.2-24.3 11.2-8.8 0-16.8-3.6-22.6-9.4l-96-96c-5.8-5.8-9.4-13.8-9.4-22.6 0-17.7 14.3-32 32-32 8.8 0 16.8 3.6 22.6 9.4l71.6 71.6c47-54.8 150.9-171.7 192.5-219.7C399.8 32.9 331.8 0 256 0 114.6 0 0 114.6 0 256s114.6 256 256 256 256-114.6 256-256c0-41.9-10.1-81.4-27.9-116.3z" fill="#{$color}"/></svg>',

	'check-circle': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M254.2 304.9c49.9-58.2 134-156.4 169.5-197.8 5.9-6.8 14.6-11.2 24.3-11.2 17.7 0 32 14.3 32 32 0 8-2.9 15.2-7.7 20.8-41.7 48.6-150.3 175.4-192 224-5.9 6.8-14.6 11.2-24.3 11.2-8.8 0-16.8-3.6-22.6-9.4l-96-96c-5.8-5.8-9.4-13.8-9.4-22.6 0-17.7 14.3-32 32-32 8.8 0 16.8 3.6 22.6 9.4l71.6 71.6zm253.1-97.8c-18.3 21.4-39.5 46.1-60.6 70.6C435.9 373.6 354.7 448 256 448c-106 0-192-86-192-192S150 64 256 64c35.5 0 68.7 9.6 97.2 26.4 15.1-17.6 29.5-34.4 42.1-49.2C355.3 15.2 307.4 0 256 0 114.6 0 0 114.6 0 256s114.6 256 256 256 256-114.6 256-256c0-16.7-1.6-33-4.7-48.9z" fill="#{$color}"/></svg>',

	'check-square': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline check-square-border" d="M480 301.2v114.6c0 35.4-28.7 64.2-64.2 64.2H96.2C60.7 480 32 451.3 32 415.8V96.2C32 60.7 60.7 32 96.2 32h178.6c43.3 0 43.3 64 0 64H96.2L96 415.8l319.8.2.1-114.8c1.1-43.2 64.1-42.2 64.1 0z" fill="#{$color}"/><path class="lexicon-icon-outline check-square-check" d="M224 342.6l-75.3-75.3C134 251 156 231 171.3 244.7l52.7 52.7L436.7 84.7C452 71 474 91 459.3 107.3L224 342.6z" fill="#{$color}"/></svg>',

	'check': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M502.091 60.993c-9.909-9.91-25.962-9.91-35.843 0L129.26 397.981 45.752 314.53c-9.881-9.909-25.962-9.909-35.843 0-9.909 9.909-9.909 25.962 0 35.843l98.257 98.257c2.608 2.608 5.679 4.433 8.924 5.679 4.028 2.464 8.403 4.115 12.952 4.115 6.49 0 12.981-2.464 17.936-7.418L502.09 96.865c9.909-9.909 9.909-25.962 0-35.871v-.001z" fill="#{$color}"/></svg>',

	'chip': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline chip-cpu" d="M304 352h-96c-26.5 0-48-21.5-48-48v-96c0-26.5 21.5-48 48-48h96c26.5 0 48 21.5 48 48v96c0 26.5-21.5 48-48 48z" fill="#{$color}"/><path class="lexicon-icon-outline chip-circuit" d="M489.4 192c29.6 0 29.6-64 0-64H448c0-35.3-28.7-64-64-64V22.6c0-29.6-64-29.6-64 0V64h-32V22.6c0-29.6-64-29.6-64 0V64h-32V22.6c0-29.6-64-29.6-64 0V64c-35.3 0-64 28.7-64 64H22.6c-29.6 0-29.6 64 0 64H64v32H22.6c-29.6 0-29.6 64 0 64H64v32H22.6c-29.6 0-29.6 64 0 64H64c0 35.3 28.7 64 64 64v41.4c0 29.6 64 29.6 64 0V448h32v41.4c0 29.6 64 29.6 64 0V448h32v41.4c0 29.6 64 29.6 64 0V448c35.3 0 64-28.7 64-64h41.4c29.6 0 29.6-64 0-64H448v-32h41.4c29.6 0 29.6-64 0-64H448v-32h41.4zM384 384H128V128h256v256z" fill="#{$color}"/></svg>',

	'code': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M113.632 165.327c-7.608-7.63-19.991-7.63-27.599 0L7.631 243.729c-7.63 7.63-7.63 19.991 0 27.599.536.536 1.227.736 1.807 1.205l76.573 76.572c3.816 3.815 8.813 5.734 13.811 5.734s9.995-1.897 13.811-5.712c7.63-7.63 7.63-19.991 0-27.599l-64.278-64.279 64.278-64.279c7.608-7.653 7.608-20.013 0-27.643zM504.37 243.104c-.536-.536-1.227-.737-1.807-1.205l-76.572-76.572c-7.63-7.63-19.991-7.63-27.599 0-7.63 7.63-7.63 19.991 0 27.599l64.279 64.279-64.279 64.279c-7.63 7.63-7.63 19.991 0 27.599 3.815 3.815 8.813 5.712 13.811 5.712s9.995-1.897 13.811-5.712l78.402-78.402c7.586-7.586 7.586-19.947-.045-27.577zM322.733 162.894L166.554 319.073c-7.63 7.63-7.63 19.991 0 27.599 3.816 3.815 8.813 5.712 13.811 5.712s9.995-1.897 13.811-5.712l156.179-156.179c7.63-7.63 7.63-19.991 0-27.599-7.653-7.63-19.991-7.63-27.621 0z" fill="#{$color}"/></svg>',

	'cog': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M487.4 195.2L466 192c-4.1-13.6-9.5-26.7-16.2-39.2l12.9-17.5c8.5-11.5 7.3-27.5-2.8-37.6l-45.6-45.6c-10.1-10.1-26.1-11.3-37.6-2.8l-17.5 12.9c-12.5-6.6-25.6-12-39.2-16.2l-3.2-21.5C314.7 10.4 302.5 0 288.2 0h-64.5c-14.3 0-26.4 10.4-28.5 24.6L192 46c-13.6 4.1-26.7 9.5-39.2 16.2l-17.5-12.9c-11.5-8.5-27.5-7.3-37.6 2.8L52.2 97.8c-10.1 10.1-11.3 26.1-2.8 37.6l12.9 17.5C55.6 165.3 50.2 178.4 46 192l-21.5 3.2C10.5 197.3 0 209.5 0 223.8v64.5c0 14.3 10.5 26.4 24.6 28.5L46 320c4.1 13.6 9.5 26.7 16.2 39.2l-12.9 17.5c-8.5 11.5-7.3 27.5 2.8 37.6l45.6 45.6c10.1 10.1 26.1 11.3 37.6 2.8l17.5-12.9c12.5 6.7 25.6 12.1 39.2 16.2l3.2 21.5c2.1 14.1 14.3 24.6 28.5 24.6h64.5c14.3 0 26.4-10.5 28.5-24.6L320 466c13.6-4.1 26.7-9.5 39.2-16.2l17.5 12.9c11.5 8.5 27.5 7.3 37.6-2.8l45.6-45.6c10.1-10.1 11.3-26.1 2.8-37.6l-12.9-17.5c6.7-12.5 12.1-25.6 16.2-39.2l21.5-3.2c14.1-2.1 24.6-14.3 24.6-28.5v-64.5c-.1-14.3-10.5-26.5-24.7-28.6zM256 352c-53 0-96-43-96-96s43-96 96-96 96 43 96 96-43 96-96 96z"/><path class="lexicon-icon-outline" d="M256 160c-53 0-96 43-96 96s43 96 96 96 96-43 96-96-43-96-96-96zm0 160c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M487.4 195.2L466 192c-4.1-13.6-9.5-26.7-16.2-39.2l12.9-17.5c8.5-11.5 7.3-27.5-2.8-37.6l-45.6-45.6c-10.1-10.1-26.1-11.3-37.6-2.8l-17.5 12.9c-12.5-6.6-25.6-12-39.2-16.2l-3.2-21.5C314.7 10.4 302.5 0 288.2 0h-64.5c-14.3 0-26.4 10.4-28.5 24.6L192 46c-13.6 4.1-26.7 9.5-39.2 16.2l-17.5-12.9c-11.5-8.5-27.5-7.3-37.6 2.8L52.2 97.8c-10.1 10.1-11.3 26.1-2.8 37.6l12.9 17.5C55.6 165.3 50.2 178.4 46 192l-21.5 3.2C10.5 197.3 0 209.5 0 223.8v64.5c0 14.3 10.4 26.4 24.6 28.5L46 320c4.1 13.6 9.5 26.7 16.2 39.2l-12.9 17.5c-8.5 11.5-7.3 27.5 2.8 37.6l45.6 45.6c10.1 10.1 26.1 11.3 37.6 2.8l17.5-12.9c12.5 6.7 25.6 12.1 39.2 16.2l3.2 21.5c2.1 14.1 14.3 24.6 28.5 24.6h64.5c14.3 0 26.4-10.5 28.5-24.6L320 466c13.6-4.1 26.7-9.5 39.2-16.2l17.5 12.9c11.5 8.5 27.5 7.3 37.6-2.8l45.6-45.6c10.1-10.1 11.3-26.1 2.8-37.6l-12.9-17.5c6.7-12.5 12.1-25.6 16.2-39.2l21.5-3.2c14.1-2.1 24.6-14.3 24.6-28.5v-64.5c-.1-14.3-10.5-26.5-24.7-28.6zm-12 86.4l-39.3 5.9c-4.7 27-15.3 52-30.5 73.6l23.6 32-36.2 36.2-32-23.6c-21.6 15.2-46.6 25.8-73.6 30.5l-5.9 39.3h-51.2l-5.9-39.3c-27-4.7-52-15.3-73.6-30.5l-32 23.6-36.2-36.2 23.6-32c-15.2-21.6-25.8-46.6-30.5-73.6l-39.3-5.9v-51.2l39.3-5.9c4.7-27 15.3-52 30.5-73.6l-23.6-32 36.2-36.2 32 23.6c21.6-15.2 46.6-25.8 73.6-30.5l5.9-39.3h51.2l5.9 39.3c27 4.7 52 15.3 73.6 30.5l32-23.6 36.2 36.2-23.6 32c15.2 21.6 25.8 46.6 30.5 73.6l39.3 5.9v51.2z" fill="#{$color}"/></svg>',

	'columns': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M0 46.9V465c0 25.9 21.1 47 46.9 47h130.8c25.8 0 46.9-21.1 46.9-46.9V46.9c0-25.8-21.1-46.9-46.9-46.9H46.9C21.1 0 0 21.1 0 46.9zM287.3 46.9V465c0 25.8 21.1 46.9 46.9 46.9H465c25.8 0 46.9-21.1 46.9-46.9V46.9C512 21.1 490.9 0 465.1 0H334.3c-25.9 0-47 21.1-47 46.9z"/><path class="lexicon-icon-outline" d="M0 46.9V465c0 25.9 21.1 47 46.9 47h130.8c25.8 0 46.9-21.1 46.9-46.9V46.9c0-25.8-21.1-46.9-46.9-46.9H46.9C21.1 0 0 21.1 0 46.9zM160.7 64v384h-96V64h96zM287.3 46.9V465c0 25.8 21.1 46.9 46.9 46.9H465c25.8 0 46.9-21.1 46.9-46.9V46.9C512 21.1 490.9 0 465.1 0H334.3c-25.9 0-47 21.1-47 46.9zM448 64v384h-96V64h96z" fill="#{$color}"/></svg>',

	'comments': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M448 0H64C28.7 0 0 28.7 0 64v288c0 35.3 28.7 64 64 64h50.7l-41 41c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4l86.3-86.3H448c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64z"/><path class="lexicon-icon-outline" d="M448 0H64C28.7 0 0 28.7 0 64v288c0 35.3 28.7 64 64 64h50.7l-41 41c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4l86.3-86.3H448c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64zm0 352H64V64h384v288z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M384 128H128c-17.7 0-32 14.3-32 32s14.3 32 32 32h256c17.7 0 32-14.3 32-32s-14.3-32-32-32zM288 224H128c-17.7 0-32 14.3-32 32s14.3 32 32 32h160c17.7 0 32-14.3 32-32s-14.3-32-32-32z" fill="#{$color}"/></svg>',

	'community': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M0 256.6c0 337.1 512 344.1 512 0 0-342.1-512-342.1-512 0zm60.6 106.5c7.3-61.8 67.3-106.5 109.3-106.9C296.2 255.1 307 403.8 305 474.8 199.3 505.3 90 429.4 60.6 363.1zM128 176c0-63.7 95.8-63.9 95.8 0 0 65.3-95.8 63.3-95.8 0zm276 85.4c32.7-50.7-8.3-101.4-52.4-101-57 .6-82.8 66.9-47.1 102.2-10.9 1.9-18.7 7.7-19 7.4-22.4-25-54.7-35.6-54.5-35.8 52.6-46.2 19.2-137.8-55.1-138.3-66.4-.5-110.6 81.1-54 139.4-63 26.3-81.3 83.5-81.8 81C4.7 149.3 134.3 31.9 256 31.9c123.5 0 258.3 112.6 211.3 299.2-21.4-46.3-50-63.7-63.3-69.7z" fill="#{$color}"/></svg>',

	'compress': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M192 64c-17.6 0-32 14.4-32 32v25.373L71.995 33.368c-10.623-10.623-28.005-10.623-38.627 0-10.623 10.623-10.623 28.005 0 38.627L121.373 160H96c-17.6 0-32 14.4-32 32s14.4 32 32 32h96c.815 0 1.619-.041 2.419-.101 7.746.646 15.72-1.971 21.614-7.865 5.893-5.893 8.512-13.868 7.865-21.614.06-.799.101-1.605.101-2.419v-96c0-17.6-14.4-32-32-32zM64 320c0 17.6 14.4 32 32 32h25.373l-88.005 88.005c-10.623 10.623-10.623 28.005 0 38.627 10.623 10.623 28.005 10.623 38.627 0L160 390.627V416c0 17.6 14.4 32 32 32s32-14.4 32-32v-96c0-.815-.041-1.62-.101-2.419.646-7.747-1.971-15.721-7.865-21.614-5.893-5.894-13.868-8.512-21.614-7.865a32.268 32.268 0 0 0-2.419-.101h-96c-17.6 0-32 14.4-32 32zM320 448c17.6 0 32-14.4 32-32v-25.373l88.005 88.005c10.623 10.623 28.005 10.623 38.627 0 10.623-10.623 10.623-28.005 0-38.627L390.627 352H416c17.6 0 32-14.4 32-32s-14.4-32-32-32h-96c-.815 0-1.62.041-2.419.101-7.747-.646-15.721 1.971-21.614 7.865-5.894 5.894-8.512 13.868-7.865 21.614-.06.8-.101 1.604-.101 2.419v96c0 17.6 14.4 32 32 32zM448 192c0-17.6-14.4-32-32-32h-25.373l88.005-88.005c10.623-10.623 10.623-28.005 0-38.627-10.623-10.623-28.005-10.623-38.627 0L352 121.373V96c0-17.6-14.4-32-32-32s-32 14.4-32 32v96c0 .815.041 1.619.101 2.419-.646 7.746 1.971 15.72 7.865 21.614 5.894 5.893 13.868 8.512 21.614 7.865.8.06 1.604.101 2.419.101h96c17.6 0 32-14.4 32-32z" fill="#{$color}"/></svg>',

	'control-panel': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M32 128h296.6c11.1 19.1 31.7 32 55.4 32s44.3-12.9 55.4-32H480c17.7 0 32-14.3 32-32s-14.3-32-32-32h-40.6c-11.1-19.1-31.7-32-55.4-32s-44.3 12.9-55.4 32H32C14.3 64 0 78.3 0 96s14.3 32 32 32zM480 384h-40.6c-11.1-19.1-31.7-32-55.4-32s-44.3 12.9-55.4 32H32c-17.7 0-32 14.3-32 32s14.3 32 32 32h296.6c11.1 19.1 31.7 32 55.4 32s44.3-12.9 55.4-32H480c17.7 0 32-14.3 32-32s-14.3-32-32-32zM480 224H183.4c-11.1-19.1-31.7-32-55.4-32s-44.3 12.9-55.4 32H32c-17.7 0-32 14.3-32 32s14.3 32 32 32h40.5c11.1 19.1 31.7 32 55.4 32s44.3-12.9 55.4-32H480c17.7 0 32-14.3 32-32s-14.3-32-32-32z" fill="#{$color}"/></svg>',

	'custom-field': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline custom-field-cursor" fill="#{$color}" d="M416 32V0H288v32h32v448h-32v32h128v-32h-32V32z"/><path class="lexicon-icon-outline custom-field-placeholder" d="M224 224h-96c-41.6 0-41.6 60.8 0 64h96c41.6 0 41.6-64 0-64z" fill="#{$color}"/><path class="lexicon-icon-outline custom-field-border1" d="M288 352H64V160h224V96H32c-19.2 0-32 12.8-32 32v256c0 19.2 12.8 32 32 32h256v-64z" fill="#{$color}"/><path class="lexicon-icon-outline custom-field-border2" d="M480 96h-64v64h32v192h-32v64h64c19.2 0 32-12.8 32-32V128c0-19.2-12.8-32-32-32z" fill="#{$color}"/></svg>',

	'custom-size': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline custom-size-border" d="M332.8 230.4H384v-51.2c0-28.2-23-51.2-51.2-51.2h-51.2v51.2h51.2v51.2zM332.8 409.6v51.2H51.2V179.2h51.2V128H51.2C23 128 0 151 0 179.2v281.6C0 489 23 512 51.2 512h281.6c28.2 0 51.2-23 51.2-51.2v-51.2h-51.2z" fill="#{$color}"/><path class="lexicon-icon-outline custom-size-arrow-right" d="M504.3 302.1l-51.2-48.6c-15.4-15.4-43.5-5.1-43.5 17.9v23H307.2c-33.6 0-34.1 51.2 0 51.2h102.4v23c0 23 28.2 33.3 43.5 17.9l51.2-48.6c10.3-10.2 10.3-25.6 0-35.8z" fill="#{$color}"/><path class="lexicon-icon-outline custom-size-arrow-up" d="M174.1 7.7l-48.6 51.2c-15.4 15.4-5.1 43.5 17.9 43.5h23v102.4c0 34.1 51.2 34.5 51.2 0V102.4h23c23 0 33.3-28.2 17.9-43.5L209.9 7.7c-10.2-10.3-25.6-10.3-35.8 0z" fill="#{$color}"/></svg>',

	'cut': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M335.4 208.2c-16.7-16.6-32.8-32.8-48-47.9 35.1-35.1 68.9-69 96.2-96.3H480c-24.1 24.1-82.4 82.2-144.6 144.2zm-48 47.9c78 77.9 161.9 161.6 192.1 191.9h-95.6c-39.6-39.6-93.2-93.1-144.3-144.1-10.4 10.4-20.4 20.3-29.8 29.8 9 14.6 14.3 31.9 14.3 50.3 0 53-43 96-96 96s-96-43-96-96 43-96 96-96c9.7 0 19 1.4 27.9 4.1 11.2-11.3 23.3-23.3 35.9-35.9L155.7 220c-8.7 2.6-18 4-27.5 4-53 0-96-43-96-96s43-96 96-96 96 43 96 96c0 18.5-5.3 35.8-14.4 50.5 9.5 9.5 19.5 19.4 29.9 29.8l.2-.2c15.1 15.1 31.3 31.2 47.9 47.8-.3.1-.4.2-.4.2zM128 160c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm32 224c0-17.7-14.3-32-32-32s-32 14.3-32 32 14.3 32 32 32 32-14.3 32-32z" fill="#{$color}"/></svg>',

	'date': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="date-border lexicon-icon-outline" d="M512 160.1c0-35-28.7-64-63.7-64h-.3V32c0-44-64-41-64 0v64h-96V32c0-40-64-44-64 0v64h-96V32c0-45-64-40-64 0v64h-.3C28.7 96 0 125 0 160v288.1c0 35 29 64 64 64h352l96-96v-256zM384 448.2v-64h64l-64 64zm64-128.1H320v128H64v-288h384v160z" fill="#{$color}"/><path class="date-1 lexicon-icon-outline" fill="#{$color}" d="M256 416h32V192h-32v32h-32v32h32z"/><path class="date-3 lexicon-icon-outline" fill="#{$color}" d="M96 192h64v32H96zM160 224h32v63h-32zM98.3 288H160v32H98.3zM160 416v-32H96v32zM160 320h32v63h-32z"/></svg>',

	'decimal': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline decimal-hundreths" d="M397.1 129.3c-74 0-82.9 84.1-82.9 125.6s10.4 127.9 82.9 127.9c73.5 0 82.9-86.4 82.9-127.9 0-41.3-9.4-125.6-82.9-125.6zm0 34.5c19.4-.4 29.3 15.8 34.7 34.9l-75 75c-1.6-42.5-1.2-110.7 40.3-109.9zm0 184.4c-18.9-.8-28.8-16.7-34.2-35.3l74.6-74.6c-.5 42.2.8 109.9-40.4 109.9z" fill="#{$color}"/><path class="lexicon-icon-outline decimal-tenths" d="M199.2 129.3c-74 0-82.9 84.1-82.9 125.6s10.4 127.9 82.9 127.9c73.5 0 82.9-86.4 82.9-127.9 0-41.3-9.4-125.6-82.9-125.6zm0 34.5c19.4-.4 29.3 15.8 34.7 34.9l-75 75c-1.5-42.5-1.2-110.7 40.3-109.9zm0 184.4c-18.9-.8-28.8-16.7-34.2-35.3l74.6-74.6c-.5 42.2.9 109.9-40.4 109.9z" fill="#{$color}"/><circle class="lexicon-icon-outline decimal-decimal-point" cx="64" cy="348.8" r="32" fill="#{$color}"/></svg>',

	'desktop': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline desktop-monitor" d="M448 0H64C28.8 0 0 28.8 0 64v289.2c0 35.2 28.8 64 64 64h384c35.2 0 64-28.8 64-64V64c0-35.2-28.8-64-64-64zm0 320H64V64h384v256z" fill="#{$color}"/><path class="lexicon-icon-outline desktop-stand" d="M320 448H192c-42.3 0-43 64 0 64h128c42.3 0 43.3-64 0-64z" fill="#{$color}"/><path class="lexicon-icon-outline desktop-content-circle" d="M160 256c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64z" fill="#{$color}"/><path class="lexicon-icon-outline desktop-content-rectangle1" fill="#{$color}" d="M288 128h128v32H288z"/><path class="lexicon-icon-outline desktop-content-rectangle2" fill="#{$color}" d="M288 224h96v32h-96z"/></svg>',

	'devices': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline devices1" d="M224 128H32c-17.7 0-32 14.3-32 32v320c0 17.7 14.3 32 32 32h192c17.7 0 32-14.3 32-32V160c0-17.7-14.3-32-32-32zM64 416V192h128v224H64z" fill="#{$color}"/><path class="lexicon-icon-outline devices2" d="M448 0H192c-35.3 0-64 28.7-64 64v32h64V64h256v384H288v64h160c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64z" fill="#{$color}"/></svg>',

	'diagram': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline diagram-connector" d="M256 368v-32c0-22.4 32-22.4 32 0v32c0 22.4-32 22.4-32 0zM304 448h-32c-22.4 0-22.4-32 0-32h32c22.4 0 22.4 32 0 32zM256 272v-64c0-22.4 32-22.4 32 0v64c0 22.4-32 22.4-32 0zM256 144v-32c0-22.4 32-22.4 32 0v32c0 22.4-32 22.4-32 0zM272 32h32c22.4 0 22.4 32 0 32h-32c-22.4 0-22.4-32 0-32z" fill="#{$color}"/><path class="lexicon-icon-outline diagram-partbox1" d="M208 224h-16v-64c0-19.2-12.8-32-32-32H32c-19.2 0-32 12.8-32 32v192c0 19.2 12.8 32 32 32h128c19.2 0 32-12.8 32-32v-96h16c19.2 0 22.4-32 0-32zm-80 96H64V192h64v128z" fill="#{$color}"/><path class="lexicon-icon-outline diagram-partbox2" d="M480 384h-64c-19.2 0-32 12.8-32 32h-16c-22.4 0-22.4 32 0 32h16v32c0 19.2 12.8 32 32 32h64c19.2 0 32-12.8 32-32v-64c0-19.2-12.8-32-32-32z" fill="#{$color}"/><path class="lexicon-icon-outline diagram-partbox3" d="M480 0h-64c-19.2 0-32 12.8-32 32h-16c-22.4 0-22.4 32 0 32h16v32c0 19.2 12.8 32 32 32h64c19.2 0 32-12.8 32-32V32c0-19.2-12.8-32-32-32z" fill="#{$color}"/><path class="lexicon-icon-outline diagram-partbox4" d="M480 192h-64c-19.2 0-32 12.8-32 32h-16c-22.4 0-22.4 32 0 32h16v32c0 19.2 12.8 32 32 32h64c19.2 0 32-12.8 32-32v-64c0-19.2-12.8-32-32-32z" fill="#{$color}"/></svg>',

	'diary': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline diary-inner-content1" d="M305.7 128h-99.4c-19.3 0-19.3 32 0 32h99.4c19.3 0 19.3-32 0-32z" fill="#{$color}"/><path class="lexicon-icon-outline diary-inner-content2" d="M305.7 192h-99.4c-19.3 0-19.3 32 0 32h99.4c19.3 0 19.3-32 0-32z" fill="#{$color}"/><path class="lexicon-icon-outline diary-border" d="M384 0H57.2C25.6 0 0 25.6 0 57.2v397.5C0 486.4 25.6 512 57.2 512H384c35.3 0 64-28.7 64-64v-96h32c42 0 42-64 0-64h-32v-32h32c42 0 42-64 0-64h-32v-32h32c42 0 42-64 0-64h-32V64c0-35.3-28.7-64-64-64zM128 448V64h256v384H128z" fill="#{$color}"/></svg>',

	'document-code': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M332.8 0H102.4C74.1 0 51.2 22.9 51.2 51.2v409.6c0 28.3 22.9 51.2 51.2 51.2h307.2c28.3 0 51.2-22.9 51.2-51.2V128L332.8 0zM148.3 366.8l72.4-72.4-72.4-72.4 18.1-18.1 90.5 90.5-90.5 90.5-18.1-18.1zM358.4 384H256v-25.6h102.4V384z" fill="#{$color}"/></svg>',

	'document-compressed': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline document-compressed-document" d="M332.8 0H102.4C74.1 0 51.2 22.9 51.2 51.2v409.6c0 28.3 22.9 51.2 51.2 51.2h307.2c28.3 0 51.2-22.9 51.2-51.2V128L332.8 0zm0 409.6H179.2v51.2h-25.6v-51.2h25.6v-51.2h-25.6v-51.2h25.6V256h-25.6v-51.2h25.6v-51.2h-25.6v-51.2h25.6V51.2h25.6v51.2h-25.6v51.2h25.6v51.2h-25.6V256h25.6v51.2h128v102.4z" fill="#{$color}"/><path class="lexicon-icon-outline document-compressed-zipper-hole" fill="#{$color}" d="M256 332.8h51.2V384H256z"/></svg>',

	'document-default': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M332.8 0H102.4C74.1 0 51.2 22.9 51.2 51.2v409.6c0 28.3 22.9 51.2 51.2 51.2h307.2c28.3 0 51.2-22.9 51.2-51.2V128L332.8 0z" fill="#{$color}"/></svg>',

	'document-image': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M332.8 0H102.4C74.1 0 51.2 22.9 51.2 51.2v409.6c0 28.3 22.9 51.2 51.2 51.2h307.2c28.3 0 51.2-22.9 51.2-51.2V128L332.8 0zM179.2 204.8c14.1 0 25.6 11.5 25.6 25.6 0 14.1-11.5 25.6-25.6 25.6-14.1 0-25.6-11.5-25.6-25.6 0-14.1 11.5-25.6 25.6-25.6zM128 384l76.8-102.4 51.2 51.2 51.2-76.8L384 384H128z" fill="#{$color}"/></svg>',

	'document-multimedia': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M332.8 0H102.4C74.1 0 51.2 22.9 51.2 51.2v409.6c0 28.3 22.9 51.2 51.2 51.2h307.2c28.3 0 51.2-22.9 51.2-51.2V128L332.8 0zM192 395.5V193.3l152.3 101.1L192 395.5z" fill="#{$color}"/></svg>',

	'document-presentation': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M332.8 0H102.4C74.1 0 51.2 22.9 51.2 51.2v409.6c0 28.3 22.9 51.2 51.2 51.2h307.2c28.3 0 51.2-22.9 51.2-51.2V128L332.8 0zm-25.6 384H204.8v-25.6h102.4V384zm76.8-51.2H128v-128h256v128z" fill="#{$color}"/></svg>',

	'document-table': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline document-table-box-1" fill="#{$color}" d="M153.6 256h76.8v128h-76.8z"/><path class="lexicon-icon-outline document-table-box-3" fill="#{$color}" d="M256 332.8h102.4V384H256z"/><path class="lexicon-icon-outline document-table-box-2" fill="#{$color}" d="M256 256h102.4v51.2H256z"/><path class="lexicon-icon-outline document-table-document" d="M332.8 0H102.4C74.1 0 51.2 22.9 51.2 51.2v409.6c0 28.3 22.9 51.2 51.2 51.2h307.2c28.3 0 51.2-22.9 51.2-51.2V128L332.8 0zM384 409.6H128V204.8h256v204.8z" fill="#{$color}"/></svg>',

	'document-text': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M332.8 0H102.4C74.1 0 51.2 22.9 51.2 51.2v409.6c0 28.3 22.9 51.2 51.2 51.2h307.2c28.3 0 51.2-22.9 51.2-51.2V128L332.8 0zM256 384H128v-25.6h128V384zm128-76.8H128v-25.6h256v25.6zm0-76.8H128v-25.6h256v25.6z" fill="#{$color}"/></svg>',

	'document-vector': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M332.8 0H102.4C74.1 0 51.2 22.9 51.2 51.2v409.6c0 28.3 22.9 51.2 51.2 51.2h307.2c28.3 0 51.2-22.9 51.2-51.2V128L332.8 0zm-25.6 409.6H204.8V384h102.4v25.6zm0-51.2H204.8l-51.2-76.8 89.6-160v138.3c-25.6 18.5-7.5 46.7 12.8 47.3 19.2-1.1 38.9-26.1 12.8-47.3V121.6l89.6 160-51.2 76.8z" fill="#{$color}"/></svg>',

	'document': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline document-border" d="M320 64v64c0 17.7 14.3 32 32 32h64v288H96V64h224zm5.5-64H96C60.7 0 32 28.7 32 64v384c0 35.3 28.7 64 64 64h320c35.3 0 64-28.7 64-64V154.5c0-33.5-18-44.5-63.5-90S360 0 325.5 0z" fill="#{$color}"/><path class="lexicon-icon-outline document-text-1" d="M336 256H176c-22 0-21-32 0-32h160c20 0 22 32 0 32z" fill="#{$color}"/><path class="lexicon-icon-outline document-text-2" d="M336 320H176c-22 0-21-32 0-32h160c20 0 22 32 0 32z" fill="#{$color}"/><path class="lexicon-icon-outline document-text-3" d="M272 384h-96c-22 0-21-32 0-32h96c20 0 22 32 0 32z" fill="#{$color}"/></svg>',

	'documents-and-media': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M448 96h-64V64c0-35.3-28.7-64-64-64H64C28.7 0 0 28.7 0 64v256c0 35.3 28.7 64 64 64h32v64c0 35.3 28.7 64 64 64h288c35.3 0 64-28.7 64-64V160c0-35.3-28.7-64-64-64z"/><path class="lexicon-icon-outline" d="M448 96h-64V64c0-35.3-28.7-64-64-64H64C28.7 0 0 28.7 0 64v256c0 35.3 28.7 64 64 64h32v64c0 35.3 28.7 64 64 64h288c35.3 0 64-28.7 64-64V160c0-35.3-28.7-64-64-64zM64 320V64h256v256H64zm384 128H160v-64h160c35.3 0 64-28.7 64-64V160h64v288z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M148 188.8c2.5 2.2 5.5 3.2 8.7 3.2 3.9 0 6.9-1.2 8.9-3.5 1.5-1.8 3.2-4.9 5.1-9.6l3.7-8.9h34.4l3.7 8.7v.1c.6 1.4 1.4 2.9 2.2 4.7 1 2 1.9 3.6 2.9 4.6 1.1 1.2 2.4 2.2 3.9 2.9 1.5.7 3.3 1 5.4 1 3.5 0 6.5-1.1 9-3.4 2.6-2.3 3.9-5.1 3.9-8.1 0-2.5-1-5.9-3.3-10.7l-25.1-55.5c-1.2-2.8-2.2-5-2.9-6.7-.9-1.9-2-3.7-3.2-5.3-1.4-1.9-3.3-3.4-5.6-4.5-2.3-1.2-5.1-1.8-8.4-1.8-3.2 0-6 .6-8.3 1.8-2.3 1.2-4.2 2.7-5.6 4.6-1.3 1.7-2.5 3.8-3.5 6.3l-2.5 5.8-24.5 55.9c-1.1 2.3-1.8 4.1-2.3 5.5-.6 1.6-.8 3.2-.8 4.8.2 2.1.9 5.2 4.2 8.1zm43.5-61.6l9.3 22.8h-18.4l9.1-22.8zM128 288h128c17.7 0 32-14.3 32-32s-14.3-32-32-32H128c-17.7 0-32 14.3-32 32s14.3 32 32 32z" fill="#{$color}"/></svg>',

	'download': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="download-arrow-down lexicon-icon-outline" d="M233.2 374.5c13.1 13.2 33.5 12.2 45.6 0l71.3-71.6c29.8-29.9-14.3-77.2-45.6-45.8l-16.6 16.7V32.1c0-42.5-63.7-43-63.7 0v241.7l-16.6-16.7c-30.8-30.9-75.5 15.8-45.6 45.8l71.2 71.6z" fill="#{$color}"/><path class="download-border lexicon-icon-outline" d="M384 384.5v63.8H128v-63.8c0-43.8-64-41.8-64 0V512h384V384.5c0-43.8-64-42.8-64 0z" fill="#{$color}"/></svg>',

	'drag': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><circle class="lexicon-icon-outline drag-dot-1" cx="192" cy="128" r="32" fill="#{$color}"/><circle class="lexicon-icon-outline drag-dot-2" cx="192" cy="256" r="32" fill="#{$color}"/><circle class="lexicon-icon-outline drag-dot-3" cx="192" cy="384" r="32" fill="#{$color}"/><circle class="lexicon-icon-outline drag-dot-4" cx="320" cy="128" r="32" fill="#{$color}"/><circle class="lexicon-icon-outline drag-dot-5" cx="320" cy="256" r="32" fill="#{$color}"/><circle class="lexicon-icon-outline drag-dot-6" cx="320" cy="384" r="32" fill="#{$color}"/></svg>',

	'dynamic-data-list': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="dynamic-data-list-bolt lexicon-icon-outline" d="M474.6 416.2L429.4 390l22.8-54.7c4.7-11.4-8.3-19.9-16.9-12.5l-80 75.6c-5.4 6.1-3.9 13.1 2 17l45.3 26.3-23.1 55.3c-4.1 10.7 8.1 20.2 17.2 11.9l80-75.6c4.7-4.3 4.7-13.5-2.1-17.1z" fill="#{$color}"/><path class="dynamic-data-list-border lexicon-icon-outline" d="M415.7 0H95.9C60.6 0 32 28.6 32 63.9V384c0 35.3 28.7 64 63.9 64h192.2l-.1-64h-64v-64h128V192h64v64.2h64V64.3C480 28.8 451.2 0 415.7 0zM160 384H96v-64h64v64zm0-128H96v-64h64v64zm0-128H96V64h64v64zm128 128h-64v-64h64v64zm0-128h-64V64h64v64zm128 0h-64V64h64v64z" fill="#{$color}"/></svg>',

	'dynamic-data-mapping': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline ddm-border1" d="M64 87.6h128v32h32v-64c0-19.2-12.8-32-32-32H32c-19.2 0-32 12.8-32 32v288c0 19.2 12.8 32 32 32h83.2c3.2-22.4 9.6-44.8 22.4-64H64v-224z" fill="#{$color}"/><path class="lexicon-icon-outline ddm-border2" d="M480 23.6H320c-19.2 0-32 12.8-32 32v64h32v-32h128v224h-73.6c12.8 19.2 19.2 41.6 22.4 64H480c19.2 0 32-12.8 32-32v-288c0-19.2-12.8-32-32-32z" fill="#{$color}"/><path class="lexicon-icon-outline ddm-lightning" d="M313.6 391.6L268.8 366l22.4-54.4c6.4-12.8-9.6-19.2-16-12.8l-80 76.8c-6.4 6.4-6.4 12.8 3.2 16l44.8 25.6-22.4 54.4c-3.2 12.8 9.6 19.2 16 12.8l80-76.8c3.2-3.2 3.2-12.8-3.2-16z" fill="#{$color}"/><path class="lexicon-icon-outline ddm-barbell" d="M368 151.6c-22.4 0-38.4 12.8-44.8 32H188.8c-6.4-19.2-22.4-32-44.8-32-64 0-64 96 0 96 22.4 0 38.4-12.8 44.8-32h134.4c6.4 19.2 25.6 32 44.8 32 64 0 64-96 0-96z" fill="#{$color}"/></svg>',

	'edit-layout': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M455.1 0H56.9C25.5 0 0 25.5 0 56.9v398.2C0 486.5 25.5 512 56.9 512h398.2c31.4 0 56.9-25.5 56.9-56.9V56.9C512 25.5 486.5 0 455.1 0z"/><path class="lexicon-icon-outline" d="M455.1 0H56.9C25.5 0 0 25.5 0 56.9v398.2C0 486.5 25.5 512 56.9 512h398.2c31.4 0 56.9-25.5 56.9-56.9V56.9C512 25.5 486.5 0 455.1 0zM160 462.2H60.5V64H160v398.2zm64-14.2V288h224v160H224zm224-224H224V64h224v160z" fill="#{$color}"/></svg>',

	'effects': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M352 128c0 53.019-42.981 96-96 96s-96-42.981-96-96 42.981-96 96-96 96 42.981 96 96zM480 384c0 53.019-42.981 96-96 96s-96-42.981-96-96 42.981-96 96-96 96 42.981 96 96zM224 384c0 53.019-42.981 96-96 96s-96-42.981-96-96 42.981-96 96-96 96 42.981 96 96z" fill="#{$color}"/></svg>',

	'ellipsis-h': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M320 256c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-35.346 28.654-64 64-64s64 28.654 64 64zM128 256c0 35.346-28.654 64-64 64S0 291.346 0 256c0-35.346 28.654-64 64-64s64 28.654 64 64zM512 256c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-35.346 28.654-64 64-64s64 28.654 64 64z" fill="#{$color}"/></svg>',

	'ellipsis-v': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M319 255.5c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-35.346 28.654-64 64-64s64 28.654 64 64zM319 448c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-35.346 28.654-64 64-64s64 28.654 64 64zM319 64c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-35.346 28.654-64 64-64s64 28.654 64 64z" fill="#{$color}"/></svg>',

	'embed': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M148.1 102.3c-14.2-10.5-34.2-7.6-44.8 6.6l-95 128c-8.4 11.3-8.4 26.8 0 38.1l95 128c6.3 8.5 15.9 12.9 25.7 12.9 6.6 0 13.3-2.1 19-6.3 14.2-10.5 17.2-30.6 6.6-44.8L73.9 256l80.8-108.9c10.5-14.2 7.6-34.3-6.6-44.8zM505.7 238.9l-95-128c-10.5-14.2-30.6-17.2-44.8-6.6-14.2 10.5-17.2 30.6-6.6 44.8L440.1 258l-80.8 108.9c-10.5 14.2-7.6 34.2 6.6 44.8 5.7 4.3 12.4 6.3 19 6.3 9.8 0 19.4-4.5 25.7-12.9l95-128c8.5-11.3 8.5-26.8.1-38.2zM296.8 97c-17.1-4.3-34.5 6.1-38.8 23.3l-64 256c-4.3 17.1 6.1 34.5 23.3 38.8 2.6.7 5.2 1 7.8 1 14.3 0 27.4-9.7 31-24.2l64-256c4.2-17.3-6.2-34.7-23.3-38.9z" fill="#{$color}"/></svg>',

	'envelope-closed': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M448 64H64C28.7 64 0 92.7 0 128v256c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V128c0-35.3-28.7-64-64-64zm-32 64L275.2 233.6c-11.3 8.5-27.1 8.5-38.4 0L96 128h320zM64 384V184l134.4 100.8c33.1 25.2 77.1 26.2 115.2 0L448 184v200H64z" fill="#{$color}"/></svg>',

	'envelope-open': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M313.6 19.1C278-8 232.7-4.7 198.4 19.1c0 0-174.5 121.2-183.7 132.2-9 8-14.7 25.3-14.7 40.8v256c0 35.3 28.6 64 64 64h384c35.3 0 64-28.6 64-64V192c0-15.2-5.7-31.7-14.2-40.1-9.2-11.4-184.2-132.8-184.2-132.8zm-76.8 51.2c11.3-8.5 27.1-8.5 38.4 0L426.8 184 275.2 297.6c-11.3 8.5-27.1 8.5-38.4 0L85.2 183.9 236.8 70.3zM64 448V248l134.4 100.8c33.6 25.9 80.3 25.9 115.2 0L448 248v200H64z" fill="#{$color}"/></svg>',

	'environment-connected': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="environment-connected-server-bottom-right lexicon-icon-outline" d="M480 288h-96c-17.7 0-32 14.3-32 32v160c0 17.7 14.3 32 32 32h96c17.7 0 32-14.3 32-32V320c0-17.7-14.3-32-32-32zm-16 96h-64c-21.3 0-22-32 0-32h64c21.3 0 20.9 32 0 32z" fill="#{$color}"/><path class="environment-connected-server-bottom-left lexicon-icon-outline" d="M128 288H32c-17.7 0-32 14.3-32 32v160c0 17.7 14.3 32 32 32h96c17.7 0 32-14.3 32-32V320c0-17.7-14.3-32-32-32zm-16 96H48c-21.3 0-22-32 0-32h64c21.3 0 20.9 32 0 32z" fill="#{$color}"/><path class="environment-connected-server-top lexicon-icon-outline" d="M320 0H192c-17.7 0-32 14.3-32 32v160c0 17.7 14.3 32 32 32h128c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32zm-16 96h-96c-21.3 0-22-32 0-32h96c21.3 0 20.9 32 0 32z" fill="#{$color}"/><path class="environment-connected-border-bottom lexicon-icon-outline" fill="#{$color}" d="M192 384h128v32H192z"/><path class="environment-connected-border-left lexicon-icon-outline" d="M128 95.2C80.7 133 50.3 190.9 50.3 256h27.4c0-48.1 19.2-91.7 50.3-123.8v-37z" fill="#{$color}"/><path class="environment-connected-border-right lexicon-icon-outline" d="M384 95.2v37c31.1 32.1 50.3 75.7 50.3 123.8h27.4c0-65.1-30.4-123-77.7-160.8z" fill="#{$color}"/></svg>',

	'environment-disconnected': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="environment-disconnected-server-bottom-right lexicon-icon-outline" d="M480 288h-96c-17.7 0-32 14.3-32 32v160c0 17.7 14.3 32 32 32h96c17.7 0 32-14.3 32-32V320c0-17.7-14.3-32-32-32zm-16 96h-64c-21.3 0-22-32 0-32h64c21.3 0 20.9 32 0 32z" fill="#{$color}"/><path class="environment-disconnected-server-bottom-left lexicon-icon-outline" d="M128 288H32c-17.7 0-32 14.3-32 32v160c0 17.7 14.3 32 32 32h96c17.7 0 32-14.3 32-32V320c0-17.7-14.3-32-32-32zm-16 96H48c-21.3 0-22-32 0-32h64c21.3 0 20.9 32 0 32z" fill="#{$color}"/><path class="environment-disconnected-server-top lexicon-icon-outline" d="M320 0H192c-17.7 0-32 14.3-32 32v160c0 17.7 14.3 32 32 32h128c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32zm-16 96h-96c-21.3 0-22-32 0-32h96c21.3 0 20.9 32 0 32z" fill="#{$color}"/></svg>',

	'environment': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M352 32H160c-35.3 0-64 28.7-64 64v320c0 35.3 28.7 64 64 64h192c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64zm-16 224H176c-21.3 0-22-32 0-32h160c21.3 0 20.9 32 0 32zm0-96H176c-21.3 0-22-32 0-32h160c21.3 0 20.9 32 0 32zm0-64c-21.3 0-22-32 0-32 21.3 0 20.9 32 0 32z" fill="#{$color}"/></svg>',

	'exclamation-circle': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M491.9 156.3C479 125.8 460.5 98.5 437 75s-50.8-42-81.3-54.9C324.1 6.8 290.5 0 256 0s-68.1 6.8-99.7 20.1C125.8 33 98.5 51.5 75 75s-42 50.8-54.9 81.3C6.8 187.9 0 221.5 0 256s6.8 68.1 20.1 99.7C33 386.2 51.5 413.5 75 437s50.9 41.9 81.4 54.8c31.6 13.4 65.1 20.1 99.7 20.1s68.1-6.8 99.7-20.1c30.5-12.9 57.9-31.3 81.4-54.8s41.9-50.9 54.8-81.4c13.4-31.6 20.1-65.1 20.1-99.7s-6.9-68-20.2-99.6z"/><path class="lexicon-icon-outline" d="M240 288h32l16-160h-64l16 160zM288 352c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M491.9 156.3C479 125.8 460.5 98.5 437 75s-50.8-42-81.3-54.9C324.1 6.8 290.5 0 256 0s-68.1 6.8-99.7 20.1C125.8 33 98.5 51.5 75 75s-42 50.8-54.9 81.3C6.8 187.9 0 221.5 0 256s6.8 68.1 20.1 99.7C33 386.2 51.5 413.5 75 437s50.9 41.9 81.4 54.8c31.6 13.4 65.1 20.1 99.7 20.1s68.1-6.8 99.7-20.1c30.5-12.9 57.9-31.3 81.4-54.8s41.9-50.9 54.8-81.4c13.4-31.6 20.1-65.1 20.1-99.7s-6.9-68-20.2-99.6zM256 448c-106 0-192-86-192-192S150 64 256 64s192 86 192 192-86 192-192 192z" fill="#{$color}"/></svg>',

	'exclamation-full': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256 256-114.6 256-256S397.4 0 256 0zm0 384c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm16-96h-32l-16-160h64l-16 160z" fill="#{$color}"/></svg>',

	'expand': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M480 352c-17.6 0-32 14.4-32 32v25.373l-88.005-88.005c-10.623-10.623-28.005-10.623-38.627 0-10.623 10.623-10.623 28.005 0 38.627L409.373 448H384c-17.6 0-32 14.4-32 32s14.4 32 32 32h96c.815 0 1.62-.041 2.419-.101 7.747.646 15.721-1.971 21.614-7.865 5.894-5.894 8.512-13.868 7.865-21.614.06-.8.101-1.604.101-2.419v-96c0-17.6-14.4-32-32-32zM352 32c0 17.6 14.4 32 32 32h25.373l-88.005 88.005c-10.623 10.623-10.623 28.005 0 38.627 10.623 10.623 28.005 10.623 38.627 0L448 102.627V128c0 17.6 14.4 32 32 32s32-14.4 32-32V32c0-.814-.041-1.619-.101-2.419.646-7.747-1.971-15.72-7.865-21.614S490.166-.544 482.42.102c-.8-.06-1.604-.102-2.419-.102h-96c-17.6 0-32 14.4-32 32zM32 160c17.6 0 32-14.4 32-32v-25.373l88.005 88.005c10.623 10.623 28.005 10.623 38.627 0 10.623-10.623 10.623-28.005 0-38.627L102.627 64H128c17.6 0 32-14.4 32-32S145.6 0 128 0H32c-.814 0-1.619.041-2.419.102-7.747-.646-15.72 1.972-21.614 7.865C2.073 13.861-.544 21.835.102 29.581.042 30.38 0 31.186 0 32v96c0 17.6 14.4 32 32 32zM160 480c0-17.6-14.4-32-32-32h-25.373l88.005-88.005c10.623-10.623 10.623-28.005 0-38.627-10.623-10.623-28.005-10.623-38.627 0L64 409.373V384c0-17.6-14.4-32-32-32S0 366.4 0 384v96c0 .815.041 1.62.102 2.419-.646 7.747 1.972 15.721 7.865 21.614 5.894 5.894 13.867 8.512 21.614 7.865.799.06 1.605.101 2.419.101h96c17.6 0 32-14.4 32-32z" fill="#{$color}"/></svg>',

	'file-script': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline file-script-border" d="M320 64v64c0 17.7 14.3 32 32 32h64v288H96V64h224zm5.5-64H96C60.7 0 32 28.7 32 64v384c0 35.3 28.7 64 64 64h320c35.3 0 64-28.7 64-64V154.5c0-33.5-18-44.5-63.5-90S360 0 325.5 0z" fill="#{$color}"/><path class="lexicon-icon-outline file-script-forward-slash" d="M212.2 409.2l69.1-187.5c7.7-20.7 37.7-7.7 30.1 10.9l-69.1 187.5C234 440 205 428 212.2 409.2z" fill="#{$color}"/><path class="lexicon-icon-outline file-script-angle-bracket-open" d="M160 320l35.9-35.9-22.6-22.6-35.9 35.9c-12.5 12.5-12.5 32.8 0 45.3l35.9 35.9 22.6-22.6-35.9-36z" fill="#{$color}"/><path class="lexicon-icon-outline file-script-angle-bracket-close" d="M355.9 320L320 284.1l22.6-22.6 35.9 35.9c12.5 12.5 12.5 32.8 0 45.3l-35.9 35.9-22.6-22.7 35.9-35.9z" fill="#{$color}"/></svg>',

	'file-template': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline file-template-border" d="M320 64v64c0 17.7 14.3 32 32 32h64v288H96V64h224zm5.5-64H96C60.7 0 32 28.7 32 64v384c0 35.3 28.7 64 64 64h320c35.3 0 64-28.7 64-64V154.5c0-33.5-18-44.5-63.5-90S360 0 325.5 0z" fill="#{$color}"/><path class="lexicon-icon-outline file-template-content1" d="M352 320v64H160v-64h192m0-32H160c-17.7 0-32 14.3-32 32v64c0 17.7 14.3 32 32 32h192c17.7 0 32-14.3 32-32v-64c0-17.7-14.3-32-32-32z" fill="#{$color}"/><path class="lexicon-icon-outline file-template-content2" d="M352 256H160c-42 0-43-64 0-64h192c42 0 42 64 0 64z" fill="#{$color}"/></svg>',

	'file-xsl': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline file-xsl-border1" d="M96 192V64h224v64c0 19.2 12.8 32 32 32h64v32h64v-38.4c0-32-19.2-44.8-64-89.6S358.4 0 326.4 0H96C60.8 0 32 28.8 32 64v128h64z" fill="#{$color}"/><path class="lexicon-icon-outline file-xsl-border2" d="M32 448c0 35.2 28.8 64 64 64h320c35.2 0 64-28.8 64-64H32z" fill="#{$color}"/><path class="lexicon-icon-outline file-xsl-x" d="M80 326.4l-44.8-83.2H80l26.2 52.1 24.9-52.1h41.6L128 326.4l48 89.6h-44.8l-28.8-64-28.8 64H32l48-89.6z" fill="#{$color}"/><path class="lexicon-icon-outline file-xsl-s" d="M198.4 393.6l22.4-25.6c12.8 12.8 64 28.8 67.2 0 3.2-22.4-83.2-19.2-83.2-76.8 0-48 73.6-73.6 115.2-28.8L304 288c-25.6-19.2-60.8-16-60.8 3.2 0 25.6 86.4 16 86.4 76.8 0 57.6-70.4 73.6-131.2 25.6z" fill="#{$color}"/><path class="lexicon-icon-outline file-xsl-l" d="M374.4 243.2h38.4V384H480v32H374.4V243.2z" fill="#{$color}"/></svg>',

	'filter': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline filter-border" d="M448.1 89.9V156L256 316.1 63.9 156V89.9h384.2m32.1-64H31.8c-17.7 0-32 14.3-32 32V186L192 346.1v108.3c0 18.6 18.5 40.8 46.3 28.6l64-32c10.8-5.4 17.7-16.5 17.7-28.6v-76.3L512.2 186V57.9c0-17.7-14.3-32-32-32z" fill="#{$color}"/></svg>',

	'flag-empty': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M415 32H160c0-17.7-14.3-32-32-32S96 14.3 96 32v448c0 17.7 14.3 32 32 32s32-14.3 32-32V288h255c18.2 0 33-14.8 33-33V65c0-18.2-14.8-33-33-33z"/><path class="lexicon-icon-outline" d="M415 32H160c0-17.7-14.3-32-32-32S96 14.3 96 32v448c0 17.7 14.3 32 32 32s32-14.3 32-32V288h255c18.2 0 33-14.8 33-33V65c0-18.2-14.8-33-33-33zm-31 192H160V96h224v128z" fill="#{$color}"/></svg>',

	'flag-full': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" d="M415 32H160c0-17.7-14.3-32-32-32S96 14.3 96 32v448c0 17.7 14.3 32 32 32s32-14.3 32-32V288h255c18.2 0 33-14.8 33-33V65c0-18.2-14.8-33-33-33z"/><path class="lexicon-icon-outline" d="M415 32H160c0-17.7-14.3-32-32-32S96 14.3 96 32v448c0 17.7 14.3 32 32 32s32-14.3 32-32V288h255c18.2 0 33-14.8 33-33V65c0-18.2-14.8-33-33-33zm-31 192H160V96h224v128z" fill="#{$color}"/></svg>',

	'ar-sa': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#75BD4A" d="M16 80h480v352H16z"/><path fill="#FFF" d="M200.6 108.3c-.4 0-1.1.2-2 .8-2 1.4-6.1 5.6-6.2 10.4-.1 2.7-.6 2.7 1.2 4.5 1.3 1.9 2.6 1.7 5.2.3 1.5-1.1 2-1.8 2.5-3.6.6-3.1-3.3 1.5-3.8-2-.9-3.2 1.6-4.5 4-7.6 0-1.6.1-2.8-.9-2.8zm38 .2c-.7.1-1.6 1-2.8 3.3-.9 2.4-4.7 5.9-2 13.2 2.3 4.6 3.2 12.2 2.2 20.6-1.6 2.4-1.9 3.2-4 5.6-2.9 3.1-6 2.3-8.4 1.2-2.2-1.5-4-2.3-5-7.1.2-7.6.6-20.1-.8-22.8-2.1-4.1-5.4-2.6-6.9-1.4-7 6.4-10.4 17.1-12.5 25.7-1.9 6.2-4 4.4-5.4 1.9-3.5-3.3-3.8-29.1-8-24.8-6.8 19.4 3.9 40.7 11.3 38.6 5.3 2.2 8.7-8 10.9-19.1 1.5-3.1 2.6-3.5 3.4-1.9-.2 14.8 1.1 18.1 4.9 22.6 8.5 6.6 15.5.8 16.1.3l6.6-6.6c1.5-1.6 3.4-1.6 5.5-.3 2 1.8 1.8 5 6.1 7.2 3.6 1.5 11.4.4 13.2-2.8 2.4-4.2 3-5.6 4.1-7.2 1.7-2.3 4.7-1.3 4.7-.6-.3 1.3-2 2.6-.8 4.9 2.1 1.6 2.5.6 3.8.2 4.3-2.1 7.6-11.4 7.6-11.4.2-3.5-1.8-3.2-3.1-2.5-1.6 1-1.8 1.4-3.4 2.4-2.1.3-6.2 1.7-8.2-1.4-2.1-3.8-2.1-9-3.6-12.8 0-.3-2.8-6-.2-6.3 1.3.2 4 1 4.5-1.4 1.3-2.3-2.9-8.6-5.8-11.9-2.5-2.8-6-3.1-9.4-.3-2.4 2.2-2 4.6-2.5 6.9-.6 2.6-.5 5.9 2.2 9.4 2.4 4.6 6.6 10.6 5.2 19 0 0-2.5 4-6.9 3.5-1.8-.4-4.8-1.2-6.4-12.8-1.2-8.8.3-21.2-3.4-27-.9-2.2-1.6-4.3-2.8-4.1zm-12 .9c-1.1.1-2.4 1.4-3.4 4-.9 1.9-2 12.1-1.8 12.1-.7 3 3.2 4.3 4.9.4 2.6-7.1 2.6-10.1 2.8-13.2-.4-2.3-1.4-3.4-2.5-3.3zm44.3.8c-1.2.1-2.1.8-2.4 2.5-.5 4-.2 6.2.4 9.6.5 2.2 3.8 6 5.4 8.2 7.7 10.3 15.1 20.7 22.2 31.4 1.1 8 2 15.8 2.5 23.5 1.2 17 1.5 38.2.4 56.2 3.2.1 8.3-5.2 10.1-12.9 1.2-10.7-.4-32.5-.5-38.8 0-2.6-.2-5.8-.4-9 8.3 13.6 16.4 28 24.3 43.7 2.9-1.4 2.2-17.6.6-19.9-6.3-13.6-15.1-27.1-17.9-32.2-1-1.9-4.4-7.1-8.5-13.1-.8-8.6-1.6-15.8-2.1-18-1.3-9.1 3.7 1 3-4.2-1.6-9.1-6.6-15.2-12.5-23.5-1.9-2.7-1.9-3.2-4.8.7-1.8 4-1.7 7.3-1.2 10.4-.8-1.1-1.7-2.4-3.1-4.1-5.1-4.4-5.4-4.6-9.6-8.2-1.4-1-4-2.5-5.9-2.3zm131.5 1.4c-.6-.1-1.2.2-1.9 1.2-1.3 1.2-2.8 3.3-2.7 6 .3 4.8 1.2 9.7 1.5 14.4.1.6.2 1.3.4 1.9-.5-.7-1-1.2-1.2-1.4-9.3-9.8 4.3-1.6-1.8-9.2-5.1-5.6-6.6-7.4-11-10.8-2.2-1.4-3.5-4.1-4.2.5-.3 4.1-.6 8.8-.3 12.2 0 1.9 2 5.5 3.6 7.6 6.2 7.6 12.6 15.8 18.9 24.2 1.3 17.3 1.7 33.1 3.1 50.4-.2 7.4-2.5 17.2-4.6 18.2 0 0-3.3 1.9-5.5-.2-1.6-.6-8-10.7-8-10.7-3.3-3-5.5-2.1-7.8 0-6.4 6.2-9.3 17.9-13.7 25.9-1.1 1.8-4.3 3.3-7.8-.1-9-12.3-3.7-29.7-4.8-25.2-8 9-4.4 23.9-2.6 27.1 2.6 5.3 4.8 8.6 9.9 11.2 4.7 3.4 8.3 1.3 10.3-1.1 4.7-4.9 4.8-17.3 7-19.8 1.6-4.5 5.4-3.7 7.3-1.7 1.8 2.6 4 4.4 6.7 5.8 4.4 3.9 9.6 4.6 14.8 1 3.5-2 5.8-4.5 7.9-9.6 2.2-5.9 1.1-36.9.6-54.2 3.3 4.7 6.6 9.4 9.8 14.2 1.4 15.1 2.1 30 1.6 44.4-.3 2.8 9.9-8.5 9.9-13.9V207c5 8 9.8 16 14.4 24.2 2.8-1.5 1.9-17.5.1-19.7-4.8-8-10.9-16.6-15.6-23.3-.9-8.4-2.2-18.4-2.8-21.4-.9-4.8-1.8-11.9-3.2-17.6-.4-2.2-1.5-9.2-1.2-9.9.6-1.6 2.7 0 3.7-1.8 1.6-1.7-5.4-19.6-8.9-24.7-1.3-2.3-3.6-1.5-6.4 2.2-2.6 2.4-1.7 8-.7 13.4 2.6 13.6 4.9 27.4 6.8 41.2-3.4-5.1-7.6-11.2-11.6-17.1-.1-.6-.5-2.7-.5-2.7 0-.2-.6-11.1-1-13.7-.1-1.1-.3-1.4.8-1.2 1.2 1 1.3 1 2 1.4 1.2.2 2.2-1.8 1.5-3.6-3.6-6.7-7.3-13.5-10.9-20.2-.9-.4-1.4-.8-1.9-.9zm-339.3.3c-2-.1-4.3 1.2-3.4 3.6-.5 1.3 4 5.8 4.7 8.3.7 1.7-.7 7.4.8 7.9 1.3.6 3.2-3.9 3.9-8 .4-2.3.1-10-5.2-11.6-.2-.1-.5-.2-.8-.2zm386.5.1c-.5 0-1 .8-1.9 2.6-2.1 3.4-2.8 9.4-2 14.8 5 33.6 8.7 66.2 9.4 96.1-.4 2.8-.6 4.3-1.9 7.9-2.9 3.8-6.2 8.5-9.2 10.8s-9.5 4.4-11.7 6.1c-6.7 3.9-6.8 8.4-1.3 8.5 9.4-1.1 20.5-1.9 28.1-13.4 2-3.2 4.4-12 4.6-17.4.7-31.5-.4-62.2-5.1-85-.3-2.2-1.3-7.3-.9-8 .6-1.6 3.7.2 4.8-1.6 1.6-1.6-7.9-13.9-11.3-19.1-.6-1.3-1-2.4-1.6-2.3zm-98.4.5c-.4.1-1 .7-2 2-2.6 8.6-3.5 15.6-2.5 20.9 6.7 35.1 13.6 67.1 12.5 100.6 3.2 0 6.9-7.3 8.5-14.6.9-10-.6-16.1-.8-21.9-.3-5.9-6.6-53.5-7.9-57.9-1.6-8.4 6.2-1.1 5.4-6-2.7-6.2-9.4-15.1-11.5-20.5-.9-1.4-1-2.7-1.7-2.6zm-239.6.7c-.8.1-1.6.8-1.9 2-.2.7.3 2-.3 2.3-.4.4-1.8.1-1.8-1.9 0-.7-.5-1.3-.8-1.7-.3-.2-.5-.2-1-.2-.6 0-.6.2-1 .7-.2.5-.4 1.1-.4 1.7-.1.7-.4 1-.9 1.1-.6 0-.4.1-.9-.2-.3-.3-.6-.4-.6-1s-.1-1.4-.3-1.8c-.3-.3-.7-.5-1.1-.6-2.5 0-2.7 2.9-2.5 4-.2.2-.3 5.3 3.1 6.7 4.6 2.2 13.2 1.3 12.8-6.1 0-.7-.1-2.8-.2-3.4-.5-1.4-1.4-1.8-2.2-1.6zm61.5 0c-1.6.1-3 .5-4.2 1.2-3 2.9-3.7 7.6-1.4 10.5 2.3 1.1 4.7 3.4 3.1 4.7-6.6 7-23.7 18.8-24.6 20.9V150.8c.9.6 11.6.6 12.8 0 3.7-1.4 21.2-21.3 21.2-21.3-.9-.8-1.7-1.3-2.6-2.1-1-.8-.9-1.7 0-2.5 4.3-2.5 3-8.1.7-10.6-1.6-.9-3.4-1.1-5-1.1zm160.7.1c-.5 0-1 .8-1.9 2.6-2.1 3.4-3.5 9.3-3.3 14.8 4.5 31 5.9 58.1 8.8 89.1.2 3-.2 7.3-2.2 9.1-7.4 7.7-18 17.2-29.6 21.6-1.2 1.4 3.1 7.3 8.7 7.3 9.4-1.1 17.6-6.4 25.3-20.2 2-3.2 5.6-10.2 5.7-15.5.7-31.5-1.6-55.9-6.3-78.7-.3-2.2-.1-4.8.3-5.5.6-.7 2.7 0 3.8-1.8 1.6-1.6-4.3-15.2-7.6-20.4-.7-1.4-1.1-2.5-1.7-2.4zm-248.9.9c-1.3.2-2.5 1.2-3.1 2.6-.2 5-.2 9.9.3 14.5 2.3 8 3 15.1 4.1 23.3.3 11-6.4 4.8-6.1-.7 1.5-7.1 1.1-18.3-.2-21.1-1.1-2.8-2.4-3.5-5-3.1-2.1-.1-7.5 5.8-9 15.5 0 0-1.3 5-1.8 9.5-.7 5-4.1 8.6-6.4-.7-2-6.8-3.3-23.4-6.6-19.5-1 13-2.1 35.9 8.9 38.3 13.4 1.3 6-22.6 10.8-26.9.9-2.1 2.6-2.2 2.8.5v20.3c-.1 6.6 4.2 8.5 7.6 9.9 3.5-.3 5.8-.2 7.2 3.2.5 11.7 1.1 23.4 1.7 35.1 0 0 8.1 2.3 8.5-19.7.4-13-2.6-23.8-.8-26.4.1-2.5 3.2-2.6 5.4-1.4 3.5 2.5 5.1 5.5 10.5 4.3 8.3-2.3 13.2-6.3 13.4-12.6-.5-6-1.2-12.1-3.8-18.1.4-1.1-1.6-4-1.2-5 1.5 2.3 3.7 2.1 4.2 0-1.4-4.6-3.6-9.1-7.1-11-2.9-2.6-7.2-2-8.8 3.3-.7 6.2 2.3 13.5 6.8 19.5 1 2.3 2.3 6.2 1.7 9.7-2.4 1.4-4.8.8-6.8-1.3 0 0-6.6-4.9-6.6-6 1.7-11.2.4-12.5-.6-15.6-.7-4.3-2.7-5.6-4.4-8.6-1.6-1.7-3.9-1.7-4.9 0-2.9 5-1.6 15.9.5 20.7 1.5 4.5 3.8 7.2 2.8 7.2-.9 2.5-2.8 1.9-4.1-1-1.9-6-2.3-15-2.3-19-.6-5-1.2-15.7-4.5-18.4-1.1-1-2.1-1.4-3.1-1.3zm46.9.1c-.7.1-1.4.5-2.3.7-2.8.9-5.5 3.4-4.7 8.1 3.4 20.4 5.6 36 8.9 56.4.5 2.4-1.5 5.6-4.1 5.2-4.4-3-5.5-9-13-8.7-5.4.1-11.6 6-12.4 11.7-.9 4.5-1.2 9.4 0 13.4 3.8 4.6 8.4 4.1 12.4 3.1 3.3-1.4 6-4.6 7.2-3.8.7 1.2-.1 11.9-15.5 20.1-9.5 4.3-17.1 5.3-21.1-2.5-2.5-4.8.2-23.3-6-19-18.4 47.3 43 53.9 49.9 2 .4-1.5 1.8-2.9 2.8-2.6.4.2.8.8.9 1.8-1.4 47.1-47.5 50.3-55.3 35.5-1.9-3.5-2.5-11.3-2.7-15.9-.4-2.8-1.1-4.4-1.9-5.1-1.9-1.4-4.4 2.3-4.9 8.6-.8 5.1-.6 6.5-.6 11.4 2.5 37.2 61.7 21.2 71.3-9.5 4.8-15.9-.1-27.8 1.5-29.3h.5c5.9 6.3 14.1.8 16-1.4.8-1.1 2.7-1.8 4.1-.4 4.6 3.3 12.6 1.7 14.3-4.1 1-5.7 1.8-11.5 2-17.6-3 .9-5.4 1.6-6.4 2.6-.2.3-.4.5-.4.8-.3 1.7-.5 3.4-.8 5.1 0 .1-.1.3-.1.4-.1.2-.3.4-.6.5-1.1.6-2.9.2-3-1.3-1.4-6.5-7.3-7.3-10.8 2.7-2.4 1.9-6.8 2.3-7.2-.6.6-6.7-2.1-7.6-7.6-4.5-1.8-13.3-3.5-26-5.2-39.3 2.3-.1 4.3 1.6 6.4-1-2.2-7-7-21.1-9.6-22.5h-.1l-.4-.4s-.1-.1-.2-.1c0 0-.1-.1-.2-.1-.1-.1-.2-.1-.4-.1-.2-.3-.4-.3-.7-.3zm183.1.1c-2.4-.1-4.9 1.4-3.9 4.4-.6 1.6 5 7.1 6 10 1.6 4.6-1.2 8.9.4 9.6 1.6.7 3.7-4.7 4.6-9.7.9-4.1-2-12.4-6-14.1-.4-.2-.7-.2-1.1-.2zm-142.6 5c1.1-.1 2.4.9 3 2.3.7 1.5.3 2.9-.8 3.2s-2.5-.7-3.2-2.2-.3-2.9.8-3.2c0 0 .1-.1.2-.1zm264.6 6.9c-2.1-.1-4.5 1.6-3.6 4.7-.5 1.7 4.6 7.6 5.4 10.9.8 2.3-1.1 9.7.4 10.4 1.4.8 3.4-5.1 4.2-10.5.4-3-1.8-13.4-5.5-15.3-.3-.1-.6-.2-.9-.2zm-146.3 3.6c.2.9.4 1.7.5 2.6l1.2 5.7c-1.7-2.3-3.1-4.2-3.7-4.9-3.8-4.4.1-2.9 2-3.4zm33.7 16.6c-.8.1-1.6.9-1.9 2-.2.7.4 1.9-.3 2.3-.4.4-1.9.2-1.8-1.9 0-.7-.5-1.4-.8-1.8-.3-.2-.5-.2-1-.2-.6 0-.6.2-1 .7-.1.5-.4 1.1-.4 1.7-.1.7-.3 1-.9 1.1-.6 0-.5.1-1-.2-.3-.3-.6-.4-.6-1s-.1-1.4-.3-1.8c-.3-.3-.7-.5-1.1-.6-2.5 0-2.7 2.8-2.5 3.9-.2.2-.3 5.3 3.1 6.8 4.6 2.2 13.2 1.2 12.8-6.2 0-.7-.2-2.8-.2-3.4-.4-1.1-1.3-1.5-2.1-1.4zM170.4 148c-.6-.1-1.3.1-2.2.7-4 2.2-5.6 8.7-3.1 12.5 2.4 3.3 6.1 2.1 6.6 2.1 4 .5 6.3-7.5 6.3-7.5s.1-2.2-4.6 2c-2 .4-2.3-.4-2.8-1.5-.4-2.1-.3-4.2.6-6.2.6-1.2.2-2-.8-2.1zm217.6 1c-2.3-.1-4.6 1.3-5.3 4.4 0 1.8.8 2.8.7 4.5-.2.9-1.2 1.6-3.5.4.4-.3-1.5-3-1.5-3-1.8-1.1-4.2.1-5.8 1.1-.9 1.6-1.5 4.3-.5 7 2.6 4.8 11.5 12.9 15.7 13 .1-4.3.5-10 .7-13.6.1-1.3.4-2.8 1.7-3.2 1.3-.3 3.5 1.3 3.6-.1-.2-2.7-.8-6.8-2.3-8.7-.9-1.1-2.2-1.7-3.5-1.8zm-180.1 15c-.1 0-.1.1-.2.1 0 0-.1 0-.1.1-.4.3-1 1.1-2.2 2-2 2.3-2.4 3.8-2.2 8.4.1.5 3.8 10.7 6.9 17.9 2.1 7.5 4 16 2.6 24.1-4.9 10.7-14.8 20.2-24.3 25.4-4.8 1.6-9 1-10.2 0-2.8-1.9-2.8-5.2-2.7-5.8 8-5.6 17.2-10.1 24.4-25.2 2.1-5.8 2.8-9.2.7-18.2-.8-3.3-1.8-6.1-4.1-8.4 1.4-.7 4.9 2 5.5.3-.8-4.3-3.7-10-7-12.9-2.9-2.6-6-2.9-8.6-.5-3 1.6-3.6 7.6-2.2 12.7 1.6 3.9 5.8 4.6 8.9 12.4.1.5 1 5.8-.5 8-1.2 3.9-17.2 16.4-18.3 17.2l-.1.1v-.1-2.4c-.1-2.4.9-7.7.8-8.6-5.3 3.4-7 13.8-8 16.9-13.3 9.2-28.5 16.1-37.2 25.4-4.5 7.1 31.3-8.1 35.5-10l.1.1c.8.9.9 3.9 3.2 6.7 3.7 5.1 11.6 8.2 19.4 6.2 12.9-4.7 20.4-13.5 28-23.3 1.1-1.6 2.8-2.8 4.4-1.6 5.2 11.7 20.2 20 39.6 20.8 4.5-5.5 2.4-8.2.5-9.3-.6-.4-9.7-3.9-11.1-7.5-.9-3.3 1.3-6.2 5.6-8.4 12.5-1.5 24.7-3.2 36.6-7 .1-4 2.5-10 4-12.5 1.1-1.8 1.8-2 2-2.2v-.1-.4l-2-1.2-39.8-.2c-.5-.2-.9-.4-1.1-.6l-.1-.1v-.1-.1c.2-.3.7-.5 1.2-.7 9.5-1.3 26.4-4.1 27.5-20.3-.2-8.5-3.6-14-14-15.5-7.6.6-13.1 8-12.2 16.1-.4 2.2.7 6.5-1.5 7-14.6 1.3-30.6 10.5-31.1 17.1h-.6c-.9-.3-2.2-1.8-2-4-.6-11.3-4.2-24.2-10-34-2.1-2.1-3-2.9-3.6-3h-.1c-.1-.8-.2-.8-.3-.8zm38.1 6c-.8.1-1.6.8-1.9 2-.2.7.4 2-.3 2.3-.4.4-1.9.2-1.8-1.9 0-.7-.5-1.4-.8-1.8-.3-.2-.4-.2-1-.2s-.7.2-1 .7c-.1.5-.4 1.1-.4 1.7-.1.7-.3 1-.9 1.1-.6 0-.4.1-.9-.2-.3-.3-.7-.4-.7-1s-.1-1.4-.3-1.8c-.3-.3-.7-.5-1.2-.6-2.5 0-2.7 2.8-2.5 3.9-.2.2-.3 5.3 3.1 6.8 4.6 2.2 15.5.9 12.8-6.2 0-.7-.2-2.8-.2-3.4-.3-1.1-1.2-1.5-2-1.4zm153.7 6.3h-.4s-21.2 15.1-21.8 15.6c-2.1 1.9-1.1 8.4 0 7.7 1.5.6 22.9-13.9 22.5-15.6 1 .1 1.4-7.4-.3-7.7zM266 178.6c.9-.1 2 .2 3.1.8 1.6.9 2.6 2.3 2.4 3.3v.1l-.1.1V183.2c0 .1-.1.2-.2.2-.8.7-2.5.6-4.2-.4-1.6-.9-2.5-2.3-2.4-3.3v-.1c0-.1.1-.2.1-.4 0 0 0-.1.1-.1l.2-.2c.3-.1.6-.3 1-.3zm-185.9 3.8c-11 .2-27.1 14.4-27.6 22.3 11.6-5.6 23-10.9 34.8-16.7-1.9-2.8-.1-5.4-7.2-5.6zm35.6 4.9c1.1 0 2.2.5 2.8 2 .5 1.4 0 2.8-.6 3.6v.1c-.5.6-2.1.4-3.2.4-1.4-.1-2.1-.3-2.9-1.4-.4-1.3.8-2.5 1.4-3.5.1-.1.2-.2.2-.3.4-.4 1.1-.7 1.9-.8.1 0 .3-.1.4-.1zm279.9 4.4c-2 .2-3.8 2.1-3 5.1-.5 1.7 2.7 7.8 3.5 11 .8 2.3-1 8.8.6 9.5 1.4.8 5.2-3.9 5.1-9.6.4-3-1.1-14-4.8-15.8-.5-.2-1-.2-1.4-.2zm-237.7 10.7c-1.7.1-3.3 1-2.6 3.5-.1 1.8 4.9 3.9 5.2 8 .7 1.7-1.1 7.1.4 7.6 1.4.6 3.2-3.7 4-7.7.4-2.2-1.7-9.8-5.3-11.2-.5-.1-1.1-.2-1.7-.2zm71.1 9.8h.5c4.4 1.2 11 1.3 16.6 1.9 4.6.3 6.9 3.9 2.6 5.4-4.3 1.5-8.4 2.6-8.4 8.8.6 3.1.4 4.7 0 5.4 0 0-.1.1-.1.2h-.1c-.1 0-.1.1-.2.1h-.2c-1 .1-2.5-.8-3.6-1.4-2.6-1.9-10-6.5-11.1-16.3-.3-2 1.4-4 4-4.1zm-173.7 7.5c-.3 0-.8.8-1.6 1.8-6.5 10.4-7.1 26-3.5 30.6 1.9 2.2 5.1 3.2 7.4 2.5 4.1-1.8 5.9-10.1 4.9-13.2-1.4-2.1-2.5-2.5-3.8-.7-2.9 5.9-4.1 1.9-4.4-1.4-.4-6.2.2-12 .8-16.5.5-2.3.5-3.1.2-3.1zm223 13.7c-.5 0-1 0-1.5.3-.1 0-4.7 3.1-6.2 5.3-.9.7-.8 1.3-.5 2.5.7 1.6 1.9 1.1 3.3.4 1.9-.3 2.8 1 2.6 3.2-.9 2.8.4 3.8.4 4s1.8 1.7 3.9.5c4.4-1.7 7.2-3.3 13.4-4.7 1.6 0 1.5-4.4-1-4.6-3.4.2-6.5.3-9.9 3-2.1.5-2.4-.8-2.9-1.9-.5-2.8 1.2-4.8.8-6.9.2 0-.9-1-2.4-1.1zm142.8 5.3c-.8 0-1.7.1-3 .2-1.4.3-1.8.9-2.1 2.5.1 2.5 1.6 2.4 3.2 3.4.9 1.2 1.5 2.2-.1 4.1-1.5 1.4-2.5 2.1-4 3.5-.7 1.2-1.1 3 1 3.6 4 1.1 13.2-4.8 13.2-5 1.5-1.1 1-3.2.9-3.2-.9-1-2.8-.4-4.1-.6-.6 0-2.7-.3-1.7-2.1.8-1.1 1.1-1.8 1.7-3.2s.1-2.3-2.2-3c-1.2-.1-2-.2-2.8-.2zm-59.7 120.8c-6.6 1.7-6.4 8.6-2.2 11.6-69.7 0-176.8-1.2-199.7-1.2-12.8 0-53.5-1.5-54.2-1.5 8.7 12.7 21.3 15.3 37.8 15.6 31 0 174.5-.4 215.3-.4-2.9 5.2.3 13.5 2.5 15 0 0 .1.1.2.1s.2.1.3.1h.1c2.7.6 3.9-1.3 4.8-2.8 4.4.4 29.1.8 31.3 0 1.5 2.3 3 4.4 6 4 5.1-1.1 9.1-1.6 9.2-12 0 0-.5-17.6-12.1-16.5-2.7.4-10.4 1.2-10.4 1.2-8.9-1.1-15.4-1.2-25.4-1.5.9-1.2 2.5-5.9.6-7.6-.5-.4-1.3-.7-2.4-.6h-.2l-.2-.2s-.1 0-.1-.1c-.5-.7-.8-2.5-1.1-3 .1-.2 0-.2-.1-.2.1 0 .1 0 0 0 .1 0 0 0 0 0zm4.8 25.2c10.2.5 19.8.1 29.9.6 1.6 1.4.8 4.5-.2 5.1 0 0-.1.1-.2.1h-.2c-3.3-.1-5.2-.2-8.5-.2 0-.2 0-.3-.1-.5-.8-2.3-6.5-2.2-7.8-.4 0 0 0 .1-.1.1s0 .1-.1.1 0 .1-.1.2v.5c-4.5.5-8.5-.1-12.9-.3-1.4-1.7-1.3-4.6.3-5.3z"/></svg>',

	'bg-bg': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#FFF" d="M16 80.3h480v112H16z"/><path fill="#E03232" d="M16 320h480v112H16z"/><path fill="#75BD4A" d="M16 192h480v128H16z"/></svg>',

	'ca-ad': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#0035A0" d="M16 80h160v352H16z"/><path fill="#E03232" d="M336 80h160v352H336z"/><path fill="#FCD638" d="M176 80h160v352H176z"/><path fill="#A97451" d="M208 206.5h96v96h-96z"/></svg>',

	'ca-es': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#FCD638" d="M16 80h480v39.1H16z"/><path fill="#E03232" d="M16 119.1h480v39.1H16z"/><path fill="#FCD638" d="M16 158.2h480v39.1H16z"/><path fill="#E03232" d="M16 197.3h480v39.1H16z"/><path fill="#FCD638" d="M16 236.4h480v39.1H16z"/><path fill="#E03232" d="M16 275.6h480v39.1H16z"/><path fill="#FCD638" d="M16 314.7h480v39.1H16z"/><path fill="#E03232" d="M16 353.8h480v39.1H16z"/><path fill="#FCD638" d="M16 392.9h480V432H16z"/></svg>',

	'cs-cz': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#FFF" d="M16 80.6h480v176H16z"/><path fill="#E03232" d="M16 256h480v176H16z"/><path fill="#0035A0" d="M16 80l192 176L16 432z"/></svg>',

	'da-dk': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#E03232" d="M16 80h480v352H16z"/><path fill="#FFF" d="M144 80h64v352h-64z"/><path fill="#FFF" d="M16 224h480.1v64H16z"/></svg>',

	'de-de': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#4C4C4E" d="M16 80.3h480v112H16z"/><path fill="#FCD638" d="M16 320h480v112H16z"/><path fill="#E03232" d="M16 192h480v128H16z"/></svg>',

	'el-gr': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#0035A0" d="M16 80h480v39.1H16z"/><path fill="#FFF" d="M16 119.1h480v39.1H16zM16 197.3h480v39.1H16z"/><path fill="#0035A0" d="M16 236.4h480v39.1H16z"/><path fill="#FFF" d="M16 275.6h480v39.1H16z"/><path fill="#0035A0" d="M16 314.7h480v39.1H16z"/><path fill="#FFF" d="M16 353.8h480v39.1H16z"/><path fill="#0035A0" d="M16 392.9h480V432H16zM16.1 80H224v195.6H16.1z"/><path fill="#0035A0" d="M16 158.2h480v39.1H16z"/><path fill="#FFF" d="M100.2 80h39.1v195.6h-39.1z"/><path fill="#FFF" d="M16.5 158.2h207.8v39.1H16.5z"/></svg>',

	'en-au': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#0035A0" d="M16 80h480v352H16z"/><path fill="#FFF" d="M88 80h48v192H88z"/><path fill="#FFF" d="M16 152h192v48H16z"/><path fill="#FFF" d="M16 152h192v48H16z"/><path fill="#E03232" d="M96 80h32v192H96z"/><path fill="#E03232" d="M16 160h192v32H16z"/><path fill="#E03232" d="M27.3 80H16v11.3L196.7 272H208v-11.3z"/><path fill="#E03232" d="M208 91.3V80h-11.3L16 260.7V272h11.3z"/><path fill="#FFF" d="M384 272h16v16h-16zM96 336h32v32H96zM288 112h32v32h-32zM272 240h32v32h-32zM400 176h32v32h-32z"/></svg>',

	'en-gb': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#0035A0" d="M16 80h480v352H16z"/><path fill="#FFF" d="M208 80h96v352h-96z"/><path fill="#FFF" d="M16 208h480v96H16z"/><path fill="#FFF" d="M256 315.5L414.8 432H496v-59.5L337.2 256 496 139.5V80h-81.2L256 196.5 97.2 80H16v59.5L174.8 256 16 372.5V432h81.2z"/><path fill="#E03232" d="M256 295.7L441.9 432H496v-39.7L310.1 256 496 119.7V80h-54.1L256 216.3 70.1 80H16v39.7L201.9 256 16 392.3V432h54.1z"/><path fill="#E03232" d="M496 224H288V80h-64v144H16v64h208v144h64V288h208z"/></svg>',

	'en-us': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#E03232" d="M16 80h480v32H16z"/><path fill="#FFF" d="M16 112h480v32H16z"/><path fill="#E03232" d="M16 144h480v32H16z"/><path fill="#FFF" d="M16 176h480v32H16z"/><path fill="#E03232" d="M16 208h480v32H16z"/><path fill="#FFF" d="M16 240h480v32H16z"/><path fill="#E03232" d="M16 272h480v32H16z"/><path fill="#FFF" d="M16 304h480v32H16z"/><path fill="#E03232" d="M16 336h480v32H16z"/><path fill="#FFF" d="M16 368h480v32H16z"/><path fill="#E03232" d="M16 400h480v32H16z"/><path fill="#66A1CC" d="M16 80h256v192H16z"/><path fill="#0035A0" d="M16 80h256v192H16z"/></svg>',

	'es-es': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#E03232" d="M16 80.3h480v112H16zM16 320h480v112H16z"/><path fill="#FCD638" d="M16 192h480v128H16z"/></svg>',

	'et-ee': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#448FDC" d="M16 80.3h480v112H16z"/><path fill="#FFF" d="M16 320h480v112H16z"/><path d="M16 192h480v128H16z"/></svg>',

	'eu-es': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#0094CE" d="M16 80.3h480v112H16z"/><path fill="#FFF" d="M16 320h480v112H16z"/><path fill="#4C4C4E" d="M16 192h480v128H16z"/><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#E03232" d="M16 80h480v352H16z"/><path fill="#75BD4A" d="M256 295.7L441.9 432H496v-39.7L310.1 256 496 119.7V80h-54.1L256 216.3 70.1 80H16v39.7L201.9 256 16 392.3V432h54.1z"/><path fill="#FFF" d="M496 224H288V80h-64v144H16v64h208v144h64V288h208z"/></svg>',

	'fa-ir': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#75BD4A" d="M16 80h480v96H16z"/><path fill="#E03232" d="M16 336h480v96H16z"/><path fill="#FFF" d="M16 176h480v160H16z"/><path opacity=".5" fill="#FFF" d="M32 143.4h16.6V160H32zM65.2 143.4h16.6V160H65.2zM98.4 143.4H115V160H98.4zM131.6 143.4h16.6V160h-16.6zM164.7 143.4h16.6V160h-16.6zM197.9 143.4h16.6V160h-16.6zM231.1 143.4h16.6V160h-16.6zM264.3 143.4h16.6V160h-16.6zM297.5 143.4h16.6V160h-16.6zM330.7 143.4h16.6V160h-16.6zM363.9 143.4h16.6V160h-16.6zM397 143.4h16.6V160H397zM430.2 143.4h16.6V160h-16.6zM463.4 143.4H480V160h-16.6zM32 352h16.6v16.6H32zM65.2 352h16.6v16.6H65.2zM98.4 352H115v16.6H98.4zM131.6 352h16.6v16.6h-16.6zM164.7 352h16.6v16.6h-16.6zM197.9 352h16.6v16.6h-16.6zM231.1 352h16.6v16.6h-16.6zM264.3 352h16.6v16.6h-16.6zM297.5 352h16.6v16.6h-16.6zM330.7 352h16.6v16.6h-16.6zM363.9 352h16.6v16.6h-16.6zM397 352h16.6v16.6H397zM430.2 352h16.6v16.6h-16.6zM463.4 352H480v16.6h-16.6z"/><circle fill="#E03232" cx="254" cy="252" r="40"/></svg>',

	'fi-fi': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#FFF" d="M16 80h480v352H16z"/><path fill="#0035A0" d="M144 80h64v352h-64z"/><path fill="#0035A0" d="M16 224h480.1v64H16z"/></svg>',

	'fr-ca': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#E03232" d="M16 80h112v352H16zM384 80h112v352H384z"/><path fill="#FFF" d="M128 80h256v352H128z"/><path fill="#E03232" d="M301.9 300.3c0 3.6 4.1 13.4 4.1 13.4s-34.2-5.7-37.1-6.2-5.5-.5-5.4 5.5l2.4 18.2h-8.4l1.9-18.2c0-6-2.6-6-5.5-5.5l-37.1 6.4s4-9.7 4-13.4c0-4.7-10.1-11.4-21.1-21-11-9.7-18.6-14.6-18.6-15.7 0-1 7.8-.8 7.8-6.6 0-5.7-7.4-27.3-7.4-27.3s15.4 6 19.6 5.9c4.2 0 10.7-8.4 10.7-14.4 0 0 20.1 25.4 24.3 23.5 4.2-1.8-7.7-51.8-7.7-51.8s12 10.9 16.1 9.6c4.2-1.3 15.9-31.3 15.9-31.3s.1-.4.4-.4c.2 0 .4.4.4.4s11.8 29.9 16 31.1c4.2 1.3 16.1-9.7 16.1-9.7s-11.6 50-7.4 51.9c4.2 1.8 24.2-23.8 24.2-23.8 0 6 6.6 14.4 10.7 14.4 4.2-.1 19.5-6.1 19.5-6.1s-7.3 21.6-7.2 27.4c0 5.8 7.8 5.5 7.8 6.5s-7.6 6-18.5 15.8c-10.5 10-20.5 16.6-20.5 21.4z"/></svg>',

	'fr-fr': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#0035A0" d="M16 80h160v352H16z"/><path fill="#E03232" d="M336 80h160v352H336z"/><path fill="#FFF" d="M176 80h160v352H176z"/></svg>',

	'gl-es': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#FFF" d="M16 80h480v352H16z"/><path fill="#0094CE" d="M256 295.7L441.9 432H496v-39.7L310.1 256 256 216.3 70.1 80H16v39.7L201.9 256z"/></svg>',

	'hi-in': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#F5984C" d="M16 80.3h480v112H16z"/><path fill="#75BD4A" d="M16 320h480v112H16z"/><path fill="#FFF" d="M16 192h480v128H16z"/><circle fill="#0035A0" cx="256" cy="256" r="40"/></svg>',

	'hr-hr': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#E03232" d="M16 80h480v112H16z"/><path fill="#0035A0" d="M16 320h480v112H16z"/><path fill="#FFF" d="M16 192h480v128H16z"/><path fill="#E03232" stroke="#FFF" stroke-width="16" stroke-miterlimit="10" d="M342.4 174.4l-80 160-80-160z"/></svg>',

	'hu-hu': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#E03232" d="M16 80.3h480v112H16z"/><path fill="#75BD4A" d="M16 320h480v112H16z"/><path fill="#FFF" d="M16 192h480v128H16z"/></svg>',

	'in-id': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#E03232" d="M16 80.6h480v176H16z"/><path fill="#FFF" d="M16 256h480v176H16z"/></svg>',

	'it-it': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#75BD4A" d="M16 80h160v352H16z"/><path fill="#E03232" d="M336 80h160v352H336z"/><path fill="#FFF" d="M176 80h160v352H176z"/></svg>',

	'iw-il': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#FFF" d="M16 80h480v352H16z"/><path fill="#0094CE" d="M16 96h480v64H16zM16 352h480v64H16zM256 192l32 47.7 32 47.8H192l32-47.8z"/><path fill="#0094CE" d="M256 320l-32-47.7-32-47.8h128l-32 47.8z"/><circle fill="#FFF" cx="256" cy="256" r="16"/></svg>',

	'ja-jp': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#FFF" d="M16 80h480v352H16z"/><circle fill="#E03232" cx="256" cy="256" r="80"/></svg>',

	'ko-kr': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#FFF" d="M16 81.3h480v352H16z"/><path fill="#E03232" d="M256 176c-44.2 0-80 35.8-80 80h160c0-44.2-35.8-80-80-80z"/><path fill="#0035A0" d="M256 336c44.2 0 80-35.8 80-80H176c0 44.2 35.8 80 80 80z"/><path fill="none" stroke="#000" stroke-width="16" stroke-miterlimit="10" d="M384 128l64 64M64 192l64-64M128 384l-64-64M448 320l-64 64"/></svg>',

	'lo-la': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#E03232" d="M16 81.3h480v112H16zM16 320h480v112H16z"/><path fill="#0035A0" d="M16 192h480v128H16z"/><circle fill="#FFF" cx="256" cy="256" r="48"/></svg>',

	'lt-lt': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#FCD638" d="M16 80.3h480v112H16z"/><path fill="#E03232" d="M16 320h480v112H16z"/><path fill="#75BD4A" d="M16 192h480v128H16z"/></svg>',

	'nb-no': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#E03232" d="M16 80h480v352H16z"/><path fill="#FFF" d="M128 80h96v352h-96z"/><path fill="#FFF" d="M16 208h480.1v96H16z"/><path fill="#0035A0" d="M16 240h480.1v32H16z"/><path fill="#0035A0" d="M160 80h32v352h-32z"/></svg>',

	'nl-be': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#4C4C4E" d="M16 80h160v352H16z"/><path fill="#E03232" d="M336 80h160v352H336z"/><path fill="#FCD638" d="M176 80h160v352H176z"/></svg>',

	'nl-nl': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#E03232" d="M16 80.3h480v112H16z"/><path fill="#0035A0" d="M16 320h480v112H16z"/><path fill="#FFF" d="M16 192h480v128H16z"/></svg>',

	'pl-pl': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#FFF" d="M16 80.6h480v176H16z"/><path fill="#E03232" d="M16 256h480v176H16z"/></svg>',

	'pt-br': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#75BD4A" d="M16 80h480v352H16z"/><path fill="#FCD638" d="M256 416L32 256 256 96l224 160z"/><circle fill="#0035A0" cx="256" cy="256" r="80"/></svg>',

	'pt-pt': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#75BD4A" d="M16 80h160v352H16z"/><path fill="#E03232" d="M176.6 80h320v352h-320z"/><circle fill="#EDC645" cx="176" cy="224" r="64"/></svg>',

	'ro-ro': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#0035A0" d="M16 80h160v352H16z"/><path fill="#E03232" d="M336 80h160v352H336z"/><path fill="#FCD638" d="M176 80h160v352H176z"/></svg>',

	'ru-ru': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#FFF" d="M16 80.3h480v112H16z"/><path fill="#E03232" d="M16 320h480v112H16z"/><path fill="#0035A0" d="M16 192h480v128H16z"/></svg>',

	'sk-sk': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#FFF" d="M16 80.3h480v112H16z"/><path fill="#E03232" d="M16 320h480v112H16z"/><path fill="#0035A0" d="M16 192h480v128H16z"/><path fill="#E03232" stroke="#FFF" stroke-width="16" stroke-miterlimit="10" d="M256 160l-80 160-80-160z"/></svg>',

	'sl-si': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#FFF" d="M16 80.3h480v112H16z"/><path fill="#E03232" d="M16 320h480v112H16z"/><path fill="#0035A0" d="M16 192h480v128H16z"/><path fill="#0035A0" stroke="#FFF" stroke-width="16" stroke-miterlimit="10" d="M256 160l-80 160-80-160z"/></svg>',

	'sr-rs-latin': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#E03232" d="M16 80.3h480v112H16z"/><path fill="#FFF" d="M16 320h480v112H16z"/><path fill="#0035A0" d="M16 192h480v128H16z"/><path fill="#FCD638" d="M240 176l-80 160-80-160z"/></svg>',

	'sr-rs': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#B0BEC9" d="M0 64h512v384H0z"/><path fill="#E03232" d="M16 80.3h480v112H16z"/><path fill="#FFF" d="M16 320h480v112H16z"/><path fill="#0035A0" d="M16 192h480v128H16z"/><path fill="#FCD638" d="M240 176l-80 160-80-160z"/></svg>',

	'sv-se': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#0035A0" d="M16 80h480v352H16z"/><path fill="#FCD638" d="M144 80h64v352h-64z"/><path fill="#FCD638" d="M16 224h480.1v64H16z"/></svg>',

	'th-th': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#F01616" d="M16 372.5h480v58H16z"/><path fill="#FFF" d="M16 313.9h480v58H16z"/><path fill="#241B50" d="M16 198h480v116H16z"/><path fill="#FFF" d="M16 139.9h480v58H16z"/><path fill="#F01616" d="M16 82h480v58H16z"/></svg>',

	'tr-tr': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#E03232" d="M16 80h480v352H16z"/><path fill="#FFF" d="M240 336c-44.2 0-80-35.8-80-80s35.8-80 80-80c2 0 4 .4 6 .6-15.4-10.5-34-16.6-54-16.6-53 0-96 43-96 96s43 96 96 96c20 0 38.6-6.1 54-16.6-2 .2-4 .6-6 .6z"/><path fill="#FFF" d="M253.2 202l20.6 25.7 30.7-11.6-18 27.4 20.5 25.7-31.7-8.7-18.1 27.5-1.5-32.8-31.7-8.7 30.8-11.6z"/></svg>',

	'uk-ua': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#0094CE" d="M16 80.6h480v176H16z"/><path fill="#FCD638" d="M16 256h480v176H16z"/></svg>',

	'vi-vn': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#E03232" d="M16 80h480v352H16z"/><path fill="#FCD638" d="M296.7 318.7l-40-29.4-39.1 30.7 14.4-48.9-40-29.4 48.9-.8 14.4-48.9 15.8 48.4 48.9-.8-39.1 30.7z"/></svg>',

	'zh-cn': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#E03232" d="M16 80h480v352H16z"/><path fill="#FCD638" d="M152.7 238.7l-40-29.4L73.6 240 88 191.1l-40-29.4 48.9-.8 14.4-48.9 15.8 48.4 48.9-.8-39.1 30.7z"/><path fill="#FD0" d="M236.6 154.2l-10-14.1-16.3 5.8 10.2-14.5-10-14.1 16.2 5.1 10.2-14.5-.2 17.7 16.2 5.1-16.2 5.8zM275.6 203.8l.6-17.3-16.5-5.1 16.8-5.5.5-17.3 9.9 13.8 16.8-5.5L293 181l9.9 13.8-16.5-5.1zM267 276.9l5.2-16.5-14.5-9.4 17.7-.8 5.1-16.4 5.8 15.9 17.7-.7-14.1 10.6 5.7 16-14.5-9.4zM207.9 319.2l11.9-12.4-8.7-14.9 16.1 7.2 12-12.4-2 16.9 16.2 7.2L236 314l-1.9 16.9-8.8-14.9z"/></svg>',

	'zh-tw': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="#C0CFD8" d="M0 64h512v384H0z"/><path fill="#E03232" d="M16 80h480v352H16z"/><path fill="#0035A0" d="M16 80h192v160H16z"/><circle fill="#FFF" cx="112" cy="160" r="32"/></svg>',

	'folder': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M455.1 128H352c-9.5 0-31.9-45.7-38.6-59.5C298 36.4 280.4 0 245.1 0H55.9C25.1 0 0 26.9 0 59.8v395.3C0 486.5 25.5 512 56.9 512h398.2c31.4 0 56.9-25.5 56.9-56.9V184.9c0-31.3-25.5-56.9-56.9-56.9z"/><path class="lexicon-icon-outline" d="M455.1 128H352c-9.5 0-31.9-45.7-38.6-59.5C298 36.4 280.4 0 245.1 0H55.9C25.1 0 0 26.9 0 59.8v395.3C0 486.5 25.5 512 56.9 512h398.2c31.4 0 56.9-25.5 56.9-56.9V184.9c0-31.3-25.5-56.9-56.9-56.9zM64 67s.3-2.4.7-3h178.1c5.6 5.9 14.4 31.8 19.8 43.4 3.1 6.7 6.3 13.7 9.9 20.6H64V67zm384 381H64V192h384v256z" fill="#{$color}"/></svg>',

	'format': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="format-roller lexicon-icon-outline" d="M416 192H192c-35.3 0-64-28.7-64-64V64c0-35.3 28.7-64 64-64h224c35.3 0 64 28.7 64 64v64c0 35.3-28.7 64-64 64z" fill="#{$color}"/><path class="format-handle lexicon-icon-outline" d="M320 320v-64c0-17.7-14.3-32-32-32H96V96c0-43-64-43-64 0v160c0 17.7 14.3 32 32 32h192v32c-17.7 0-32 14.3-32 32v160h128V352c0-17.7-14.3-32-32-32z" fill="#{$color}"/></svg>',

	'forms': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M448 0H64C28.7 0 0 28.7 0 64v384c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64z"/><path class="lexicon-icon-outline" d="M448 0H64C28.7 0 0 28.7 0 64v384c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64zm0 448H64V64h384v384z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M384 128H224c-17.7 0-32 14.3-32 32s14.3 32 32 32h160c17.7 0 32-14.3 32-32s-14.3-32-32-32z" fill="#{$color}"/><circle class="lexicon-icon-outline" cx="128" cy="160" r="32" fill="#{$color}"/><path class="lexicon-icon-outline" d="M384 224H224c-17.7 0-32 14.3-32 32s14.3 32 32 32h160c17.7 0 32-14.3 32-32s-14.3-32-32-32z" fill="#{$color}"/><circle class="lexicon-icon-outline" cx="128" cy="256" r="32" fill="#{$color}"/><path class="lexicon-icon-outline" d="M384 320H224c-17.7 0-32 14.3-32 32s14.3 32 32 32h160c17.7 0 32-14.3 32-32s-14.3-32-32-32z" fill="#{$color}"/><circle class="lexicon-icon-outline" cx="128" cy="352" r="32" fill="#{$color}"/></svg>',

	'full-size': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M384 382.804H224V448h160c35.2 0 64-28.8 64-64V224h-64v158.804zM128 126.804h160v-64H128c-35.2 0-64 28.8-64 64V288h64V126.804zM502.524 9.475A32.315 32.315 0 0 0 479.614 0H378.357c-17.96 0-32.457 14.496-32.386 32.385 0 8.91 3.606 17.042 9.475 22.91a32.338 32.338 0 0 0 22.91 9.476h23.618l-80.469 80.469 45.255 45.254 80.469-80.468v23.617c0 17.96 14.495 32.456 32.385 32.386 17.96 0 32.456-14.496 32.386-32.386V32.386c0-8.627-3.394-16.83-9.476-22.91zM145.24 321.505l-80.469 80.47v-23.618c0-17.96-14.495-32.456-32.385-32.386-17.96 0-32.456 14.496-32.386 32.386v101.257c0 8.627 3.394 16.83 9.476 22.91A32.315 32.315 0 0 0 32.386 512h101.257c17.96 0 32.457-14.496 32.386-32.386 0-8.909-3.606-17.04-9.475-22.91a32.338 32.338 0 0 0-22.91-9.475h-23.618l80.469-80.469-45.255-45.255z" fill="#{$color}"/></svg>',

	'geolocation': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M256 0c-79.4 0-144 61.7-144 137.5 0 43.3 102.1 307.3 122.5 359.8 3.5 8.9 12 14.8 21.5 14.8s18-5.9 21.5-14.8c28.7-73.8 122.5-318 122.5-359.7C400 61.7 335.4 0 256 0zm0 224c-44.2 0-80-35.8-80-80s35.8-80 80-80 80 35.8 80 80-35.8 80-80 80z" fill="#{$color}"/></svg>',

	'globe': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M256 0C115.2 0 0 115.2 0 256s115.2 256 256 256 256-115.2 256-256S396.8 0 256 0zm64 384c12.8 9.6 25.6 76.8 25.6 76.8-28.8 12.8-73.6 25.2-121.6 16 0 0-32-16-32-60.8s16-67.2-32-96-86.4-22.4-96-32-16-38.4 0-64h32v-64h64c19.2-12.8 64-124.8 64-124.8 19.2-6.4 52.8-6.9 64 0-104.7 126.1 60.7 11.5 32 60.8-19.2 35.2-96 83.2-96 96s22.4 32 32 32 51.2-64 64-64 41.6 54.4 32 64-115.2 16-128 32-16 80 0 96 83.2 22.4 96 32zm105.6 19.2S451.2 316.8 448 288s-22.4-60.8-32-64-25.6 6.4-32 0v-32c6.4-6.4 67.2-6.4 86.4 0 6.4 3.2 36.1 116.9-44.8 211.2z" fill="#{$color}"/></svg>',

	'grid': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M495.965.018h-95.993c-8.813 0-15.981 7.168-15.981 16.017v95.993c0 8.85 7.168 16.017 16.017 16.017h95.993c8.849 0 16.017-7.168 16.017-16.017V16.035c-.037-8.85-7.204-16.017-16.054-16.017zM112.028 192.005H16.035c-8.85 0-16.017 7.167-16.017 16.017v95.993c0 8.849 7.168 16.017 16.017 16.017h95.993c8.85 0 15.981-7.168 15.981-16.017v-95.993c0-8.85-7.168-16.017-15.981-16.017zM303.978 192.005h-95.993c-8.85 0-16.017 7.167-16.017 16.017v95.993c0 8.849 7.167 16.017 16.017 16.017h95.993c8.849 0 16.017-7.168 16.017-16.017v-95.993c0-8.85-7.168-16.017-16.017-16.017zM495.965 192.005h-95.993c-8.849 0-16.017 7.167-16.017 16.017v95.993c0 8.849 7.168 16.017 16.017 16.017h95.993c8.849 0 16.017-7.168 16.017-16.017v-95.993c0-8.85-7.168-16.017-16.017-16.017zM112.028 383.991H16.035c-8.85 0-16.017 7.168-16.017 16.017v95.993c0 8.813 7.168 15.981 16.017 15.981h95.993c8.85 0 15.981-7.168 15.981-16.017v-95.993c0-8.813-7.168-15.981-15.981-15.981zM303.978 383.991h-95.993c-8.85 0-16.017 7.168-16.017 16.017v95.993c0 8.849 7.167 16.017 16.017 16.017h95.993c8.849 0 16.017-7.168 16.017-16.017v-95.993c0-8.849-7.168-16.017-16.017-16.017zM495.965 383.991h-95.993c-8.849 0-16.017 7.168-16.017 16.017v95.993c0 8.849 7.168 16.017 16.017 16.017h95.993c8.849-.037 16.017-7.204 16.017-16.054v-95.993c0-8.813-7.168-15.981-16.017-15.981zM112.028.018H16.035C7.185.018.018 7.186.018 16.035v95.993c0 8.814 7.168 15.981 16.017 15.981h95.993c8.85 0 15.981-7.168 15.981-16.017V16.036c0-8.85-7.168-16.017-15.981-16.017zM303.978.018h-95.993c-8.85 0-16.017 7.168-16.017 16.017v95.993c0 8.85 7.167 16.017 16.017 16.017h95.993c8.849 0 16.017-7.168 16.017-16.017V16.035c0-8.85-7.168-16.017-16.017-16.017z" fill="#{$color}"/></svg>',

	'h1': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M266.812 199.731c-7.13-8.47-16.182-15.246-27.105-20.303-10.947-5.056-23.893-7.585-38.786-7.585-11.1 0-22.528 2.048-34.26 6.119s-21.416 10.846-29 20.303V64.001H63.999v352h73.662V277.48c.607-13.375 4.753-24.525 12.339-33.501 7.636-8.951 18.078-13.451 31.403-13.451 15.221 0 26.244 4.576 33.071 13.678 6.827 9.127 10.215 20.556 10.215 34.235v137.56h63.31V267.189c0-13.021-1.744-25.435-5.233-37.142-3.514-11.732-8.824-21.846-15.954-30.315zM396.014 128c-2.925 15.277-11.122 28.141-24.68 38.611-13.536 10.471-30.694 15.857-51.334 16.16V224h64v192h64V128h-51.986z" fill="#{$color}"/></svg>',

	'h2': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M234.812 231.731c-7.13-8.47-16.182-15.246-27.105-20.303-10.947-5.056-23.893-7.585-38.786-7.585-11.1 0-22.528 2.048-34.26 6.119s-21.416 10.846-29 20.303l-.001-134.264H31.998v352h73.662l.001-138.521c.607-13.375 4.753-24.525 12.338-33.501 7.636-8.95 18.079-13.451 31.402-13.451 15.221 0 26.244 4.576 33.071 13.678 6.827 9.127 10.215 20.556 10.215 34.235v137.56h63.31V299.189c0-13.021-1.744-25.435-5.233-37.142-3.514-11.732-8.824-21.846-15.954-30.315zM358.197 382.474c4.146-4.012 8.916-7.757 14.353-11.211l53.513-32.74c17.139-10.632 30.378-23.202 39.829-37.712 9.406-14.51 14.108-30.824 14.108-48.9 0-12.058-2.273-23.559-6.82-34.48-4.569-10.921-11.211-20.483-19.925-28.662s-19.257-14.732-31.671-19.613c-12.392-4.881-26.344-7.31-41.745-7.31-16.27 0-30.69 2.585-43.239 7.756-12.57 5.171-23.135 12.058-31.671 20.683-8.58 8.603-15.156 18.522-19.725 29.732s-6.82 23.001-6.82 35.349c0 .375.012.761.017 1.14h56.188c.743-11.25 4.341-20.839 10.793-28.732 7.288-8.916 18.32-13.373 33.164-13.373 13.974 0 24.45 3.877 31.448 11.634 6.998 7.778 10.498 16.671 10.498 26.723 0 9.762-2.519 18.477-7.489 26.077s-13.485 15.022-25.475 22.199l-45.825 27.57c-12.548 7.489-22.957 15.601-31.248 24.361-8.247 8.76-14.911 18.165-19.903 28.238-.463.928-.909 1.861-1.349 2.798a127.805 127.805 0 0 0-9.55 28.874c-.214 1.034-.409 2.08-.603 3.126v32H480v-64H356.726c.478-.519.965-1.029 1.47-1.526z" fill="#{$color}"/></svg>',

	'hashtag': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M480 128h-64l22.4-89.4C447-2 390-16 378.1 23.5L352 128H224l22.4-89.4C255-2 198-16 186.1 23.5L160 128H64c-42 0-43 64 0 64h80l-32 128H32c-42 0-43 64 0 64h64l-22.4 89.4C65 517 126 525 133.9 488.5L160 384h128l-22.4 89.4C257 517 318 525 325.9 488.5L352 384h96c43 0 42-64 0-64h-80l32-128h80c43 0 42-64 0-64zM304 320H176l32-128h128l-32 128z" fill="#{$color}"/></svg>',

	'heart': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M417 75.7c-17.9-8.5-37-12.8-56.7-12.8-41 0-79.4 19.1-104.3 50.5-25-31.4-63.4-50.5-104.3-50.5-19.7 0-38.8 4.3-56.7 12.8-66.4 31.4-95 111.1-63.7 177.7C58.4 311.2 222 457.7 240.6 474.1c4.3 3.8 9.8 5.9 15.4 5.9h1.2c5.2-.3 10.2-2.2 14.2-5.8 18.6-16.5 182.2-162.9 209.3-220.7 31.3-66.7 2.7-146.4-63.7-177.8z"/><path class="lexicon-icon-outline" d="M417 75.7c-17.9-8.5-37-12.8-56.7-12.8-41 0-79.4 19.1-104.3 50.5-25-31.4-63.4-50.5-104.3-50.5-19.7 0-38.8 4.3-56.7 12.8-66.4 31.4-95 111.1-63.7 177.7C58.4 311.2 222 457.7 240.6 474.1c4.3 3.8 9.8 5.9 15.4 5.9h1.2c5.2-.3 10.2-2.2 14.2-5.8 18.6-16.5 182.2-162.9 209.3-220.7 31.3-66.7 2.7-146.4-63.7-177.8zm21.8 158.1c-16.3 34.7-113 128.9-182.8 192-69.8-63.1-166.5-157.3-182.8-192-20.4-43.5-1.8-95.6 41.5-116.1 11.7-5.5 24.1-8.3 36.9-8.3 33.5 0 64.4 19.6 78.6 50 .7 1.6 1.9 4.6 3.2 9.9 2.5 10.4 11.8 17.7 22.5 17.7s20-7.3 22.5-17.7c1.3-5.3 2.5-8.3 3.2-9.9 14.3-30.4 45.1-50 78.6-50 12.8 0 25.2 2.8 36.9 8.3 43.5 20.4 62.1 72.5 41.7 116.1z" fill="#{$color}"/></svg>',

	'hidden': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M445.7 44.3c-16.4-16.4-43-16.4-59.4 0l-68.2 68.2c-26.2-7.3-68.3-6.5-72.4-6.5C210 106 81.3 116.5 3.2 254.5c-9.1 16.1 3.3 30.7 9.2 39.3C31 320.6 51.1 342 71.6 359l-37.3 37.3c-16.4 16.4-16.4 43 0 59.4 8.2 8.2 19 12.3 29.7 12.3s21.5-4.1 29.7-12.3l352-352c16.4-16.4 16.4-43 0-59.4zM56 266.6c26.8-42.1 62-72.7 104.9-91 6.6-2.8 13.1-5.2 19.4-7.3-32.8 23-54.3 61.1-54.3 104.2 0 9.9 1.1 19.6 3.3 28.8L108 322.6c-18-14.5-35.7-32.8-52-56zM499.7 238.2c-10.6-15.3-21.7-28.9-33.1-40.9L430.9 234c8.7 9.3 17.3 19.8 25.5 31.5-33.2 52.1-74.3 79.5-110.4 93.9 18.2-19.5 30.3-44.6 33.5-72.5l-135.3 139c3.7.1 20.3.2 24.3.2 35.2 0 162.2-10.5 240.2-148.5 9.1-16.2-3-30.8-9-39.4z" fill="#{$color}"/></svg>',

	'home': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512.0012 512.0001"><path class="lexicon-icon-outline" d="M500.811 199.691l-224.27-192c-11.988-10.262-29.668-10.254-41.646.021l-223.73 191.92c-13.413 11.507-14.96 31.709-3.452 45.123 11.507 13.414 31.709 14.96 45.123 3.453L64 238.631V480c0 17.672 14.327 32 32 32s32-14.328 32-32V183.73L255.75 74.143l130.09 111.371L384.001 480c0 17.673 14.327 32 32 32s32-14.327 32-32V238.73l11.19 9.579A31.868 31.868 0 0 0 479.985 256c9.025 0 17.994-3.797 24.323-11.19 11.493-13.425 9.928-33.626-3.498-45.12z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M256 256c-52.934 0-96 43.065-96 96 0 35.124 1.353 123.265 1.41 128.361.2 17.55 14.487 31.64 31.992 31.64l.368-.003c17.673-.2 31.837-14.687 31.637-32.36-.014-1.244-1.406-92.874-1.406-127.638 0-17.645 14.355-32 32-32 17.644 0 32 14.355 32 32v128c0 17.673 14.327 32 32 32s32-14.327 32-32V352c0-52.934-43.066-96-96-96z" fill="#{$color}"/></svg>',

	'horizontal-scroll': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M512 223.8c0-8.6-3.4-16.4-8.9-22.1-.7-.9-1.5-1.7-2.3-2.5L423.7 122c-13.6-13.6-35.7-13.6-49.3 0-6.8 6.8-10.2 15.7-10.2 24.7 0 8.9 3.4 17.9 10.2 24.7l20.4 20.4H115.3l20.4-20.4c13.6-13.6 13.6-35.7 0-49.3-13.6-13.6-35.7-13.6-49.3 0l-77.2 77C2.7 205.7-1 214.6-1 223.8c0 9.3 3.7 18.1 10.2 24.7l77.1 77.1c13.6 13.6 35.7 13.6 49.3 0 6.8-6.8 10.2-15.7 10.2-24.7 0-8.9-3.4-17.9-10.2-24.7l-20.4-20.4h279.5l-20.4 20.4c-13.6 13.6-13.6 35.7 0 49.3 13.6 13.6 35.7 13.6 49.3 0l77.1-77.1c.8-.8 1.6-1.7 2.3-2.5 5.6-5.7 9-13.5 9-22.1z" fill="#{$color}"/></svg>',

	'hr': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M483.555 284.445H28.444C12.743 284.445-.001 271.702-.001 256s12.743-28.445 28.445-28.445h455.111C499.257 227.555 512 240.298 512 256s-12.743 28.445-28.445 28.445z" fill="#{$color}"/></svg>',

	'import-export': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M254.5 81.1L182.9 9.5C176.8 3.4 168.6 0 160 0c-8.6 0-16.8 3.4-22.9 9.5L65.5 81.1c-12.7 12.7-12.7 33.2 0 45.8 6.3 6.3 14.6 9.5 22.9 9.5s16.6-3.2 22.9-9.5l16.7-16.7V481c0 17.7 14.3 32 32 32s32-14.3 32-32V110.2l16.7 16.7c12.7 12.7 33.2 12.7 45.8 0 12.7-12.7 12.7-33.2 0-45.8zM446.5 385.1c-6.3-6.3-14.6-9.5-22.9-9.5s-16.6 3.2-22.9 9.5L384 401.8V31c0-17.7-14.3-32-32-32s-32 14.3-32 32v370.8l-16.7-16.7c-12.7-12.7-33.2-12.7-45.8 0-12.7 12.7-12.7 33.2 0 45.8l71.6 71.6c6.1 6.1 14.3 9.5 22.9 9.5s16.8-3.4 22.9-9.5l71.6-71.6c12.7-12.7 12.7-33.2 0-45.8z" fill="#{$color}"/></svg>',

	'indent-less': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M64 96h384c17.7 0 32-14.3 32-32s-14.3-32-32-32H64c-17.7 0-32 14.3-32 32s14.3 32 32 32zM448 416H64c-17.7 0-32 14.3-32 32s14.3 32 32 32h384c17.7 0 32-14.3 32-32s-14.3-32-32-32zM448 288H320c-17.7 0-32 14.3-32 32s14.3 32 32 32h128c17.7 0 32-14.3 32-32s-14.3-32-32-32zM448 160H320c-17.7 0-32 14.3-32 32s14.3 32 32 32h128c17.7 0 32-14.3 32-32s-14.3-32-32-32zM64 288h81.8l-16.7 16.7c-12.7 12.7-12.7 33.2 0 45.8 12.7 12.7 33.2 12.7 45.8 0l71.6-71.6c6.1-6.1 9.5-14.3 9.5-22.9 0-8.6-3.4-16.8-9.5-22.9l-71.6-71.6c-12.7-12.7-33.2-12.7-45.8 0-6.3 6.3-9.5 14.6-9.5 22.9s3.2 16.6 9.5 22.9l16.7 16.7H64c-17.7 0-32 14.3-32 32s14.3 32 32 32z" fill="#{$color}"/></svg>',

	'indent-more': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M64 96h384c17.7 0 32-14.3 32-32s-14.3-32-32-32H64c-17.7 0-32 14.3-32 32s14.3 32 32 32zM448 416H64c-17.7 0-32 14.3-32 32s14.3 32 32 32h384c17.7 0 32-14.3 32-32s-14.3-32-32-32zM448 288H320c-17.7 0-32 14.3-32 32s14.3 32 32 32h128c17.7 0 32-14.3 32-32s-14.3-32-32-32zM448 160H320c-17.7 0-32 14.3-32 32s14.3 32 32 32h128c17.7 0 32-14.3 32-32s-14.3-32-32-32zM113.1 350.5c12.7 12.7 33.2 12.7 45.8 0 6.3-6.3 9.5-14.6 9.5-22.9s-3.2-16.6-9.5-22.9L142.2 288H224c17.7 0 32-14.3 32-32s-14.3-32-32-32h-81.8l16.7-16.7c12.7-12.7 12.7-33.2 0-45.8-12.7-12.7-33.2-12.7-45.8 0l-71.6 71.6c-6.1 6.1-9.5 14.3-9.5 22.9s3.4 16.8 9.5 22.9l71.6 71.6z" fill="#{$color}"/></svg>',

	'info-book': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline info-book-i-dot" d="M272.3 95.4c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16z" fill="#{$color}"/><path class="lexicon-icon-outline info-book-i-stem" d="M288.1 160h-48c-21 .6-22 30.6 0 32h16v80c.9 20.2 29.9 23 32 0V160z" fill="#{$color}"/><path class="lexicon-icon-outline info-book-pages" d="M400 448H143.8c-22.2-1.1-20.1-31.7 0-32H400c19.4.3 23.1 30.3 0 32z" fill="#{$color}"/><path class="lexicon-icon-outline info-book-border" d="M448 352V32c0-17.7-14.3-32-32-32H160c-53 0-96 43-96 96v336.1s-.9 73.8 78.3 79.7c.6.1 289.7.3 289.7.3 21.6-1.4 20.9-30.7 0-32l-288-.2c-65.2-2.3-61-93.4-1.7-95.8H416c17.7-.1 32-14.4 32-32.1zm-287.9-32V64h224v256h-224z" fill="#{$color}"/></svg>',

	'info-circle-open': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M437 75C388.7 26.6 324.4 0 256 0S123.3 26.6 75 75C26.6 123.3 0 187.6 0 256s26.6 132.7 75 181c48.4 48.4 112.6 75 181 75s132.7-26.6 181-75c48.4-48.4 75-112.6 75-181s-26.6-132.7-75-181z"/><path class="lexicon-icon-outline" d="M437 75C388.7 26.6 324.4 0 256 0S123.3 26.6 75 75C26.6 123.3 0 187.6 0 256s26.6 132.7 75 181c48.4 48.4 112.6 75 181 75s132.7-26.6 181-75c48.4-48.4 75-112.6 75-181s-26.6-132.7-75-181zM256 448c-105.9 0-192-86.1-192-192S150.1 64 256 64s192 86.1 192 192-86.1 192-192 192z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M256 192c-17.7 0-32 14.3-32 32v160c0 17.7 14.3 32 32 32s32-14.3 32-32V224c0-17.7-14.3-32-32-32z" fill="#{$color}"/><circle class="lexicon-icon-outline" cx="256" cy="128" r="32" fill="#{$color}"/></svg>',

	'info-circle': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M437 75C388.7 26.6 324.4 0 256 0S123.3 26.6 75 75C26.6 123.3 0 187.6 0 256s26.6 132.7 75 181c48.4 48.4 112.6 75 181 75s132.7-26.6 181-75c48.4-48.4 75-112.6 75-181s-26.6-132.7-75-181zM288 384c0 17.7-14.3 32-32 32s-32-14.3-32-32V224c0-17.7 14.3-32 32-32s32 14.3 32 32v160zm-32-224c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z" fill="#{$color}"/></svg>',

	'info-panel-closed': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M437 75C388.7 26.6 324.4 0 256 0S123.3 26.6 75 75C26.6 123.3 0 187.6 0 256s26.6 132.7 75 181c48.4 48.4 112.6 75 181 75s132.7-26.6 181-75c48.4-48.4 75-112.6 75-181s-26.6-132.7-75-181z"/><path class="lexicon-icon-outline" d="M437 75C388.7 26.6 324.4 0 256 0S123.3 26.6 75 75C26.6 123.3 0 187.6 0 256s26.6 132.7 75 181c48.4 48.4 112.6 75 181 75s132.7-26.6 181-75c48.4-48.4 75-112.6 75-181s-26.6-132.7-75-181zM256 480C132.5 480 32 379.5 32 256S132.5 32 256 32s224 100.5 224 224-100.5 224-224 224z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M288 384V224c0-17.7-14.3-32-32-32s-32 14.3-32 32v160c0 17.7 14.3 32 32 32s32-14.3 32-32z" fill="#{$color}"/><circle cx="256" cy="128" r="32"/></svg>',

	'info-panel-open': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M437.02 74.98C388.666 26.63 324.38 0 256 0 187.62 0 123.332 26.629 74.98 74.98 26.63 123.333 0 187.62 0 256c0 68.38 26.629 132.667 74.98 181.02C123.333 485.37 187.62 512 256 512c68.38 0 132.667-26.629 181.02-74.98C485.37 388.666 512 324.38 512 256c0-68.38-26.629-132.668-74.98-181.02zM288 384c0 17.673-14.327 32-32 32-17.673 0-32-14.327-32-32V224c0-17.673 14.327-32 32-32 17.673 0 32 14.327 32 32v160zm-32-224c-17.673 0-32-14.327-32-32 0-17.673 14.327-32 32-32s32 14.327 32 32c0 17.673-14.327 32-32 32z" fill="#{$color}"/></svg>',

	'information-live': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M273.542 160h-58.313C202.415 160 192 170.386 192 183.229c0 12.814 10.386 23.229 23.229 23.229h58.313v272.748c0 12.813 10.386 23.229 23.229 23.229 12.813 0 23.229-10.386 23.229-23.229V159.999h-46.458zM320 49.369c0 27.257-22.096 49.354-49.354 49.354s-49.354-22.097-49.354-49.354S243.388.015 270.646.015 320 22.111 320 49.369z" fill="#{$color}"/></svg>',

	'integer': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline integer-ones" d="M361.4 129.3c-74 0-82.9 84.1-82.9 125.6s10.4 127.9 82.9 127.9c73.5 0 82.9-86.4 82.9-127.9.1-41.3-9.4-125.6-82.9-125.6zm0 34.5c19.4-.4 29.3 15.8 34.7 34.9l-75 75c-1.5-42.5-1.2-110.7 40.3-109.9zm0 184.4c-18.9-.8-28.8-16.7-34.2-35.3l74.6-74.6c-.5 42.2.9 109.9-40.4 109.9z" fill="#{$color}"/><path class="lexicon-icon-outline integer-tens" d="M99.4 342h54.5V181.5H109v-27.6c12.3-2.3 32.2-3.3 56.5-20h33V342h48v36.1H99.4V342z" fill="#{$color}"/></svg>',

	'italic': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M165.23 512h92.562l60.343-342.235h-92.526zM330.423 16.713C319.488 5.559 305.92 0 289.719 0c-15.762 0-29.221 5.559-40.338 16.713-11.154 11.118-16.713 24.832-16.713 41.033 0 15.323 5.559 28.489 16.713 39.643 11.118 11.118 24.576 16.713 40.338 16.713 16.201 0 29.769-5.559 40.704-16.713 10.862-11.154 16.347-24.357 16.347-39.643 0-16.238-5.486-29.915-16.347-41.033z" fill="#{$color}"/></svg>',

	'link': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M285.057 320.303c-24.563 0-49.097-9.328-67.78-28.039-9.667-9.666-9.667-25.326 0-34.964 9.667-9.666 25.326-9.666 34.965 0 18.062 18.062 47.486 18.09 65.576 0l122.474-122.445c18.062-18.061 18.062-47.486-.029-65.576-8.762-8.762-20.408-13.596-32.788-13.596-12.38 0-23.997 4.805-32.76 13.567L274.203 169.761c-9.666 9.666-25.326 9.666-34.964 0-9.666-9.666-9.666-25.326 0-34.964L339.751 34.286c18.09-18.09 42.144-28.067 67.724-28.067h.029c25.58 0 49.663 9.978 67.752 28.067 37.366 37.367 37.366 98.166.029 135.504L352.811 292.235c-18.683 18.712-43.218 28.067-67.752 28.067z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M105.882 499.619h-.141c-25.552-.029-49.606-10.005-67.696-28.096C.678 434.157.622 373.414 37.903 336.132L160.49 213.545c37.367-37.367 98.166-37.339 135.504.029 9.666 9.666 9.666 25.326 0 34.964-9.666 9.666-25.326 9.666-34.964 0-18.09-18.09-47.486-18.09-65.576-.029L72.867 371.096c-18.005 18.005-17.92 47.344.141 65.435 8.762 8.762 20.408 13.596 32.788 13.623h.085c12.323 0 23.885-4.777 32.59-13.483l100.257-100.257c9.667-9.666 25.326-9.666 34.965 0 9.666 9.666 9.666 25.326 0 34.964L173.436 471.635c-18.034 18.062-42.002 27.983-67.555 27.983z" fill="#{$color}"/></svg>',

	'list-ol': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline list-ol-item-3" d="M479.4 478.1H189.8c-41.8 0-45-63.7 0-63.7h289.6c45.1 0 41.8 63.7 0 63.7z" fill="#{$color}"/><path class="lexicon-icon-outline list-ol-item-2" d="M479.4 286.9H189.8c-41.8 0-45-63.7 0-63.7h289.6c45.1-.1 41.8 63.7 0 63.7z" fill="#{$color}"/><path class="lexicon-icon-outline list-ol-item-1" d="M479.4 95.6H189.8c-41.8 0-45-63.7 0-63.7h289.6c45.1 0 41.8 63.7 0 63.7z" fill="#{$color}"/><path class="lexicon-icon-outline list-ol-bullet-3" d="M12.9 471.7c9.7 15.9 57.9 28.7 61.1-6.4 0-25.5-35.4-25.5-41.8-25.5v-19.1c25.7 3.2 48.8-16.7 32.2-38.2-11.4-11.5-35.4-3.2-45 9.6l-13-16c6.4-9.6 42.6-33.1 77.2-9.6 19.3 12.4 22.5 51-12.9 66.9 0 0 44.2 13.5 25.7 54.2-19.3 35.1-74 28.7-96.5 3.2l13-19.1z" fill="#{$color}"/><path class="lexicon-icon-outline list-ol-bullet-2" d="M0 303c25-24 88-66 61.1-95.8-19.3-19.1-41.8 3.2-45 9.6l-12.9-16c29-31.9 63.8-23.8 77.2-9.6 42.9 46.1-35.4 102.4-45 108.8h61.1v21.9H0V303z" fill="#{$color}"/><path class="lexicon-icon-outline list-ol-bullet-1" d="M38.6 28.7h-29v-16c6.4 0 29-9.6 32.2-12.7h19.3v143.4H35.4l3.2-114.7z" fill="#{$color}"/></svg>',

	'list-ul': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M448 288H160c-17.6 0-32-14.4-32-32s14.4-32 32-32h288c17.6 0 32 14.4 32 32s-14.4 32-32 32zM448 512H160c-17.6 0-32-14.4-32-32s14.4-32 32-32h288c17.6 0 32 14.4 32 32s-14.4 32-32 32zM448 64H160c-17.6 0-32-14.4-32-32s14.4-32 32-32h288c17.6 0 32 14.4 32 32s-14.4 32-32 32zM64 256c0 17.673-14.327 32-32 32S0 273.673 0 256c0-17.673 14.327-32 32-32s32 14.327 32 32zM64 32c0 17.673-14.327 32-32 32S0 49.673 0 32C0 14.327 14.327 0 32 0s32 14.327 32 32zM64 480c0 17.673-14.327 32-32 32S0 497.673 0 480c0-17.673 14.327-32 32-32s32 14.327 32 32z" fill="#{$color}"/></svg>',

	'list': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M96.037 0h-64c-17.664 0-32 14.336-32 32s14.336 32 32 32h64c17.664 0 32-14.336 32-32s-14.336-32-32-32zM96.037 224h-64c-17.664 0-32 14.336-32 32s14.336 32 32 32h64c17.664 0 32-14.336 32-32s-14.336-32-32-32zM96.037 448h-64c-17.664 0-32 14.336-32 32s14.336 32 32 32h64c17.664 0 32-14.336 32-32s-14.336-32-32-32zM480 288H224c-17.6 0-32-14.4-32-32s14.4-32 32-32h256c17.6 0 32 14.4 32 32s-14.4 32-32 32zM480 64H224c-17.6 0-32-14.4-32-32s14.4-32 32-32h256c17.6 0 32 14.4 32 32s-14.4 32-32 32zM480 512H224c-17.6 0-32-14.4-32-32s14.4-32 32-32h256c17.6 0 32 14.4 32 32s-14.4 32-32 32z" fill="#{$color}"/></svg>',

	'live': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M256 0C114.8 0 0 114.8 0 256s114.8 256 256 256 256-114.8 256-256S397.2 0 256 0z"/><path class="lexicon-icon-outline" d="M256 0C114.8 0 0 114.8 0 256s114.8 256 256 256 256-114.8 256-256S397.2 0 256 0zm0 384c-70.7 0-128-57.3-128-128s57.3-128 128-128 128 57.3 128 128-57.3 128-128 128z" fill="#{$color}"/></svg>',

	'lock-dots': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><circle class="lexicon-icon-outline lock-dots-dot1" cx="464" cy="48" r="48" fill="#{$color}"/><circle class="lexicon-icon-outline lock-dots-dot2" cx="464" cy="240" r="48" fill="#{$color}"/><circle class="lexicon-icon-outline lock-dots-dot3" cx="464" cy="432" r="48" fill="#{$color}"/><path class="lexicon-icon-outline lock-dots-connector" fill="#{$color}" d="M288 192l96-96h-32l-64 64z"/><path class="lexicon-icon-outline lock-dots-lock" d="M384 224H96v-96c0-84 128-84 128 0v31.5h32V128C256 1 64 0 64 128v96H44.8C16.6 224 0 247 0 275.2v153.6C0 457 16.6 480 44.8 480h224c28.2 0 51.2-23 51.2-51.2v-87.5l64 42.7v-32l-64-42.7.5-53.3H384v-32zM192 416h-64v-96h64v96z" fill="#{$color}"/></svg>',

	'lock': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M364.8 223.9H352v-96.1c0-127.4-192-128.1-192 0v96.1h-19.2c-28.2 0-44.8 23-44.8 51.2v153.7c0 28.2 16.6 51.2 44.8 51.2h224c28.2 0 51.2-23 51.2-51.2V275.1c0-28.2-23-51.2-51.2-51.2zM192 127.8c0-84 128-84.7 128 0v96.1H192v-96.1zM288 416h-64v-96.1h64V416z" fill="#{$color}"/></svg>',

	'logout': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M256 256c17.6 0 32-14.4 32-32V32c0-17.6-14.4-32-32-32s-32 14.4-32 32v192c0 17.6 14.4 32 32 32z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M459.834 164.518c-12.916-28.269-31.25-53.15-54.493-73.954-13.169-11.787-33.399-10.667-45.185 2.502s-10.666 33.399 2.502 45.186c16.628 14.883 29.738 32.668 38.965 52.864 9.54 20.879 14.377 43.215 14.377 66.389 0 42.738-16.643 82.917-46.863 113.137s-70.4 46.863-113.137 46.863c-42.738 0-82.917-16.643-113.137-46.863S96 300.242 96 257.505c0-23.175 4.837-45.512 14.377-66.392 9.228-20.197 22.337-37.983 38.965-52.865 13.168-11.787 14.289-32.017 2.502-45.185s-32.017-14.289-45.185-2.502c-23.243 20.803-41.577 45.686-54.493 73.956-13.38 29.286-20.165 60.572-20.165 92.988 0 30.226 5.927 59.564 17.616 87.201 11.284 26.678 27.43 50.63 47.992 71.191s44.513 36.709 71.191 47.992c27.637 11.69 56.975 17.616 87.201 17.616s59.565-5.927 87.2-17.616c26.678-11.284 50.63-27.43 71.192-47.992s36.708-44.513 47.991-71.191C474.074 317.069 480 287.731 480 257.505c0-32.416-6.784-63.702-20.166-92.987z" fill="#{$color}"/></svg>',

	'magic': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M335.1 114.2c-16.7 0-32.5 6.5-44.3 18.4L18.5 404.9C6.3 417.1-.2 433.3.2 450.5c.4 17.3 7.6 33.2 20.3 44.8 11.6 10.6 26.6 16.4 42.3 16.4 16.7 0 32.5-6.5 44.3-18.4L379.4 221c24.4-24.4 24.4-64.2 0-88.6-11.8-11.7-27.5-18.2-44.3-18.2z"/><path class="lexicon-icon-outline" d="M335.1 114.2c-16.7 0-32.5 6.5-44.3 18.4L18.5 404.9C6.3 417.1-.2 433.3.2 450.5c.4 17.3 7.6 33.2 20.3 44.8 11.6 10.6 26.6 16.4 42.3 16.4 16.7 0 32.5-6.5 44.3-18.4L379.4 221c24.4-24.4 24.4-64.2 0-88.6-11.8-11.7-27.5-18.2-44.3-18.2zm-56.4 89.6l29.5 29.5-192.4 192.4-29.5-29.5 192.4-192.4zm-230 260.8c-4.2-3.9-6.7-9.2-6.8-14.9s2.1-11.1 6.1-15.2l8.7-8.7 29.5 29.5-8.7 8.7c-7.5 7.6-20.8 7.9-28.8.6zm301.2-273l-12.2 12.1-29.5-29.5 12.1-12.1c3.9-3.9 9.2-6.1 14.8-6.1s10.8 2.2 14.8 6.1c8.1 8.1 8.1 21.4 0 29.5zM446.6 95l6.1 6.1c4.1 4.1 9.4 6.1 14.8 6.1s10.7-2 14.8-6.1c8.2-8.2 8.2-21.4 0-29.5l-6.1-6.1 6.1-6.1c8.2-8.2 8.2-21.4 0-29.5-8.2-8.2-21.4-8.2-29.5 0l-6.1 6.1-6.1-6.1c-8.2-8.2-21.4-8.2-29.5 0-8.2 8.2-8.2 21.4 0 29.5l6.1 6.1-6.1 6.1c-8.2 8.2-8.2 21.4 0 29.5 4.1 4.1 9.4 6.1 14.8 6.1s10.7-2 14.8-6.1l5.9-6.1zM303 62.8c0 11.5 9.4 20.9 20.9 20.9s20.9-9.4 20.9-20.9c11.5 0 20.9-9.4 20.9-20.9S356.3 21 344.8 21c0-11.5-9.4-20.9-20.9-20.9S303 9.5 303 21.1c-11.5 0-20.9 9.4-20.9 20.9s9.4 20.8 20.9 20.8zM490.9 188.1c0-11.5-9.4-20.9-20.9-20.9s-20.9 9.4-20.9 20.9c-11.5 0-20.9 9.4-20.9 20.9s9.4 20.9 20.9 20.9c0 11.5 9.4 20.9 20.9 20.9s20.9-9.4 20.9-20.9c11.5 0 20.9-9.4 20.9-20.9s-9.3-20.9-20.9-20.9z" fill="#{$color}"/></svg>',

	'mark-as-answer': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline mark-as-answer-hook" d="M105 109.4c0-47.6 73-48.6 73 0 0 53.2-73 53.2-73 145.9 0 50.9 73 46.9 73 0 0-49.9 73-56.9 73-145.9C251-35 32-38 32 109.4c0 49.2 73 48.2 73 0z" fill="#{$color}"/><path class="lexicon-icon-outline mark-as-answer-item-2" d="M312.4 390h131.2c48.1 0 49.1-64 0-64H312.4c-47.5 0-49.5 64 0 64z" fill="#{$color}"/><path class="lexicon-icon-outline mark-as-answer-item-1" d="M312.4 262h131.2c48.1 0 49.1-64 0-64H312.4c-47.5 0-49.5 64 0 64z" fill="#{$color}"/><path class="lexicon-icon-outline mark-as-answer-item-3" d="M312.4 511h67.2c48.1 0 49.1-64 0-64h-67.2c-47.5 0-49.5 64 0 64z" fill="#{$color}"/><circle class="lexicon-icon-outline mark-as-answer-dot" cx="141.1" cy="358" r="36" fill="#{$color}"/></svg>',

	'mark-as-question': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline mark-as-question-hook" d="M333 109.4c0-47.6 73-48.6 73 0 0 53.2-73 53.2-73 145.9 0 50.9 73 46.9 73 0 0-49.9 73-56.9 73-145.9 0-144.4-219-147.4-219 0 0 49.2 73 48.2 73 0z" fill="#{$color}"/><path class="lexicon-icon-outline mark-as-question-item-1" d="M100.4 390h131.2c48.1 0 49.1-64 0-64H100.4c-47.5 0-49.5 64 0 64z" fill="#{$color}"/><path class="lexicon-icon-outline mark-as-question-item-2" d="M100.4 512h311.2c48.1 0 49.1-64 0-64H100.4c-47.5 0-49.5 64 0 64z" fill="#{$color}"/><circle class="lexicon-icon-outline mark-as-question-dot" cx="369.1" cy="358" r="36" fill="#{$color}"/></svg>',

	'merge': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M322.6 238.2l-115.5-59c89-52.6 45-179.2-47-179.2-112 0-130.6 154.6-32 186.1v182.2c-44.7 27.6-53.3 140.9 48 143.6 96 1.3 108.6-134 16-158.3V243.4l97.1 49.6c-13.1 88.3 110.2 126.9 150.8 46.9 36.7-91.3-62.6-143.3-117.4-101.7zM160.1 48c66.6 0 62 96 0 96-64.6-.1-62.6-96 0-96zm16 431.8c-66 0-62-96 0-96 61.3.1 65.3 95.4 0 96zM368 351.9c-60 0-64.6-96 0-96 62.7 0 63.3 96 0 96z" fill="#{$color}"/></svg>',

	'message-boards': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline message-boards-speech-balloon-content1" d="M272.8 256.1h-160c-22.4 0-22.4 32 0 32h160c19.2 0 22.4-32 0-32z" fill="#{$color}"/><path class="lexicon-icon-outline message-boards-speech-balloon-content2" d="M208.8 320.1h-96c-22.4 0-22.4 32 0 32h96c19.2 0 22.4-32 0-32z" fill="#{$color}"/><path class="lexicon-icon-outline message-boards-speech-balloon-outline" d="M352 160.1H32c-17.7 0-32 14.3-32 32v224c0 17.7 14.3 32 32 32h32v32c.4 30.2 36.2 41.7 54.6 22.6l54.4-54.6h179c17.7 0 32-14.3 32-32v-224c0-17.7-14.4-32-32-32zm0 256H32v-224h320v224z" fill="#{$color}"/><path class="lexicon-icon-outline message-boards-speech-balloon-solid" d="M480 64.1h-32v-32c.3-25.1-31.5-44.5-54.6-22.6L339 64.1H160c-17.7 0-32 14.3-32 32v32h225.2c34.7 0 62.8 28.1 62.8 62.8v161.2h64c17.7 0 32-14.3 32-32v-224c-.1-17.6-14.4-32-32-32z" fill="#{$color}"/></svg>',

	'message': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline message-speech-balloon-outline" d="M480 31.9H32c-19.2 0-32 12.8-32 32v320c0 19.2 12.8 32 32 32h64v32c0 25.6 32 44.8 54.4 22.4l54.4-54.4H480c19.2 0 32-12.8 32-32v-320c0-19.2-12.8-32-32-32zm-32 320H64v-256h384v256z" fill="#{$color}"/><path class="lexicon-icon-outline message-speech-balloon-content1" d="M336 159.9H144c-22.4 0-22.4 32 0 32h192c19.2 0 22.4-32 0-32z" fill="#{$color}"/><path class="lexicon-icon-outline message-speech-balloon-content2" d="M272 255.9H144c-22.4 0-22.4 32 0 32h128c19.2 0 22.4-32 0-32z" fill="#{$color}"/></svg>',

	'mobile-device-rules': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 448.1588"><path class="lexicon-icon-body" d="M192 0H64C28.8 0 0 28.8 0 64v320.159c0 35.2 28.8 64 64 64h128c35.2 0 64-28.8 64-64V64c0-35.2-28.8-64-64-64zm-63 416.159c-8.836 0-16-7.164-16-16s7.163-16 16-16 16 7.163 16 16-7.163 16-16 16zm63-96v30.804H64V64h128v256.159z"/><circle class="lexicon-icon-outline" cx="320" cy="96" r="32" fill="#{$color}"/><circle class="lexicon-icon-outline" cx="320" cy="352" r="32" fill="#{$color}"/><circle class="lexicon-icon-outline" cx="320" cy="224" r="32" fill="#{$color}"/><path class="lexicon-icon-outline" d="M416 128h64c17.673 0 32-14.327 32-32s-14.327-32-32-32h-64c-17.673 0-32 14.327-32 32s14.327 32 32 32zM480 192h-64c-17.673 0-32 14.327-32 32s14.327 32 32 32h64c17.673 0 32-14.327 32-32s-14.327-32-32-32zM480 320h-64c-17.673 0-32 14.327-32 32s14.327 32 32 32h64c17.673 0 32-14.327 32-32s-14.327-32-32-32z" fill="#{$color}"/></svg>',

	'mobile-landscape': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M0 128v256c0 35.2 28.8 64 64 64h384c35.2 0 64-28.8 64-64V128c0-35.2-28.8-64-64-64H64C28.8 64 0 92.8 0 128zm480 110v32c0 22-32 20-32 0v-32c0-22 32-21 32 0zm-96-109.3c17.7 0 32 14.3 32 32V352c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V160.7c0-17.7 14.3-32 32-32h288z" fill="#{$color}"/></svg>',

	'mobile-portrait': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M384 0H128C92.8 0 64 28.8 64 64v384c0 35.2 28.8 64 64 64h256c35.2 0 64-28.8 64-64V64c0-35.2-28.8-64-64-64zM274 480h-32c-22 0-20-32 0-32h32c22 0 21 32 0 32zm109.3-96c0 17.7-14.3 32-32 32H160c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h191.3c17.7 0 32 14.3 32 32v288z" fill="#{$color}"/></svg>',

	'moon': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M186.5 81.4c0-25.4 3.8-49.8 10.7-72.9C84.3 34.3 0 135.2 0 256c0 140.3 113.7 254 254 254 114.9 0 212-76.3 243.3-181.1-18.3 4.2-37.3 6.5-56.8 6.5-140.2 0-254-113.8-254-254z" fill="#{$color}"/></svg>',

	'move': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 511.9999"><path class="lexicon-icon-outline" d="M502.5 233.1l-71.6-71.6c-12.7-12.7-33.2-12.7-45.8 0-6.3 6.3-9.5 14.6-9.5 22.9s3.2 16.6 9.5 22.9l16.7 16.7H288V110.2l16.7 16.7c12.7 12.7 33.2 12.7 45.8 0 12.7-12.7 12.7-33.2 0-45.8L278.9 9.5C272.8 3.4 264.6 0 256 0c-8.6 0-16.8 3.4-22.9 9.5l-71.6 71.6c-12.7 12.7-12.7 33.2 0 45.8 6.3 6.3 14.6 9.5 22.9 9.5s16.6-3.2 22.9-9.5l16.7-16.7V224H110.2l16.7-16.7c12.7-12.7 12.7-33.2 0-45.8-12.7-12.7-33.2-12.7-45.8 0L9.5 233.1C3.4 239.2 0 247.4 0 256c0 8.6 3.4 16.8 9.5 22.9l71.6 71.6c12.7 12.7 33.2 12.7 45.8 0 6.3-6.3 9.5-14.6 9.5-22.9s-3.2-16.6-9.5-22.9L110.2 288H224v113.8l-16.7-16.7c-12.7-12.7-33.2-12.7-45.8 0-12.7 12.7-12.7 33.2 0 45.8l71.6 71.6c6.1 6.1 14.3 9.5 22.9 9.5 8.6 0 16.8-3.4 22.9-9.5l71.6-71.6c12.7-12.7 12.7-33.2 0-45.8-6.3-6.3-14.6-9.5-22.9-9.5s-16.6 3.2-22.9 9.5L288 401.8V288h113.8l-16.7 16.7c-12.7 12.7-12.7 33.2 0 45.8 12.7 12.7 33.2 12.7 45.8 0l71.6-71.6c6.1-6.1 9.5-14.3 9.5-22.9 0-8.6-3.4-16.8-9.5-22.9z" fill="#{$color}"/></svg>',

	'myspace': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M488.728 231.264c-12.846 0-23.272 10.426-23.272 23.273 0 115.486-93.969 209.454-209.454 209.454S46.548 370.022 46.548 254.537c0-12.846-10.426-23.273-23.273-23.273S.002 241.69.002 254.537c0 141.152 114.847 256 256 256s256-114.848 256-256c0-12.846-10.426-23.273-23.272-23.273z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M115.513 298.183c6.49 0 12.953-2.712 17.581-8.006 30.986-35.588 75.776-56.014 122.933-56.014s91.947 20.427 122.933 56.014c8.431 9.682 23.139 10.719 32.848 2.261 9.682-8.431 10.692-23.139 2.261-32.848-21.916-25.188-49.338-44.205-79.579-56.44 23.139-21.278 37.901-51.519 37.901-85.377 0-64.153-52.211-116.364-116.363-116.364S139.665 53.62 139.665 117.773c0 33.858 14.762 64.1 37.901 85.377-30.242 12.235-57.663 31.251-79.579 56.44-8.431 9.682-7.421 24.39 2.287 32.848a22.987 22.987 0 0 0 15.24 5.745zm70.669-180.357c0-38.513 31.305-69.818 69.818-69.818s69.818 31.305 69.818 69.818-31.305 69.818-69.818 69.818-69.818-31.332-69.818-69.818z" fill="#{$color}"/></svg>',

	'number': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline number-hundreds" d="M7 334.5h50V187.4H15.8V162c15.9-3.5 35-7.8 51.7-18.3h30.3v190.8h44v33.1H7v-33.1z" fill="#{$color}"/><path class="lexicon-icon-outline number-tens" d="M174.9 344c18.1-21 98.1-82 101.4-133.8-.3-59.2-66.3-39.7-80.6-13.7L173.2 174c91.3-89 188.8 8 118.1 95.2-7.4 10.5-46.2 54.6-57.2 66.4 36.9-2.6 92.2-2.5 92.2-2.5v34.5H174.9V344z" fill="#{$color}"/><path class="lexicon-icon-outline number-ones" d="M369.9 314.1C382 326 416 354 452.8 329.8c29.7-27.3 6.7-68.8-54.4-62.8v-29.6c11 0 58.6.6 58.4-35.9-2.3-43.5-54.8-34-78.1-8.8l-20.7-25c9.6-8.5 43-38.7 96.8-24.3 67.2 23.1 46.2 98.1 3.8 106.6 47.4 9 77.4 88-1.6 117.4-44 11.6-86-2.4-106.5-27.3l19.4-26z" fill="#{$color}"/></svg>',

	'oauth': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline oauth-2-border" d="M256.4 64c254.8 13 256.7 370.5 0 384C-.5 436.4.2 76.4 256.4 64m0-64c-342 15.6-341.7 497.6 0 512 340.5-12.1 341.1-497.8 0-512z" fill="#{$color}"/><path class="lexicon-icon-outline oauth-2-a" d="M350.6 310.3L303.9 164c-7.2-17.7-16-36-47.8-36-32.1 0-40.5 18.2-48 36l-46.7 146.4c-10.9 40.4 45.8 59.7 61.2 19.3l9.2-29h48.3l9.2 29c15.4 40.3 72.3 21.3 61.3-19.4z" fill="#{$color}"/></svg>',

	'open-id': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline open-id-tail" d="M224 64v382.2C128.3 436.4 64 383.8 64 336c0-42.3 50.3-88.3 128-105.2v-65C81.6 185.3 0 254 0 336c0 89.7 97.8 165.2 224 176l96-64V0l-96 64z" fill="#{$color}"/><path class="lexicon-icon-outline open-id-head" d="M512 320l-32-128-35.2 26.4c-25.6-19.5-56.7-35.5-92.8-45.5v66.9c7.2 2.6 26.3 7.5 41.8 16.8L352 288l160 32z" fill="#{$color}"/></svg>',

	'order-arrow-down': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M161.5 367.9l71.6 71.6c11.9 10.8 32.9 11.2 45.8 0l71.6-71.6c29.8-33.6-15.8-74.9-45.8-45.8L288 338.8V96c0-42.5-64-42.5-64 0v242.8l-16.7-16.7c-31.8-29.9-75.5 14.9-45.8 45.8z" fill="#{$color}"/></svg>',

	'order-arrow-up': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M350.4 143.9l-71.6-71.6c-11.9-10.8-32.9-11.3-45.8 0l-71.6 71.6c-29.8 33.6 15.8 74.9 45.8 45.8l16.7-16.7v242.8c0 42.5 64 42.5 64 0V173l16.7 16.7c31.8 29.8 75.5-14.9 45.8-45.8z" fill="#{$color}"/></svg>',

	'order-arrow': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline order-arrow-arrow-down" d="M307.6 431.5l71.6 71.6c11.9 10.8 32.9 11.2 45.8 0l71.6-71.6c29.8-33.6-15.8-74.9-45.8-45.8l-16.7 16.7V31.6c0-42.5-64-42.5-64 0v370.8l-16.7-16.7c-31.8-29.9-75.5 14.9-45.8 45.8z" fill="#{$color}"/><path class="lexicon-icon-outline order-arrow-arrow-up" d="M204.4 80.5L132.8 8.9C120.9-1.8 99.9-2.3 87 8.9L15.4 80.5c-29.8 33.6 15.7 74.9 45.8 45.8l16.7-16.7v370.8c0 42.5 64 42.5 64 0V109.6l16.7 16.7c31.8 29.9 75.5-14.9 45.8-45.8z" fill="#{$color}"/></svg>',

	'organizations': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M468 320h-20v-64c0-17.673-14.327-32-32-32H288v-32h20c24.262 0 44-19.738 44-44V44c0-24.262-19.738-44-44-44H204c-24.262 0-44 19.738-44 44v104c0 24.262 19.738 44 44 44h20v32H96c-17.673 0-32 14.327-32 32v64H44c-24.262 0-44 19.738-44 44v104c0 24.262 19.738 44 44 44h104c24.262 0 44-19.738 44-44V364c0-24.262-19.738-44-44-44h-20v-32h256v32h-20c-24.262 0-44 19.738-44 44v104c0 24.262 19.738 44 44 44h104c24.262 0 44-19.738 44-44V364c0-24.262-19.738-44-44-44zM224 64h64v64h-64V64zm-96 384H64v-64h64v64zm320 0h-64v-64h64v64z" fill="#{$color}"/></svg>',

	'page-template': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 511.3752"><path class="lexicon-icon-outline" d="M416 0H63.375C28.374 0 0 28.374 0 63.375V448c0 35.001 28.374 63.375 63.375 63.375h380.25C478.626 511.375 512 483.001 512 448V96L416 0zm32 445.37c-1.161.996-3.13 2.005-4.375 2.005H64V64h256v128h128v253.37zM384 128V64l64 64h-64z" fill="#{$color}"/><path class="lexicon-icon-body" d="M96 96h192v96H96zM96 224h192v192H96zM320 224h96v192h-96z"/></svg>',

	'page': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 511.4"><path class="lexicon-icon-body" fill="none" d="M416 0H63.4C28.4 0 0 28.4 0 63.4V448c0 35 28.4 63.4 63.4 63.4h380.2c35 0 68.4-28.4 68.4-63.4V96L416 0z"/><path class="lexicon-icon-outline" d="M416 0H63.4C28.4 0 0 28.4 0 63.4V448c0 35 28.4 63.4 63.4 63.4h380.2c35 0 68.4-28.4 68.4-63.4V96L416 0zm32 445.4c-1.2 1-3.1 2-4.4 2H64V64h256v128h128v253.4zM384 128V64l64 64h-64z" fill="#{$color}"/></svg>',

	'pages-tree': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline pages-tree-tree" d="M161.5 288h126c0 17.6 14.4 32 32 32h64c17.8 0 32-14.4 32-32v-64c0-17.8-14.4-32-32-32h-64c-17.8 0-32 14.4-32 32v32h-126V128h32c17.8 0 32-14.4 32-32V32c0-17.8-14.4-32-32-32h-64c-17.8 0-32 14.4-32 32v64c0 17.6 14.4 32 32 32v352h158c0 17.6 14.4 32 32 32h64c17.8 0 32-14.4 32-32v-64c0-17.8-14.4-32-32-32h-64c-17.8 0-32 14.4-32 32v32h-126V288z" fill="#{$color}"/></svg>',

	'paperclip': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M473.449 48.992c-17.8-17.799-41.45-27.588-66.604-27.588s-48.805 9.788-66.604 27.588L137.229 251.976c-12.604 12.604-19.249 28.517-18.784 44.868.465 15.339 7.136 30.185 18.756 41.832 11.566 11.565 26.986 17.963 43.364 17.963s31.798-6.398 43.363-17.963L332.83 229.774c9.351-9.351 9.351-24.498 0-33.822s-24.498-9.351-33.822 0l-108.93 108.902c-5.059 5.086-13.917 5.113-19.03 0-2.98-2.98-4.675-6.316-4.785-9.378-.082-3.144 1.531-6.37 4.785-9.624L374.06 82.84c17.526-17.499 48.039-17.499 65.565 0 18.073 18.073 18.073 47.493 0 65.565L201.726 386.304c-32.645 32.619-85.771 32.645-118.417 0s-32.645-85.771 0-118.417L252.471 98.725c9.351-9.35 9.351-24.498 0-33.822-9.351-9.35-24.498-9.35-33.822 0L49.487 234.065c-51.293 51.293-51.293 134.794 0 186.087 25.647 25.647 59.359 38.469 93.044 38.469 33.713 0 67.397-12.823 93.044-38.469l237.899-237.899c36.719-36.775 36.719-96.516-.027-133.263z" fill="#{$color}"/></svg>',

	'paragraph': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M480 448c0 17.7-14.3 32-32 32H128c-17.7 0-32-14.3-32-32s14.3-32 32-32h320c17.7 0 32 14.3 32 32zm-32-160H224c-17.7 0-32 14.3-32 32s14.3 32 32 32h224c17.7 0 32-14.3 32-32s-14.3-32-32-32zm0-128H320c-17.7 0-32 14.3-32 32s14.3 32 32 32h128c17.7 0 32-14.3 32-32s-14.3-32-32-32zm0-128H320c-17.7 0-32 14.3-32 32s14.3 32 32 32h128c17.7 0 32-14.3 32-32s-14.3-32-32-32zM96 320c0 17.7-14.3 32-32 32s-32-14.3-32-32V64c0-17.7 14.3-32 32-32h64c53 0 96 43 96 96s-43 96-96 96H96v96zm0-160h32c17.7 0 32-14.3 32-32s-14.3-32-32-32H96v64z" fill="#{$color}"/></svg>',

	'password-policies': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" fill="#{$color}" d="M352 384h64v32h-64z"/><path class="lexicon-icon-outline" d="M484 291.025V232.57c0-55.14-44.86-100-100-100-26.981 0-51.716 10.75-69.648 30.267a97.217 97.217 0 0 0-13.411 18.64c-13.651-15.367-29.164-27.894-45.987-37.327 9.34-14.57 14.76-31.882 14.76-50.437C269.715 42.04 227.675 0 176 0S82.286 42.04 82.286 93.714c0 18.555 5.42 35.867 14.76 50.437-17.218 9.655-33.07 22.543-46.952 38.408C17.791 219.477 0 268.289 0 320c0 17.673 14.327 32 32 32s32-14.327 32-32c0-73.1 50.243-132.571 112-132.571 53.212 0 97.872 44.154 109.213 103.135C268.205 296.652 256 312.924 256 332v136c0 24.262 19.738 44 44 44h168c24.262 0 44-19.738 44-44V332c0-18.618-11.629-34.56-28-40.975zM176 123.429c-16.385 0-29.714-13.33-29.714-29.715S159.616 64 176 64s29.714 13.33 29.714 29.714S192.384 123.43 176 123.43zM352 232.57c0-17.339 10.014-36 32-36 19.85 0 36 16.15 36 36V288h-68v-55.429zM448 448H320v-96h128v96z" fill="#{$color}"/></svg>',

	'paste': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M412 128h-60V68c0-37.4-30.6-68-68-68H100C62.6 0 32 30.6 32 68v248c0 37.4 30.6 68 68 68h60v60c0 37.4 30.6 68 68 68h184c37.4 0 68-30.6 68-68V196c0-37.4-30.6-68-68-68z"/><path class="lexicon-icon-outline" d="M412 128h-60V68c0-37.4-30.6-68-68-68H100C62.6 0 32 30.6 32 68v248c0 37.4 30.6 68 68 68h60v60c0 37.4 30.6 68 68 68h184c37.4 0 68-30.6 68-68V196c0-37.4-30.6-68-68-68zm-252 68v124H96V64h192v64h-60c-37.4 0-68 30.6-68 68zm256 252H224V192h192v256z" fill="#{$color}"/></svg>',

	'pause': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M160 0c-17.7 0-32 14.3-32 32v448c0 17.7 14.3 32 32 32s32-14.3 32-32V32c0-17.7-14.3-32-32-32zM352 0c-17.7 0-32 14.3-32 32v448c0 17.7 14.3 32 32 32s32-14.3 32-32V32c0-17.7-14.3-32-32-32z" fill="#{$color}"/></svg>',

	'pencil': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M483 31c-16.1-16.1-37.5-25-60.2-25s-44.1 8.9-60.2 24.9L4.1 389.4l4.4 115.3 119.9 1.2L483 151.4c33.2-33.2 33.2-87.2 0-120.4z"/><path class="lexicon-icon-outline" d="M483 31c-16.1-16.1-37.5-25-60.2-25s-44.1 8.9-60.2 24.9L4.1 389.4l4.4 115.3 119.9 1.2L483 151.4c33.2-33.2 33.2-87.2 0-120.4zM105.1 449l-42-.4-1.4-36.5 274.4-274.4 40.1 40.1L105.1 449zm337.8-337.8l-26.4 26.4-40.1-40.1 26.4-26.4c10.7-10.7 29.4-10.7 40.1 0 11 11.1 11 29.1 0 40.1z" fill="#{$color}"/></svg>',

	'phone': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M490.9 363.4l-2.8-5.1C468.3 322.4 359.9 304 358.9 304l-2.4-.1-10.8 1.5c-16.9 3.9-31 15.7-50.5 33.8-25.2-14.7-52.4-37.6-68.7-54.3-16.7-17.1-39.9-47.7-52.4-71.6 22-21.6 37.4-38.7 38.4-61.7 0-1-13.8-110.1-48.9-131.7l-5.1-3.1C148.9 11.1 131 .4 109.2.4c-5.4 0-10.8.7-17 2.3-6.9 2-13.3 4.8-20 9.1C55.9 23 26.2 46.7 11.7 78c-13.5 30.8-4.4 187.9 113.4 311 111.6 116.8 241.2 122.7 266.1 122.7 6.4 0 15.1-.3 22.4-1.6l2.8-.1 6.7-2.5c32.2-13.2 56.9-41.7 68.4-57.2 26.9-34.8 6.3-73.7-.6-86.9z"/><path class="lexicon-icon-outline" d="M490.9 363.4l-2.8-5.1C468.3 322.4 359.9 304 358.9 304l-2.4-.1-10.8 1.5c-16.9 3.9-31 15.7-50.5 33.8-25.2-14.7-52.4-37.6-68.7-54.3-16.7-17.1-39.9-47.7-52.4-71.6 22-21.6 37.4-38.7 38.4-61.7 0-1-13.8-110.1-48.9-131.7l-5.1-3.1C148.9 11.1 131 .4 109.2.4c-5.4 0-10.8.7-17 2.3-6.9 2-13.3 4.8-20 9.1C55.9 23 26.2 46.7 11.7 78c-13.5 30.8-4.4 187.9 113.4 311 111.6 116.8 241.2 122.7 266.1 122.7 6.4 0 15.1-.3 22.4-1.6l2.8-.1 6.7-2.5c32.2-13.2 56.9-41.7 68.4-57.2 26.9-34.8 6.3-73.7-.6-86.9zm-45.5 51.7c-10.5 14-27.3 31.3-42.6 38-1.5.2-5.4.6-11.6.6-20.7 0-128.8-5.1-224.1-104.8C67 244.3 62.6 119 65.5 100c6.6-12.7 21.2-27.7 38.7-39.8.5-.3 1.9-1.1 3.4-1.6 5.5-1.4 15.6 4.6 21 7.8l2.4 1.5c8.1 13.5 20.6 63.6 23.3 81.2-3.8 6.4-19.2 21.4-27.7 29.8l-1 1.1c-11.9 12.8-15.5 31.2-8.9 47.3 14.2 32.9 45.9 75.3 68.4 98.3 22.1 22.8 59.4 53.4 93.2 70.6 16.3 8.1 36.3 4.8 49.1-7.5 10.1-9.4 25-23.4 30.6-26.3 17.6 3.4 67.7 18.2 80.8 26.7l1.1 2c7 13.2 8.6 19.9 5.5 24z" fill="#{$color}"/></svg>',

	'picture': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M168.45 88.689c0 45.13-36.585 81.717-81.717 81.717S5.016 133.821 5.016 88.689c0-45.13 36.586-81.717 81.717-81.717s81.717 36.586 81.717 81.717zM505.454 480.481L335.262 201.5c-5.408-8.894-17.717-10.388-25.116-3.095L200.361 306.839l-40.306-39.808c-7.4-7.329-19.709-5.798-25.116 3.096L6.548 480.484C.003 491.228 7.722 505.03 20.351 505.03h471.337c12.594 0 20.313-13.803 13.767-24.546z" fill="#{$color}"/></svg>',

	'play': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M127.499 453.745V58.255c0-46.992 26.018-58.255 57.841-25.017l189.245 197.744c13.165 13.751 13.165 36.28 0 50.067L185.34 478.794c-31.788 33.205-57.841 21.941-57.841-25.05z" fill="#{$color}"/></svg>',

	'plug': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M457.8 326.4L413 281.6l89.6-89.6c28.8-32-16-73.6-44.8-44.8l-89.6 89.6-92.8-92.8L365 54.4c28.8-32-12.8-73.6-44.8-44.8l-89.6 89.6-44.8-44.8C157 28.8 112.2 67.2 141 99.2l-38.4 38.4c-64 64-67.2 166.4-6.4 233.6l-96 96L45 512l92.8-92.8c28.8 32 128 92.8 224 3.2l48-48c35.2 25.6 76.8-19.2 48-48z" fill="#{$color}"/></svg>',

	'plus-squares': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline plus-squares-square1" d="M481 1H321c-17.7 0-32 14.3-32 32v160c0 17.7 14.3 32 32 32h160c17.7 0 32-14.3 32-32V33c0-17.7-14.3-32-32-32zm-32 160h-96V65h96v96z" fill="#{$color}"/><path class="lexicon-icon-outline plus-squares-square2" d="M481 289H321c-17.7 0-32 14.3-32 32v160c0 17.7 14.3 32 32 32h160c17.7 0 32-14.3 32-32V321c0-17.7-14.3-32-32-32zm-32 160h-96v-96h96v96z" fill="#{$color}"/><path class="lexicon-icon-outline plus-squares-square3" d="M193 289H33c-17.7 0-32 14.3-32 32v160c0 17.7 14.3 32 32 32h160c17.7 0 32-14.3 32-32V321c0-17.7-14.3-32-32-32zm-32 160H65v-96h96v96z" fill="#{$color}"/><path class="lexicon-icon-outline plus-squares-plus" fill="#{$color}" d="M129 33H97v64H33v32h64v64.1h32V129h64V97h-64z"/></svg>',

	'plus': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M479.82 224.002H287.41V32.092c0-17.6-14.4-32-32-32s-32 14.4-32 32v191.91H32c-17.6 0-32 14.4-32 32s14.4 32 32 32h191.41v191.91c0 17.6 14.4 32 32 32s32-14.4 32-32V288.003h192.41c17.6 0 32-14.4 32-32s-14.4-32-32-32z" fill="#{$color}"/></svg>',

	'polls': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M448 0H64C28.7 0 0 28.7 0 64v384c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64z"/><path class="lexicon-icon-outline" d="M448 0H64C28.7 0 0 28.7 0 64v384c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64zm0 448H64V64h384v384z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M160 128c-17.7 0-32 14.3-32 32v192c0 17.7 14.3 32 32 32s32-14.3 32-32V160c0-17.7-14.3-32-32-32zM256 224c-17.7 0-32 14.3-32 32v96c0 17.7 14.3 32 32 32s32-14.3 32-32v-96c0-17.7-14.3-32-32-32zM352 192c-17.7 0-32 14.3-32 32v128c0 17.7 14.3 32 32 32s32-14.3 32-32V224c0-17.7-14.3-32-32-32z" fill="#{$color}"/></svg>',

	'print': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M448 96h-63.5V33c0-18.2-14.8-33-33-33H161.4c-18.2 0-33 14.8-33 33v63H64c-35.3 0-64 27.7-64 63v193.3c0 35.3 28.7 64 64 64h32.6v64.3c0 18.2 14.8 33 33 33h254.9c18.2 0 32-14.8 32-33v-64.3H448c35.3 0 64-28.7 64-64V159c0-35.3-28.7-63-64-63z"/><path class="lexicon-icon-outline" d="M448 96h-63.5V33c0-18.2-14.8-33-33-33H161.4c-18.2 0-33 14.8-33 33v63H64c-35.3 0-64 27.7-64 63v193.3c0 35.3 28.7 64 64 64h32.6v64.3c0 18.2 14.8 33 33 33h254.9c18.2 0 32-14.8 32-33v-64.3H448c35.3 0 64-28.7 64-64V159c0-35.3-28.7-63-64-63zM192.4 64h128.1v32.4H192.4V64zm159.2 383.6h-191v-95.3h190.9l.1 95.3zm96.4-95.3h-31.4v-31.1c0-18.2-14.8-33-33-33h-254c-18.2 0-33 14.8-33 33v31.1H64V160h384v192.3z" fill="#{$color}"/><circle class="lexicon-icon-outline" cx="112" cy="208.3" r="16" fill="#{$color}"/><circle class="lexicon-icon-outline" cx="176.3" cy="208" r="15.7" fill="#{$color}"/></svg>',

	'product-menu-closed': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M464 512H144c-26.5 0-48-21.5-48-48V48c0-26.4 21.5-48 48-48h320c26.5 0 48 21.5 48 48v416c0 26.4-21.6 48-48 48z"/><path class="lexicon-icon-outline" d="M464 512H144c-26.5 0-48-21.5-48-48V48c0-26.4 21.5-48 48-48h320c26.5 0 48 21.5 48 48v416c0 26.4-21.6 48-48 48zm-304-64h288V64H160v384zM31 0C13.9 0 0 13.9 0 31v450c0 17.1 13.9 31 31 31s31-13.9 31-31V31c.1-17.1-13.8-31-31-31z" fill="#{$color}"/></svg>',

	'product-menu-open': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M465.5 5.8h-419C20.9 5.8 0 26.7 0 52.3v407.3c0 25.7 20.9 46.5 46.5 46.5h418.9c25.7 0 46.5-20.9 46.5-46.5V52.4c.1-25.7-20.8-46.6-46.4-46.6z"/><path class="lexicon-icon-outline" d="M465.5 5.8h-419C20.9 5.8 0 26.7 0 52.3v407.3c0 25.7 20.9 46.5 46.5 46.5h418.9c25.7 0 46.5-20.9 46.5-46.5V52.4c.1-25.7-20.8-46.6-46.4-46.6zM448 448H256V64h192v384z" fill="#{$color}"/></svg>',

	'product-menu': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M176 512H48c-26.5 0-48-21.5-48-48V48C0 21.5 21.5 0 48 0h128c26.5 0 48 21.5 48 48v416c0 26.5-21.5 48-48 48z"/><path class="lexicon-icon-outline" d="M176 512H48c-26.5 0-48-21.5-48-48V48C0 21.5 21.5 0 48 0h128c26.5 0 48 21.5 48 48v416c0 26.5-21.5 48-48 48zM64 448h96V64H64v384zM480 64H320c-17.7 0-32-14.3-32-32s14.3-32 32-32h160c17.7 0 32 14.3 32 32s-14.3 32-32 32zM480 288H320c-17.7 0-32-14.3-32-32s14.3-32 32-32h160c17.7 0 32 14.3 32 32s-14.3 32-32 32zM480 512H320c-17.7 0-32-14.3-32-32s14.3-32 32-32h160c17.7 0 32 14.3 32 32s-14.3 32-32 32z" fill="#{$color}"/></svg>',

	'propagation': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline propagation-arrow-bottom-right" d="M379.4 229.1L480 329.6v-12c0-21.1 31.5-21.2 32 0V368c0 8.8-7.2 16-16 16h-50.4c-21.7-.8-20.7-31.8 0-32h11.5L356.8 251.7c-14.8-17.1 8.1-36.9 22.6-22.6z" fill="#{$color}"/><path class="lexicon-icon-outline propagation-arrow-bottom-left" d="M132.6 229.1L32 329.6v-12c0-21.1-31.5-21.2-32 0V368c0 8.8 7.2 16 16 16h50.4c21.7-.8 20.7-31.8 0-32H54.9l100.3-100.3c14.8-17.1-8.1-36.9-22.6-22.6z" fill="#{$color}"/><path class="lexicon-icon-outline propagation-arrow-bottom" d="M240.2 304.2v153.4l-8.5-8.5c-14.9-14.9-37.3 7.3-22.6 22.6l35.6 35.6c6.2 6.2 16.4 6.2 22.6 0l35.6-35.6c14.8-15.9-7.8-37.1-22.6-22.6l-8.1 8.1v-153c-1.7-22.5-31.9-20.4-32 0z" fill="#{$color}"/><circle class="lexicon-icon-outline propagation-circle" cx="256" cy="112" r="112" fill="#{$color}"/></svg>',

	'question-circle-full': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M256 0C114.63 0 0 114.6 0 256c0 141.37 114.629 256 256 256s256-114.63 256-256C512 114.6 397.37 0 256 0zm13.605 360.769c-4.974 4.827-10.913 7.226-17.876 7.226s-12.873-2.428-17.73-7.226c-4.857-4.827-7.285-10.708-7.285-17.613 0-6.933 2.428-12.844 7.285-17.788 4.857-4.915 10.767-7.402 17.73-7.402s12.932 2.457 17.876 7.402c4.945 4.945 7.431 10.854 7.431 17.788 0 6.905-2.457 12.786-7.431 17.613zm51.433-128.263c-5.705 8.923-13.283 16.735-22.791 23.464l-12.99 9.128c-5.5 3.979-9.714 8.455-12.668 13.37-2.955 4.945-4.447 10.649-4.447 17.145v1.901H233.94c-.439-2.106-.731-4.184-.936-6.291s-.321-4.301-.321-6.612c0-8.397 1.901-16.413 5.705-24.079s10.24-14.834 19.309-21.563l15.185-11.322c9.07-6.7 13.605-15.009 13.605-24.869 0-3.57-.644-7.08-1.901-10.533s-3.219-6.495-5.851-9.128c-2.633-2.633-5.969-4.71-9.977-6.291s-8.66-2.369-13.927-2.369c-5.705 0-10.561 1.054-14.571 3.16s-7.343 4.769-9.977 8.017c-2.633 3.247-4.594 7.022-5.851 11.322s-1.901 8.66-1.901 13.049c0 4.213.41 7.548 1.258 10.065l-39.877-1.58a38.076 38.076 0 0 1-1.258-7.08 83.41 83.41 0 0 1-.321-7.08c0-8.397 1.58-16.619 4.74-24.693s7.812-15.214 13.927-21.416c6.114-6.173 13.663-11.176 22.645-14.951s19.368-5.676 31.188-5.676c12.229 0 22.996 1.785 32.3 5.355 9.274 3.57 17.087 8.25 23.435 14.014 6.319 5.764 11.089 12.434 14.248 19.982s4.74 15.331 4.74 23.289c.058 12.581-2.809 23.347-8.514 32.27z" fill="#{$color}"/></svg>',

	'question-circle': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M491.4 155.8C478.5 125.3 460 98 436.5 74.5s-50.9-41.9-81.4-54.8C323.6 6.3 290-.5 255.5-.5s-68.1 6.8-99.7 20.1C125.3 32.5 98 51 74.5 74.5s-41.9 50.9-54.8 81.4C6.3 187.4-.5 221-.5 255.5s6.8 68.1 20.1 99.7C32.5 385.7 51 413 74.5 436.5s50.9 41.9 81.4 54.8c31.6 13.4 65.1 20.1 99.7 20.1s68.1-6.8 99.7-20.1c30.5-12.9 57.9-31.3 81.4-54.8s41.9-50.9 54.8-81.4c13.4-31.6 20.1-65.1 20.1-99.7s-6.9-68-20.2-99.6z"/><path class="lexicon-icon-outline" d="M491.4 155.8C478.5 125.3 460 98 436.5 74.5s-50.9-41.9-81.4-54.8C323.6 6.3 290-.5 255.5-.5s-68.1 6.8-99.7 20.1C125.3 32.5 98 51 74.5 74.5s-41.9 50.9-54.8 81.4C6.3 187.4-.5 221-.5 255.5s6.8 68.1 20.1 99.7C32.5 385.7 51 413 74.5 436.5s50.9 41.9 81.4 54.8c31.6 13.4 65.1 20.1 99.7 20.1s68.1-6.8 99.7-20.1c30.5-12.9 57.9-31.3 81.4-54.8s41.9-50.9 54.8-81.4c13.4-31.6 20.1-65.1 20.1-99.7s-6.9-68-20.2-99.6zM255.5 447.5c-106 0-192-86-192-192s86-192 192-192 192 86 192 192-86 192-192 192z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M236 287.9c-.4-1.9-.7-3.8-.9-5.7s-.3-3.9-.3-6c0-7.6 1.7-14.9 5.2-21.9s9.3-13.5 17.6-19.6l13.8-10.3c8.2-6.1 12.4-13.6 12.4-22.6 0-3.2-.6-6.4-1.7-9.6s-2.9-5.9-5.3-8.3-5.4-4.3-9.1-5.7-7.9-2.2-12.7-2.2c-5.2 0-9.6 1-13.2 2.9s-6.7 4.3-9.1 7.3c-2.4 3-4.2 6.4-5.3 10.3s-1.7 7.9-1.7 11.9c0 3.8.4 6.9 1.1 9.1l-36.3-1.4c-.6-2.1-1-4.2-1.1-6.4-.2-2.2-.3-4.3-.3-6.4 0-7.6 1.4-15.1 4.3-22.4s7.1-13.8 12.7-19.5c5.6-5.6 12.4-10.2 20.6-13.6s17.6-5.2 28.4-5.2c11.1 0 20.9 1.6 29.4 4.9 8.4 3.2 15.5 7.5 21.3 12.7 5.7 5.2 10.1 11.3 13 18.2s4.3 13.9 4.3 21.2c0 11.4-2.6 21.2-7.8 29.3s-12.1 15.2-20.7 21.3l-11.8 8.3c-5 3.6-8.8 7.7-11.5 12.2-2.7 4.5-4 9.7-4 15.6v1.7l-31.3-.1zM229.4 329.4c0-6.3 2.2-11.7 6.6-16.2 4.4-4.5 9.8-6.7 16.1-6.7s11.8 2.2 16.3 6.7 6.8 9.9 6.8 16.2-2.3 11.6-6.8 16-9.9 6.6-16.3 6.6-11.7-2.2-16.1-6.6-6.6-9.7-6.6-16z" fill="#{$color}"/></svg>',

	'quote-left': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M233.385 350.832c0 27.183-10.151 51.067-30.398 71.653-20.303 20.613-46.95 30.906-79.943 30.906-37.73 0-67.676-13.113-89.813-39.337C11.067 387.83-.015 355.993-.015 318.518c0-46.81 7.303-86.4 21.91-118.716s32.738-58.512 54.451-78.674c21.684-20.133 45.258-35.135 70.722-44.949 25.492-9.841 49.517-15.678 72.16-17.567v85.695c-27.352 4.709-53.042 17.117-77.067 37.222-24.053 20.162-37.025 46.612-38.886 79.379 7.529-4.681 17.455-7.021 29.694-7.021 32.034 0 56.792 8.685 74.247 25.999 17.427 17.342 26.168 40.972 26.168 70.947zm278.601 0c0 27.183-10.151 51.067-30.398 71.653-20.303 20.613-46.923 30.906-79.914 30.906-37.73 0-67.676-13.113-89.813-39.337-22.164-26.224-33.246-58.061-33.246-95.536 0-46.81 7.303-86.4 21.91-118.716s32.738-58.512 54.451-78.674c21.685-20.133 45.258-35.135 70.722-44.949 25.464-9.841 49.517-15.678 72.16-17.567v85.695c-27.353 4.709-53.041 17.117-77.094 37.222-24.053 20.162-37.024 46.612-38.885 79.379 7.529-4.681 17.455-7.021 29.694-7.021 32.034 0 56.792 8.685 74.247 25.999 17.426 17.342 26.168 40.972 26.168 70.947z" fill="#{$color}"/></svg>',

	'quote-right': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M278.615 161.168c0-27.184 10.151-51.067 30.398-71.653 20.303-20.614 46.95-30.906 79.943-30.906 37.73 0 67.676 13.112 89.812 39.337 22.164 26.225 33.246 58.061 33.246 95.536 0 46.81-7.303 86.401-21.91 118.716s-32.738 58.512-54.451 78.673c-21.685 20.134-45.258 35.135-70.721 44.949-25.464 9.841-49.488 15.678-72.132 17.567v-85.695c27.353-4.709 53.041-17.116 77.067-37.222 24.053-20.163 37.024-46.613 38.885-79.379-7.529 4.681-17.455 7.021-29.693 7.021-32.034 0-56.792-8.685-74.247-25.999-17.455-17.342-26.197-40.972-26.197-70.948zm-278.6 0c0-27.184 10.152-51.067 30.398-71.653 20.303-20.614 46.923-30.906 79.914-30.906 37.73 0 67.676 13.112 89.812 39.337 22.164 26.225 33.246 58.061 33.246 95.536 0 46.81-7.304 86.401-21.91 118.716s-32.738 58.512-54.451 78.673c-21.684 20.134-45.258 35.135-70.722 44.949-25.463 9.841-49.517 15.678-72.16 17.567v-85.695c27.352-4.709 53.041-17.116 77.094-37.222 24.053-20.163 37.024-46.613 38.886-79.379-7.529 4.681-17.455 7.021-29.693 7.021-32.033 0-56.792-8.685-74.247-25.999C8.755 214.771.014 191.141.014 161.165z" fill="#{$color}"/></svg>',

	'radio-button': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M384 256c0 70.7-57.3 128-128 128s-128-57.3-128-128 57.3-128 128-128 128 57.3 128 128zm128 0c0 141.4-114.6 256-256 256S0 397.4 0 256 114.6 0 256 0s256 114.6 256 256zm-64 0c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192z" fill="#{$color}"/></svg>',

	'redo': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M438.6 137.6l-96-96c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l41.2 41.2H224c-88.2 0-160 71.8-160 160s71.8 160 160 160c17.7 0 32-14.3 32-32s-14.3-32-32-32c-52.9 0-96-43.1-96-96s43.1-96 96-96h115l-41.4 41.4c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4l95.8-95.8c12.5-12.7 12.5-32.9 0-45.4z" fill="#{$color}"/></svg>',

	'reload': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M472.065 460.954l-80.854 2.365c67.538-47.63 108.976-125.482 108.976-208.888 0-97.148-53.904-184.701-140.685-228.505-11.483-5.768-25.463-1.169-31.231 10.286-5.795 11.483-1.197 25.463 10.286 31.257 71.02 35.856 115.142 107.487 115.142 186.987 0 68.947-34.659 133.269-90.981 172.129l-2.074-70.702c-.372-12.838-11.19-23.23-23.921-22.566-12.838.372-22.938 11.084-22.566 23.921l3.854 131.462v.054l.027.478c.372 12.599 10.685 22.566 23.23 22.566h.691c.904-.027 1.647-.452 2.525-.585l128.964-3.774c12.838-.372 22.938-11.084 22.566-23.921s-11.269-23.23-23.948-22.566zM194.017 23.27v-.531C193.645 9.901 182.906-.199 170.095.173c-.904.027-1.648.452-2.525.585L38.58 4.532c-12.838.372-22.938 11.084-22.566 23.922.372 12.599 10.685 22.566 23.23 22.566h.691l80.855-2.365C53.252 96.285 11.814 174.163 11.814 257.544c0 97.149 53.903 184.701 140.685 228.505a23.03 23.03 0 0 0 10.446 2.498c8.506 0 16.692-4.678 20.785-12.785 5.794-11.483 1.196-25.463-10.286-31.231-71.02-35.856-115.142-107.488-115.142-186.987 0-68.947 34.66-133.269 90.981-172.129l2.073 70.701c.372 12.599 10.685 22.566 23.23 22.566h.691c12.838-.372 22.938-11.083 22.566-23.922l-3.854-131.462.027-.027z" fill="#{$color}"/></svg>',

	'remove-role': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline remove-role-key-hole" d="M336 166c0-87.7-128-85.6-128 0 0 28.1 17.9 51.9 42.7 60.8v68.7c0 27 42.7 30.3 42.7 0v-68.7c24.7-8.9 42.6-32.7 42.6-60.8z" fill="#{$color}"/><path class="lexicon-icon-outline remove-role-border" d="M445.6 29.9C273.8-9 262.8-10.6 98.4 28.9 78.7 35.2 64 50.7 64 71.3c0 0 .1 194.3.2 195 13.3-6.3 27.6-10.8 42.7-12.9 0 0 .7-164.9 0-182.1 157.3-38.7 172.4-37.7 330.3 1v193C435 381.7 329.4 403.6 288.1 420.5c.2 7.4-5.4 28.6-11 41.6 4 1.2 9.1 4.2 28-1.1 123.3-43 170.4-78.4 174.9-195.7v-193c0-20.6-16.7-36.5-34.4-42.4z" fill="#{$color}"/><path class="lexicon-icon-outline remove-role-minus" d="M139 296c-59.1 0-107 48.4-107 108s47.9 108 107 108 107-48.4 107-108-47.9-108-107-108zm53.5 129.6h-107c-28.8 0-28.1-43.2 0-43.2h107c28.1 0 29.4 43.2 0 43.2z" fill="#{$color}"/></svg>',

	'remove-style': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M0 64.426h116.531L54.685 352.273h70.601l57.645-287.847h110.736V0H0l-.001 64.426zM0 384h288v32H0v-32zM481 512c-8.281 0-16.065-3.224-21.921-9.08l-45.962-45.962-45.962 45.962c-5.856 5.856-13.64 9.08-21.92 9.08s-16.065-3.224-21.921-9.08c-5.856-5.854-9.08-13.639-9.08-21.92s3.224-16.065 9.08-21.921l45.962-45.962-45.962-45.962c-12.087-12.087-12.087-31.753 0-43.841 5.854-5.856 13.639-9.08 21.92-9.08s16.065 3.224 21.921 9.08l45.962 45.962 45.962-45.962c5.854-5.856 13.639-9.08 21.92-9.08s16.065 3.224 21.921 9.08c12.086 12.087 12.086 31.754 0 43.841l-45.962 45.962 45.962 45.962c5.856 5.854 9.08 13.639 9.08 21.92s-3.224 16.065-9.08 21.921c-5.855 5.855-13.639 9.079-21.92 9.079z" fill="#{$color}"/></svg>',

	'reply': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M460.8 198.4H181l15-15c49.7-49.7-25.8-119.2-72.5-72.5L14.9 219.5c-19.8 20-19.8 52.6 0 72.5l108.6 108.6c48.9 48.9 119.9-25.1 72.5-72.5l-27.4-27.4h241v95.6c0 68.6 102.4 68.6 102.4 0V249.6c0-28.2-23-51.2-51.2-51.2z" fill="#{$color}"/></svg>',

	'repository': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M433.8 416c25.5 0 46.2-20.7 46.2-46.2V142.2c0-25.5-20.7-46.2-46.2-46.2H318c-7.7 0-25.9-29.2-31.3-40.3C274.1 29.6 259.9 0 231.1 0H77.5C52.4 0 32 21.8 32 48.6v321.2c0 25.5 20.7 46.2 46.2 46.2H224v32H64c-17.7 0-32 14.3-32 32s14.3 32 32 32h384c17.7 0 32-14.3 32-32s-14.3-32-32-32H288v-32h145.8z"/><path class="lexicon-icon-outline" d="M433.8 416c25.5 0 46.2-20.7 46.2-46.2V142.2c0-25.5-20.7-46.2-46.2-46.2H318c-7.7 0-25.9-29.2-31.3-40.3C274.1 29.6 259.9 0 231.1 0H77.5C52.4 0 32 21.8 32 48.6v321.2c0 25.5 20.7 46.2 46.2 46.2H224v32H64c-17.7 0-32 14.3-32 32s14.3 32 32 32h384c17.7 0 32-14.3 32-32s-14.3-32-32-32H288v-32h145.8zM95.5 54.4s.3-1.9.5-2.4h133.3c4.5 4.8 11.7 17.8 16.1 27.3 2.5 5.4 5.2 11.1 8 16.7H95.5V54.4zM96 352V160h320v192H96z" fill="#{$color}"/></svg>',

	'restore': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M180.7 347.3c3.1 3.1 7.2 4.7 11.3 4.7s8.2-1.6 11.3-4.7l48-48c6.3 3 13.3 4.7 20.7 4.7 26.5 0 48-21.5 48-48 0-20.9-13.4-38.7-32-45.3V112c0-8.8-7.2-16-16-16s-16 7.2-16 16v98.7c-18.6 6.6-32 24.4-32 45.3 0 7.4 1.7 14.4 4.7 20.7l-48 48c-6.3 6.2-6.3 16.4 0 22.6z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M256 0C179.5 0 110.9 33.5 64 86.7V64c0-17.6-14.4-32-32-32S0 46.4 0 64v96c0 9.9 4.6 18.8 11.7 24.7 5.5 4.6 12.6 7.3 20.3 7.3h96c17.6 0 32-14.4 32-32s-14.4-32-32-32h-15.1c35.2-39.3 86.2-64 143.1-64 106 0 192 86 192 192s-86 192-192 192c-95.1 0-174.1-69.2-189.3-160H2c15.7 126.3 123.5 224 254 224 141.4 0 256-114.6 256-256S397.4 0 256 0z" fill="#{$color}"/></svg>',

	'rss-full': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M448 0H64C28.7 0 0 28.7 0 64v384c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64zM96 368c0-63.3 95.6-64.6 95.6-.4-.1 64.7-95.6 63.2-95.6.4zm153.4 21.1c0-84.1-40.1-124.8-125.9-127-36.9-.9-36.6-55.8-1.2-55.8C251 206.3 304 289.5 304 389.1c-.1 35.4-54.6 36.1-54.6 0zm110.9-1.3c.4-121.1-81.9-236.9-237.2-236.9-37 0-36-54.8-.6-54.8 176.5 0 292.4 133.1 292.4 292.3 0 35.4-54.8 36.2-54.6-.6z"/></svg>',

	'rss': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><circle class="lexicon-icon-outline rss-dot" cx="78.6" cy="433.4" r="76.7" fill="#{$color}"/><path class="lexicon-icon-outline rss-wave-1" d="M41.9 152c-54.9 0-54.9 81.5 0 83.8 129.2 0 234.3 105.1 234.3 234.3 0 54.1 83.8 57.4 83.8 0C360 276.9 199 152 41.9 152z" fill="#{$color}"/><path class="lexicon-icon-outline rss-wave-2" d="M41.9 0C-14 0-12 83.8 41.9 83.8 256 83.8 428.2 256 428.2 470.1c0 55.8 83.8 52.8 83.8 0C512 212.9 305 0 41.9 0z" fill="#{$color}"/></svg>',

	'rules': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M448 192h-32V64c0-17.7-14.3-32-32-32h-96c0-17.7-14.3-32-32-32H64C46.3 0 32 14.3 32 32v64c0 17.7 14.3 32 32 32h64v64H96c-17.7 0-32 14.3-32 32v64c0 17.7 14.3 32 32 32h32v64H96c-17.7 0-32 14.3-32 32v64c0 17.7 14.3 32 32 32h128c17.7 0 32-14.3 32-32h128c17.7 0 32-14.3 32-32V320h32c17.7 0 32-14.3 32-32v-64c0-17.7-14.3-32-32-32zM64 96V32h192v64H64zm320 352H256v-32c0-17.7-14.3-32-32-32h-64v-64h64c17.7 0 32-14.3 32-32v-64c0-17.7-14.3-32-32-32h-64v-64h96c17.7 0 32-14.3 32-32V64h96v128c-17.7 0-32 14.3-32 32v64c0 17.7 14.3 32 32 32v128z" fill="#{$color}"/></svg>',

	'search': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M503.254 467.861L369.609 334.216c27.671-35.13 44.344-79.327 44.344-127.415C413.953 93.017 321.375.439 207.591.439S1.229 93.017 1.229 206.801s92.578 206.362 206.362 206.362c47.268 0 90.735-16.146 125.572-42.969l133.851 133.851c5.002 5.002 11.554 7.488 18.106 7.488s13.104-2.486 18.106-7.488c10.004-10.003 10.004-26.209.029-36.183zM52.446 206.801c0-85.558 69.616-155.173 155.173-155.173s155.174 69.616 155.174 155.173-69.616 155.173-155.173 155.173S52.447 292.358 52.447 206.801z" fill="#{$color}"/></svg>',

	'select-from-list': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M512 72v368c0 39.6-32.4 72-72 72H72c-39.6 0-72-32.4-72-72V72C0 32.4 32.4 0 72 0h368c39.6 0 72 32.4 72 72z"/><path class="lexicon-icon-outline" d="M134.4 211.2c-4-5.4-6.4-12-6.4-19.2 0-17.7 14.3-32 32-32 10.5 0 19.9 5.1 25.7 12.9 28.8 38.4 46.8 62.5 70.3 93.8 23.5-31.3 41.5-55.3 70.3-93.8 5.8-7.8 15.2-12.9 25.7-12.9 17.7 0 32 14.3 32 32 0 7.2-2.4 13.9-6.4 19.2-38.4 51.2-57.6 76.8-95.9 127.9-5.8 7.8-15.2 12.9-25.7 12.9s-19.9-5.1-25.7-12.9c-38.3-51.1-57.5-76.7-95.9-127.9zM512 72v368c0 39.6-32.4 72-72 72H72c-39.6 0-72-32.4-72-72V72C0 32.4 32.4 0 72 0h368c39.6 0 72 32.4 72 72zm-64-8H64v384h384V64z" fill="#{$color}"/></svg>',

	'select': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline select-border" d="M448 64v384H64V64h384M64 0C28.7 0 0 28.7 0 64v384c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64H64z" fill="#{$color}"/><path class="lexicon-icon-outline select-caret-up" fill="#{$color}" d="M414.5 224H278.8l67.9-67.9z"/><path class="lexicon-icon-outline select-caret-down" fill="#{$color}" d="M278.8 288h135.7l-67.8 67.9z"/><path class="lexicon-icon-outline select-s" d="M104.8 306.8c14.2 20.2 94.7 49.1 96.9-3.6C205 259 89.5 268.5 91.5 193.3c6-77.3 100-83.3 143.7-35.9-6.2 8.6-20.2 26.4-20.2 26.4-43.2-35.8-84.9-17.7-83.6 7.5C129 237 238 215 242.2 300.1c2.8 92.4-135.7 76.4-160.7 34.9l23.3-28.2z" fill="#{$color}"/></svg>',

	'separator': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline separator-content-2" d="M416 448H96c-17.7 0-32-14.3-32-32v-32c0-17.7 14.3-32 32-32h320c17.7 0 32 14.3 32 32v32c0 17.7-14.3 32-32 32z" fill="#{$color}"/><path class="lexicon-icon-outline separator-divider" d="M464 272H48c-21.2 0-20.5-32 0-32h416c20.8 0 21.8 32 0 32z" fill="#{$color}"/><path class="lexicon-icon-outline separator-content-1" d="M416 160H96c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h320c17.7 0 32 14.3 32 32v32c0 17.7-14.3 32-32 32z" fill="#{$color}"/></svg>',

	'share-alt': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M397.255 402.745a63.725 63.725 0 0 0-20.334-13.702C369.01 385.697 360.625 384 352 384s-17.01 1.697-24.921 5.043a64.4 64.4 0 0 0-7.587 3.822L215.135 288.508a64.019 64.019 0 0 0 3.822-7.587c3.346-7.911 5.042-16.296 5.042-24.922s-1.696-17.011-5.042-24.922a64.17 64.17 0 0 0-3.822-7.587l104.357-104.357a64.094 64.094 0 0 0 7.587 3.822c7.911 3.346 16.296 5.043 24.921 5.043s17.01-1.697 24.921-5.043c7.625-3.225 14.466-7.835 20.334-13.703s10.478-12.709 13.702-20.334C414.303 81.007 416 72.622 416 63.996s-1.697-17.011-5.043-24.922c-3.225-7.625-7.835-14.466-13.702-20.334S384.546 8.263 376.921 5.037C369.01 1.691 360.625-.006 352-.006s-17.01 1.696-24.921 5.043c-7.625 3.225-14.466 7.835-20.334 13.703s-10.478 12.709-13.702 20.334C289.697 46.985 288 55.37 288 63.996s1.697 17.011 5.043 24.922a64.324 64.324 0 0 0 3.822 7.587L192.508 200.862a63.943 63.943 0 0 0-7.587-3.822c-7.911-3.346-16.296-5.042-24.922-5.042s-17.011 1.696-24.922 5.042c-7.625 3.225-14.466 7.835-20.334 13.702s-10.478 12.709-13.703 20.334c-3.346 7.911-5.043 16.296-5.043 24.922s1.697 17.011 5.043 24.922c3.225 7.625 7.835 14.466 13.703 20.334s12.709 10.478 20.334 13.702c7.911 3.346 16.296 5.043 24.922 5.043s17.011-1.697 24.922-5.043a64.324 64.324 0 0 0 7.587-3.822l104.357 104.357a64.094 64.094 0 0 0-3.822 7.587c-3.346 7.911-5.043 16.296-5.043 24.921s1.697 17.01 5.043 24.921c3.225 7.625 7.835 14.466 13.702 20.334s12.709 10.478 20.334 13.702c7.911 3.346 16.296 5.042 24.921 5.042s17.01-1.697 24.921-5.043c7.625-3.225 14.466-7.835 20.334-13.702s10.478-12.709 13.702-20.334c3.346-7.911 5.043-16.296 5.043-24.921s-1.697-17.01-5.043-24.921a63.743 63.743 0 0 0-13.702-20.333zM352 32c17.673 0 32 14.327 32 32s-14.327 32-32 32-32-14.327-32-32 14.327-32 32-32zM160 288c-17.673 0-32-14.327-32-32s14.327-32 32-32 32 14.327 32 32-14.327 32-32 32zm192 192c-17.673 0-32-14.327-32-32s14.327-32 32-32 32 14.327 32 32-14.327 32-32 32z" fill="#{$color}"/></svg>',

	'share': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M326.2 323.3l-107.6-53.8c2.7-5.9 2.4-19.9 0-27.1l107.6-53.8c77.2 69.3 185.8 13 185.8-78.9C512 49.2 462.8 0 402.3 0S287 51.3 293.4 123.3l-107.6 53.8C113.3 108 0 161.7 0 256c0 100.3 118.3 143.7 185.8 78.9l107.6 53.8C285 460.7 341.8 512 402.3 512S512 462.8 512 402.3c0-88-105.7-150.3-185.8-79zm112.7-213.6c0 49-73.1 47.6-73.1 0-.1-49.4 73.1-47.7 73.1 0zM73.1 256c0-49 73.1-49 73.1 0 .1 47.3-73.1 49-73.1 0zm292.6 146.3c0-48.6 73.1-49 73.1 0 .1 48.7-73.1 47.4-73.1 0z" fill="#{$color}"/></svg>',

	'sheets': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline sheets-page3" d="M499.8 364.7l-61.1-25.6-38.6 16 67.5 28.8-212.1 92.8-208.8-92.8 67.5-28.8-38.6-16-61.1 25.6c-19.3 6.4-19.3 32 0 41.6l241 105.6 244.2-108.7c16.2-6.5 16.2-32.1.1-38.5z" fill="#{$color}"/><path class="lexicon-icon-outline sheets-page2" d="M499.9 236.8l-60.7-25.6-38.3 16 63.9 28.8-207.6 92.8L49.6 256l67.1-28.8L75.2 208l-60.7 28.8c-19.2 6.4-19.2 32 0 41.6L257.2 384l242.7-108.7c16-6.5 16-32.1 0-38.5z" fill="#{$color}"/><path class="lexicon-icon-outline sheets-page1" d="M256 .1L14.3 108.9c-19.1 6.4-19.1 32 0 41.6L256 256l241.7-108.7c19.1-6.4 19.1-32 0-41.6L256 .1z" fill="#{$color}"/></svg>',

	'shopping-cart': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><circle class="lexicon-icon-outline shopping-cart-wheel1" cx="144" cy="464" r="48" fill="#{$color}"/><circle class="lexicon-icon-outline shopping-cart-wheel2" cx="432" cy="464" r="48" fill="#{$color}"/><path class="lexicon-icon-outline shopping-cart-basket" d="M495.9 352.1H192.5c-17.7 0-32.4-14.2-32.4-31.8s14.9-31.9 32.6-31.9c2.5 0 305-34.8 305-34.8 8.1-.9 14.2-7.7 14.2-15.9V80.1c0-8.8-7.1-15.9-15.9-15.9H129.2l-20.8-53.9C106 4.1 100.1 0 93.5 0H16c-21.5.7-21.1 31.7.1 32h66.5l88.2 228.5c-24.4 9-42.6 32.2-42.6 59.7 0 35.3 29.2 63.8 64.5 63.8H496c21.9-1.5 20.6-31-.1-31.9zm-207.8-192v-64h94.5L384 160l-95.9.1zm192-.1H416l.1-64h64v64zM256 96.1l.1 63.9h-89.9l-24.7-63.9H256z" fill="#{$color}"/></svg>',

	'shortcut': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M480 320c-17.673 0-32 14.327-32 32v96H64V64h96c17.673 0 32-14.327 32-32S177.673 0 160 0H64C28.71 0 0 28.71 0 64v384c0 35.29 28.71 64 64 64h384c35.29 0 64-28.71 64-64v-96c0-17.673-14.327-32-32-32z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M480 0H320c-17.673 0-32 14.327-32 32s14.327 32 32 32h82.746L265.373 201.373c-12.497 12.497-12.497 32.757 0 45.255C271.621 252.875 279.811 256 288 256s16.379-3.124 22.627-9.373L448 109.254V192c0 17.673 14.327 32 32 32s32-14.327 32-32V32c0-17.673-14.327-32-32-32z" fill="#{$color}"/></svg>',

	'simulation-menu-closed': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M480 224h-2.272C463.695 125.898 386.101 48.304 288 34.272V32c0-17.673-14.327-32-32-32-17.673 0-32 14.327-32 32v2.272C125.898 48.305 48.304 125.899 34.272 224H32c-17.673 0-32 14.327-32 32 0 17.673 14.327 32 32 32h2.272C48.305 386.101 125.899 463.696 224 477.728V480c0 17.673 14.327 32 32 32 17.673 0 32-14.327 32-32v-2.272C386.101 463.695 463.696 386.101 477.728 288H480c17.673 0 32-14.327 32-32 0-17.673-14.327-32-32-32zM324.493 93.811c20.952 8.862 39.779 21.559 55.958 37.738s28.876 35.006 37.738 55.958A174.098 174.098 0 0 1 429.105 224h-32.673a143.188 143.188 0 0 0-7.767-24.066c-7.255-17.153-17.632-32.548-30.841-45.757s-28.604-23.585-45.757-30.84a143.246 143.246 0 0 0-24.066-7.766V82.897a174.011 174.011 0 0 1 36.493 10.915zM224 224h-58.53c9.642-27.275 31.255-48.888 58.53-58.53V224zm0 64v58.53c-27.274-9.642-48.888-31.255-58.53-58.53H224zm64 0h58.53c-9.642 27.274-31.255 48.889-58.53 58.53V288zm0-64v-58.53c27.274 9.642 48.889 31.255 58.53 58.53H288zM93.811 187.507c8.862-20.952 21.559-39.779 37.738-55.958s35.006-28.876 55.958-37.738A174.035 174.035 0 0 1 224 82.896v32.674a143.366 143.366 0 0 0-24.066 7.766c-17.153 7.255-32.548 17.632-45.757 30.841s-23.585 28.604-30.84 45.757A143.246 143.246 0 0 0 115.571 224H82.897a174.011 174.011 0 0 1 10.915-36.493zm93.696 230.682c-20.952-8.862-39.779-21.559-55.958-37.738s-28.876-35.006-37.738-55.958A174.035 174.035 0 0 1 82.896 288h32.674a143.366 143.366 0 0 0 7.766 24.066c7.255 17.153 17.632 32.548 30.841 45.757s28.604 23.586 45.757 30.841A143.34 143.34 0 0 0 224 396.431v32.673a174.014 174.014 0 0 1-36.493-10.916zm230.682-93.696c-8.862 20.952-21.559 39.779-37.738 55.958s-35.006 28.876-55.958 37.738A174.098 174.098 0 0 1 288 429.105v-32.673a143.188 143.188 0 0 0 24.066-7.767c17.153-7.255 32.548-17.632 45.757-30.841s23.586-28.604 30.841-45.757a143.34 143.34 0 0 0 7.767-24.066h32.673a174.014 174.014 0 0 1-10.916 36.493z" fill="#{$color}"/></svg>',

	'simulation-menu-open': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M458.233 412.978C491.93 369.628 512 315.159 512 256s-20.07-113.627-53.767-156.977l21.768-21.768c12.497-12.497 12.497-32.758 0-45.255-12.497-12.496-32.758-12.496-45.255 0l-21.768 21.768C369.628 20.07 315.159 0 256.001 0S142.374 20.07 99.024 53.767L77.256 31.999c-12.497-12.496-32.758-12.496-45.255 0-12.496 12.496-12.496 32.758 0 45.255l21.768 21.768C20.072 142.372.002 196.841.002 256s20.07 113.627 53.767 156.977l-21.768 21.768c-12.496 12.497-12.496 32.758 0 45.255s32.758 12.497 45.255 0l21.768-21.768C142.374 491.93 196.843 512 256.001 512s113.627-20.07 156.977-53.767l21.768 21.768c12.497 12.497 32.758 12.497 45.255 0s12.497-32.758 0-45.255l-21.768-21.768zm-25.295-231.693C442.933 204.915 448 230.053 448 256s-5.067 51.086-15.062 74.716a191.083 191.083 0 0 1-20.421 36.548l-46.247-46.246c11.26-19.056 17.729-41.279 17.729-65.016s-6.469-45.96-17.729-65.016l46.246-46.246a191.045 191.045 0 0 1 20.421 36.547zM181.285 79.062C204.915 69.067 230.053 64 256 64s51.086 5.067 74.716 15.062a191.083 191.083 0 0 1 36.548 20.421l-46.246 46.246C301.962 134.469 279.739 128 256.002 128s-45.96 6.469-65.016 17.729L144.74 99.483a191.045 191.045 0 0 1 36.547-20.421zM79.062 330.716C69.067 307.086 64 281.949 64 256s5.067-51.086 15.062-74.716a191.045 191.045 0 0 1 20.421-36.547l46.246 46.246C134.469 210.039 128 232.262 128 255.999s6.469 45.96 17.729 65.016l-46.246 46.247a191.023 191.023 0 0 1-20.421-36.548zm251.654 102.222C307.086 442.933 281.949 448 256 448s-51.086-5.067-74.716-15.062a191.045 191.045 0 0 1-36.547-20.421l46.246-46.247c19.056 11.26 41.279 17.729 65.016 17.729s45.96-6.469 65.016-17.729l46.247 46.246a191.023 191.023 0 0 1-36.548 20.421z" fill="#{$color}"/></svg>',

	'simulation-menu': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M512 192h-41.3C449.2 119.8 392.2 62.8 320 41.3V0H192v41.3C119.8 62.8 62.8 119.8 41.3 192H0v128h41.3c21.5 72.2 78.5 129.2 150.7 150.7V512h128v-41.3c72.2-21.5 129.2-78.5 150.7-150.7H512V192z"/><path class="lexicon-icon-outline" d="M512 192h-41.3C449.2 119.8 392.2 62.8 320 41.3V0H192v41.3C119.8 62.8 62.8 119.8 41.3 192H0v128h41.3c21.5 72.2 78.5 129.2 150.7 150.7V512h128v-41.3c72.2-21.5 129.2-78.5 150.7-150.7H512V192zm-93.8 132.5c-8.9 21-21.6 39.8-37.7 56s-35 28.9-56 37.7L320 420v-4H192v4l-4.5-1.8c-21-8.9-39.8-21.6-56-37.7s-28.9-35-37.7-56L92 320h4V192h-4l1.8-4.5c8.9-21 21.6-39.8 37.7-56s35-28.9 56-37.7L192 92v4h128v-4l4.5 1.8c21 8.9 39.8 21.6 56 37.7s28.9 35 37.7 56l1.8 4.5h-4v128h4l-1.8 4.5z" fill="#{$color}"/><path d="M320 256c0 35.3-28.7 64-64 64s-64-28.7-64-64 28.7-64 64-64 64 28.7 64 64z"/></svg>',

	'site-template': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" d="M448 0H64C28.71 0 0 28.71 0 64v384c0 35.29 28.71 64 64 64h384c35.29 0 64-28.71 64-64V64c0-35.29-28.71-64-64-64zm0 140.463c-9.31-15.409-20.55-29.798-33.607-42.855C401.335 84.55 386.946 73.31 371.537 64H448v76.463zM256 416c-40.26 0-77.089-14.952-105.24-39.587L320 320l56.413-169.24C401.048 178.912 416 215.74 416 256c0 88.225-71.775 160-160 160zm0-320c40.26 0 77.088 14.952 105.24 39.587L192 192l-56.413 169.24C110.952 333.088 96 296.26 96 256c0-88.224 71.776-160 160-160zm30.894 159.999c0 17.673-14.327 32-32 32-17.673 0-32-14.327-32-32 0-17.673 14.327-32 32-32 17.673 0 32 14.327 32 32zM140.464 64c-15.41 9.31-29.799 20.55-42.856 33.608C84.55 110.665 73.31 125.054 64 140.464V64h76.464zM64 371.537c9.31 15.409 20.55 29.798 33.608 42.856 13.057 13.057 27.446 24.297 42.855 33.607H64v-76.463zM448 448h-76.463c15.41-9.31 29.798-20.55 42.856-33.607 13.057-13.058 24.297-27.447 33.607-42.856v76.461s.027.002 0 .002z"/></svg>',

	'sites': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M437 75C388.7 26.6 324.4 0 256 0S123.3 26.6 75 75C26.6 123.3 0 187.6 0 256s26.6 132.7 75 181c48.4 48.4 112.6 75 181 75s132.7-26.6 181-75c48.4-48.4 75-112.6 75-181s-26.6-132.7-75-181z"/><path class="lexicon-icon-outline" d="M437 75C388.7 26.6 324.4 0 256 0S123.3 26.6 75 75C26.6 123.3 0 187.6 0 256s26.6 132.7 75 181c48.4 48.4 112.6 75 181 75s132.7-26.6 181-75c48.4-48.4 75-112.6 75-181s-26.6-132.7-75-181zM256 448c-105.9 0-192-86.1-192-192S150.1 64 256 64s192 86.1 192 192-86.1 192-192 192z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M128 384l192-64 64-192-192 64-64 192zm126.9-160c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32z" fill="#{$color}"/></svg>',

	'social-facebook': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M483.7 0H28.3C12.6 0 0 12.6 0 28.3v455.5C0 499.4 12.6 512 28.3 512h245.2V313.7h-66.7v-77.3h66.7v-57c0-66.1 40.4-102.1 99.4-102.1 28.3 0 52.5 2.1 59.6 3v69.1h-40.9c-32.1 0-38.3 15.2-38.3 37.6v49.3h76.5l-10 77.3h-66.6V512h130.5c15.6 0 28.3-12.7 28.3-28.3V28.3C512 12.6 499.3 0 483.7 0z" fill="#{$color}"/></svg>',

	'social-linkedin': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M474.1 0H37.8C16.9 0 0 16.5 0 36.9V475c0 20.4 16.9 37 37.8 37h436.4c20.9 0 37.9-16.6 37.9-36.9V36.9C512 16.5 495 0 474.1 0zM151.9 436.3h-76V191.9h76v244.4zM69.8 114.6c0-60.6 88.1-60.6 88.1 0 0 60.4-88.1 58.4-88.1 0zm366.5 321.7h-75.9V317.5c0-28.3-.5-64.8-39.5-64.8-39.5 0-45.5 30.9-45.5 62.8v120.8h-75.8V191.9h72.8v33.4h1c10.1-19.2 34.9-39.5 71.8-39.5 76.9 0 91.1 50.6 91.1 116.4v134.1z" fill="#{$color}"/></svg>',

	'staging': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M384 254.7v1.3c0 16.8-3.2 32.8-9.1 47.5L493 352c12.6-30.9 19-63.6 19-97.3v-.7l-128 .7zM323.1 147l68.8-110.2C363.5 18.9 332.5 7 299.6 1.3l-22 128.5c16.4 2.8 31.8 8.7 45.5 17.2zM377.3 215.2l122.2-39.8c-10.3-31.8-26.4-60.9-48-86.6L353 172.5c10.7 12.4 19 26.8 24.3 42.7zM161.8 169.3L66 82.3c-22.4 24.9-39.5 53.5-50.8 84.9l120.9 43.9c5.8-15.5 14.6-29.7 25.7-41.8zM238.5 129.2L220.7 0c-33.1 4.6-64.5 15.5-93.4 32.4l65.2 112.5c13.9-8 29.4-13.4 46-15.7zM256 384c-9.3 0-18.4-1-27.2-2.9l-26.7 125.2c17.7 3.8 35.5 5.9 54.1 5.7 14.8 0 29.8-1.3 44.4-3.9L278.5 382c-7.3 1.3-14.8 2-22.5 2zM316 369.1l59.5 113.2c29.4-15.6 55.2-36.6 76.6-62.2l-97.7-82.3c-10.5 12.7-23.6 23.4-38.4 31.3zM128 256c0-2 .1-4 .1-6l-128-4.6c-.1 3.1-.2 6.2-.2 9.4 0 30.3 5.2 60.1 15.5 88.4l119.9-44.1c-4.7-13.5-7.3-28-7.3-43.1zM154.5 334L53.9 412.7c20.5 26.4 45.5 48.3 74.3 65l63.7-110.9c-14.5-8.4-27.2-19.6-37.4-32.8z" fill="#{$color}"/></svg>',

	'star-half': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M418.1 510.1c-4.1 0-8.2-1.1-11.9-3.3l-150.3-90.2-146.2 86.2c-8.3 4.9-18.8 4.1-26.3-2s-10.4-16.2-7.3-25.4l55.5-162.9-121-96.2C3 210.2 0 199.9 3.3 190.6s12-15.5 21.8-15.5h150.1l59.2-158.2c3.4-9 12-15 21.6-15s18.2 6 21.6 15l59.2 158.2H487c9.8 0 18.6 6.2 21.8 15.5 3.2 9.3.3 19.6-7.4 25.7l-120.8 96.1 58.3 163.9c1.7 3.2 2.6 6.8 2.6 10.7 0 12.7-10.3 23.1-23.1 23.1h-.3z"/><path class="lexicon-icon-outline" d="M418.1 510.1c-4.1 0-8.2-1.1-11.9-3.3l-150.3-90.2-146.2 86.2c-8.3 4.9-18.8 4.1-26.3-2s-10.4-16.2-7.3-25.4l55.5-162.9-121-96.2C3 210.2 0 199.9 3.3 190.6s12-15.5 21.8-15.5h150.1l59.2-158.2c3.4-9 12-15 21.6-15s18.2 6 21.6 15l59.2 158.2H487c9.8 0 18.6 6.2 21.8 15.5 3.2 9.3.3 19.6-7.4 25.7l-120.8 96.1 58.3 163.9c1.7 3.2 2.6 6.8 2.6 10.7 0 12.7-10.3 23.1-23.1 23.1h-.3zM256 366.6c4.1 0 8.2 1.1 11.9 3.3L374.7 434l-43.3-121.7c-3.3-9.3-.3-19.7 7.4-25.8l82-65.2h-100c-9.6 0-18.3-6-21.6-15L256 90.9s-4.1 275.7 0 275.7z" fill="#{$color}"/></svg>',

	'star-o': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M508.753 190.647c-3.247-9.265-11.983-15.493-21.802-15.493H336.845L277.642 16.946c-3.378-9.027-12.01-14.992-21.644-14.992s-18.264 5.965-21.617 14.992l-59.203 158.208H25.047a23.087 23.087 0 0 0-21.802 15.493c-3.247 9.265-.264 19.558 7.417 25.682l120.966 96.234-55.534 162.88a23.104 23.104 0 0 0 7.285 25.365c7.47 6.097 17.975 6.889 26.316 1.979l146.173-86.204 150.317 90.163a22.936 22.936 0 0 0 11.877 3.299h.132c12.722-.422 23.2-10.32 23.2-23.095 0-3.853-.924-7.496-2.613-10.69l-58.252-163.83 120.807-96.103c7.68-6.097 10.663-16.417 7.417-25.682z"/><path class="lexicon-icon-outline" d="M418.1 510.1c-4.1 0-8.2-1.1-11.9-3.3l-150.3-90.2-146.2 86.2c-8.3 4.9-18.8 4.1-26.3-2s-10.4-16.2-7.3-25.4l55.5-162.9-121-96.2C3 210.2 0 199.9 3.3 190.6s12-15.5 21.8-15.5h150.1l59.2-158.2c3.4-9 12-15 21.6-15s18.2 6 21.6 15l59.2 158.2H487c9.8 0 18.6 6.2 21.8 15.5 3.2 9.3.3 19.6-7.4 25.7l-120.8 96.1 58.3 163.9c1.7 3.2 2.6 6.8 2.6 10.7 0 12.7-10.3 23.1-23.1 23.1h-.3zM256 366.6c4.1 0 8.2 1.1 11.9 3.3L374.7 434l-43.3-121.7c-3.3-9.3-.3-19.7 7.4-25.8l82-65.2h-100c-9.6 0-18.3-6-21.6-15L256 90.9l-43.2 115.4c-3.4 9-12 15-21.6 15h-100l82 65.2c7.6 6.1 10.6 16.3 7.5 25.5L140 431.3l104.3-61.5c3.6-2.1 7.6-3.2 11.7-3.2z" fill="#{$color}"/></svg>',

	'star': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" d="M508.753 190.647c-3.247-9.265-11.983-15.493-21.802-15.493H336.845L277.642 16.946c-3.378-9.027-12.01-14.992-21.644-14.992s-18.264 5.965-21.617 14.992l-59.203 158.208H25.047a23.087 23.087 0 0 0-21.802 15.493c-3.247 9.265-.264 19.558 7.417 25.682l120.966 96.234-55.534 162.88a23.104 23.104 0 0 0 7.285 25.365c7.47 6.097 17.975 6.889 26.316 1.979l146.173-86.204 150.317 90.163a22.936 22.936 0 0 0 11.877 3.299h.132c12.722-.422 23.2-10.32 23.2-23.095 0-3.853-.924-7.496-2.613-10.69l-58.252-163.83 120.807-96.103c7.68-6.097 10.663-16.417 7.417-25.682z"/><path class="lexicon-icon-outline" d="M418.1 510.1c-4.1 0-8.2-1.1-11.9-3.3l-150.3-90.2-146.2 86.2c-8.3 4.9-18.8 4.1-26.3-2s-10.4-16.2-7.3-25.4l55.5-162.9-121-96.2C3 210.2 0 199.9 3.3 190.6s12-15.5 21.8-15.5h150.1l59.2-158.2c3.4-9 12-15 21.6-15s18.2 6 21.6 15l59.2 158.2H487c9.8 0 18.6 6.2 21.8 15.5 3.2 9.3.3 19.6-7.4 25.7l-120.8 96.1 58.3 163.9c1.7 3.2 2.6 6.8 2.6 10.7 0 12.7-10.3 23.1-23.1 23.1h-.3zM256 366.6c4.1 0 8.2 1.1 11.9 3.3L374.7 434l-43.3-121.7c-3.3-9.3-.3-19.7 7.4-25.8l82-65.2h-100c-9.6 0-18.3-6-21.6-15L256 90.9l-43.2 115.4c-3.4 9-12 15-21.6 15h-100l82 65.2c7.6 6.1 10.6 16.3 7.5 25.5L140 431.3l104.3-61.5c3.6-2.1 7.6-3.2 11.7-3.2z" fill="#{$color}"/></svg>',

	'sticky': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256 256-114.6 256-256S397.4 0 256 0zm145.4 246.4c-27.2 27.2-45.4 10.5-51.2 5.9L324.5 278c13.1 67.7-42.2 110.1-42.2 110.1-12.5 12.5-32.8 12.5-45.3 0L195.7 347l-66.5 54-17.8-18 53-67.3-40.6-40.6c-12.5-12.5-12.5-32.8 0-45.3 0 0 41.8-55.1 110.1-42.2l25.7-25.7c-2.1-2.1-23.6-21.7 6.4-51.8 20.7-20.7 39.6-15.1 50-4.7l90.5 90.5c5.5 6.7 21.2 24.2-5.1 50.5z"/></svg>',

	'strikethrough': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M511.999 224h-174.81a227.388 227.388 0 0 0-32.11-8.521l-68.462-13.129c-17.957-3.73-31.342-10.533-40.119-20.48-8.741-9.911-13.129-21.577-13.129-34.962 0-8.338 1.865-16.165 5.522-23.552 3.73-7.387 8.887-13.97 15.579-19.749 6.656-5.815 14.738-10.423 24.21-13.861 9.435-3.511 19.931-5.193 31.451-5.193 15.653 0 28.928 2.304 39.717 6.949 10.862 4.571 19.749 10.386 26.624 17.298 6.912 6.949 12.142 14.446 15.579 22.491s5.851 15.616 7.241 22.491l85.76-26.331c-2.743-13.824-7.973-28.233-15.579-43.301-7.607-14.994-18.286-28.709-32.146-41.216-13.824-12.471-31.232-22.711-52.224-30.793C314.148 4.059 288.95-.001 259.473-.001c-23.077 0-44.946 3.95-65.719 11.776-20.699 7.899-38.949 18.725-54.638 32.585-15.653 13.861-27.977 30.098-36.974 48.823s-13.495 38.912-13.495 60.599c0 26.843 6.254 50.139 18.213 70.18H-.002v64h192.913c7.79 2.487 15.799 4.754 24.357 6.473l68.424 13.861c19.419 3.657 34.158 10.715 44.288 21.102 10.13 10.423 15.177 22.784 15.177 37.083 0 17.518-6.802 31.963-20.37 43.301-13.605 11.337-33.317 16.969-59.136 16.969-17.518 0-32.731-2.523-45.641-7.607-12.873-5.083-23.735-11.886-32.475-20.48-8.777-8.521-15.579-18.322-20.407-29.44s-7.717-22.601-8.594-34.633l-88.502 23.515c1.792 17.591 6.912 35.474 15.177 53.723 8.265 18.213 20.37 34.743 36.279 49.518 15.909 14.811 35.621 26.953 59.136 36.352 23.515 9.545 51.602 14.299 84.333 14.299 28.599 0 53.797-4.389 75.666-13.129 21.906-8.777 40.338-20.187 55.296-34.267 15.031-14.08 26.405-30.281 34.267-48.53 7.826-18.213 11.776-36.827 11.776-55.771 0-17.079-3.035-33.499-8.997-49.152-3.109-8.119-6.985-15.799-11.557-23.113h90.587v-64.037z" fill="#{$color}"/></svg>',

	'subscript': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M416 0H.001v96h160v416h96V96h160V0zM511.999 352H352v32h65.254l-.319 128H448l-.319-128h64.32l-.002-32z" fill="#{$color}"/></svg>',

	'suitcase': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M419.1 96H384V64c0-35.3-28.7-64-64-64H192c-35.3 0-64 28.7-64 64v32H92.9C41.6 96 0 137.6 0 188.9v230.2C0 470.4 41.6 512 92.9 512h326.2c51.3 0 92.9-41.6 92.9-92.9V188.9c0-51.3-41.6-92.9-92.9-92.9zM320 96H192V64h128v32z"/><path class="lexicon-icon-outline" d="M419.1 96H384V64c0-35.3-28.7-64-64-64H192c-35.3 0-64 28.7-64 64v32H92.9C41.6 96 0 137.6 0 188.9v230.2C0 470.4 41.6 512 92.9 512h326.2c51.3 0 92.9-41.6 92.9-92.9V188.9c0-51.3-41.6-92.9-92.9-92.9zM192 64h128v32H192V64zm256 355.1c0 15.9-13 28.9-28.9 28.9H92.9C77 448 64 435 64 419.1V188.9C64 173 77 160 92.9 160h326.2c15.9 0 28.9 13 28.9 28.9v230.2z" fill="#{$color}"/></svg>',

	'sun': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><circle class="lexicon-icon-body" fill="none" cx="256" cy="256" r="128"/><path class="lexicon-icon-outline" d="M256 128c-70.7 0-128 57.3-128 128s57.3 128 128 128 128-57.3 128-128-57.3-128-128-128zm45.3 173.3c-12.1 12-28.2 18.7-45.3 18.7s-33.2-6.7-45.3-18.7c-12-12.1-18.7-28.2-18.7-45.3s6.7-33.2 18.7-45.3c12.1-12.1 28.2-18.7 45.3-18.7s33.2 6.7 45.3 18.7S320 238.9 320 256s-6.7 33.2-18.7 45.3zM480 224h-32c-17.7 0-32 14.3-32 32s14.3 32 32 32h32c17.7 0 32-14.3 32-32s-14.3-32-32-32zM96 256c0-17.7-14.3-32-32-32H32c-17.7 0-32 14.3-32 32s14.3 32 32 32h32c17.7 0 32-14.3 32-32zM256 416c-17.7 0-32 14.3-32 32v32c0 17.7 14.3 32 32 32s32-14.3 32-32v-32c0-17.7-14.3-32-32-32zM256 96c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32s-32 14.3-32 32v32c0 17.7 14.3 32 32 32zM414.4 369.1c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l22.6 22.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3l-22.6-22.6zM97.6 142.9c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L120.2 75C107.7 62.5 87.5 62.5 75 75s-12.5 32.8 0 45.3l22.6 22.6zM142.9 369.1c-12.5-12.5-32.8-12.5-45.3 0L75 391.8c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l22.6-22.6c12.5-12.6 12.5-32.9 0-45.4zM369.1 142.9c12.5 12.5 32.8 12.5 45.3 0l22.6-22.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-22.6 22.6c-12.5 12.5-12.5 32.8 0 45.3z" fill="#{$color}"/></svg>',

	'superscript': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M.001 96h128v384h96V96h128V0h-352l.001 96zM512 0h-96v32h32.26l-.26 96h32.26L480 32h31.999L512 0z" fill="#{$color}"/></svg>',

	'table': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M455.1 0H56.9C25.5 0 0 25.5 0 56.9v398.2C0 486.5 25.5 512 56.9 512h398.2c31.4 0 56.9-25.5 56.9-56.9V56.9C512 25.5 486.5 0 455.1 0z"/><path class="lexicon-icon-outline" d="M455.1 0H56.9C25.5 0 0 25.5 0 56.9v398.2C0 486.5 25.5 512 56.9 512h398.2c31.4 0 56.9-25.5 56.9-56.9V56.9C512 25.5 486.5 0 455.1 0zM224 448H64V288h160v160zm0-224H64V64h160v160zm224 224H288V288h160v160zm0-224H288V64h160v160z" fill="#{$color}"/></svg>',

	'table2': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M455.1 0H56.9C25.5 0 0 25.5 0 56.9v398.2C0 486.5 25.5 512 56.9 512h398.2c31.4 0 56.9-25.5 56.9-56.9V56.9C512 25.5 486.5 0 455.1 0z"/><path class="lexicon-icon-outline" d="M455.1 0H56.9C25.5 0 0 25.5 0 56.9v398.2C0 486.5 25.5 512 56.9 512h398.2c31.4 0 56.9-25.5 56.9-56.9V56.9C512 25.5 486.5 0 455.1 0zM160 448H64v-96h96v96zm0-160H64v-64h96v64zm0-128H64V64h96v96zm128 288h-64v-96h64v96zm0-160h-64v-64h64v64zm0-128h-64V64h64v96zm160 288h-96v-96h96v96zm0-160h-96v-64h96v64zm0-128h-96V64h96v96z" fill="#{$color}"/></svg>',

	'tablet-landscape': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M0 142.7v226.5C0 412.6 35.4 448 78.8 448h354.5c43.3 0 78.8-35.4 78.8-78.7V142.7c0-43.3-35.4-78.7-78.8-78.7H78.8C35.4 64 0 99.4 0 142.7zM480 256c0 8.8-7.2 16-16 16s-16-7.2-16-16 7.2-16 16-16 16 7.2 16 16zm-64-128v260H64V128h352z" fill="#{$color}"/></svg>',

	'tablet-portrait': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M369.3 0H142.7C99.4 0 64 35.4 64 78.8v354.5c0 43.3 35.4 78.8 78.7 78.8h226.5c43.3 0 78.7-35.4 78.7-78.8V78.8C448 35.4 412.6 0 369.3 0zM256 480c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm128-64H124V64h260v352z" fill="#{$color}"/></svg>',

	'tag': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M512 94.9v-1C510.5 44.1 475 4.6 427.5.1L426 0H281.9c-42.9 0-71 18.6-83.9 29.7l-.9.8L25.5 202.2c-16.6 16.6-25.6 39-25.5 63 .1 23.9 9.3 46.1 25.8 62.6l158.4 158.4c16.6 16.6 38.9 25.8 62.7 25.8 23.8 0 46.1-9.1 62.6-25.7l167.3-167.4.8-.9c13.2-15.4 35.3-47.9 34.4-92.6V94.9zM364 191c-11.6 11.6-31.7 11.6-43.3 0-11.9-11.9-11.9-31.4 0-43.3 5.8-5.8 13.5-9 21.7-9s15.9 3.2 21.7 9c5.8 5.8 9 13.5 9 21.7-.1 8.1-3.3 15.8-9.1 21.6z"/><path class="lexicon-icon-outline" d="M512 94.9v-1C510.5 44.1 475 4.6 427.5.1L426 0H281.9c-42.9 0-71 18.6-83.9 29.7l-.9.8L25.5 202.2c-16.6 16.6-25.6 39-25.5 63 .1 23.9 9.3 46.1 25.8 62.6l158.4 158.4c16.6 16.6 38.9 25.8 62.7 25.8 23.8 0 46.1-9.1 62.6-25.7l167.3-167.4.8-.9c13.2-15.4 35.3-47.9 34.4-92.6V94.9zm-64 131.5c.5 22.9-10.9 40.2-18.2 49L264.2 441.1c-4.5 4.5-10.6 6.9-17.4 6.9-6.8 0-12.9-2.4-17.4-7L71 282.6c-9.3-9.3-9.4-26-.3-35.1l169.9-170c6.5-5.4 19.9-13.5 41.2-13.5h140.8c14.4 2 24.7 14.7 25.3 31.4v130.2l.1.8z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M294.6 121.6c-26.3 26.3-26.3 69.2 0 95.5 12.8 12.8 29.7 19.8 47.8 19.8 18.1 0 35-7 47.8-19.8 12.8-12.8 19.8-29.7 19.8-47.8s-7-35-19.8-47.8c-25.6-25.4-70.1-25.5-95.6.1zM364 191c-11.6 11.6-31.7 11.6-43.3 0-11.9-11.9-11.9-31.4 0-43.3 5.8-5.8 13.5-9 21.7-9s15.9 3.2 21.7 9 9 13.5 9 21.7c-.1 8.1-3.3 15.8-9.1 21.6z" fill="#{$color}"/></svg>',

	'text-editor': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M226.6 98.6V410c0 20.2 14.4 34.6 34.6 37.5l34.6 2.9V479H91.1v-28.8l34.6-2.9c20.2-2.9 34.6-17.3 34.6-37.5v-51.9-118.2-54.8-86.5h-72c-20.2 0-34.6 14.4-37.5 31.7L42.2 185H1.8L7.6 72.6c0-2.9 2.9-8.6 8.6-8.6h354.5c2.9 0 8.6 2.9 8.6 8.6l5.8 112.4h-40.3l-8.6-54.8c-5.8-17.3-23.1-31.7-40.3-31.7h-69.3z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M416.8 245.5V435.8c0 11.5 8.6 20.2 20.2 23.1l17.3 2.9V479H336.1v-17.3l17.3-2.9c11.5 0 20.2-11.5 20.2-23.1V404v-72-34.6-51.9H339c-11.5 0-20.2 8.6-23.1 17.3l-5.8 31.7h-25.9l2.9-66.3c0-2.9 2.9-5.8 5.8-5.8h207.5c2.9 0 5.8 2.9 5.8 5.8l2.9 66.3h-25.9l-11.5-28.8c-2.9-11.5-11.5-17.3-23.1-17.3h-31.7c-.1 0-.1-2.9-.1-2.9z" fill="#{$color}"/></svg>',

	'text': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M296.7 313.6h-83l-20.4 68H148l82.4-251.2h50.8l82.5 251.2h-46.1l-20.9-68zm-10.5-34.9L255.3 165l-30.5 113.7h61.4z" fill="#{$color}"/></svg>',

	'textbox': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M448 64H64C28.7 64 0 92.7 0 128v256c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V128c0-35.3-28.7-64-64-64zM232.2 375.6l-19.6-68h-84.5l-19.6 68H63.2L145 124.5h52.2L279 375.6h-46.8zm215.8 0H320v-32h128v32z" fill="#{$color}"/><path class="lexicon-icon-outline" fill="#{$color}" d="M170.3 159.1l-31.8 113.6h64.1z"/></svg>',

	'third-party': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline third-party-dots" d="M480.1 194.6v-69.1c47.8-14.6 41.5-93.5-16-93.5-57.1 0-63.6 78.9-16 93.5v69.2c-15 4.8-24.8 16.1-29.1 29.4H221.4c-5.7-17.6-20.9-32-45.4-32-62.9 0-64.7 96 0 96 25.1 0 40.1-14.4 45.6-32h197c4.1 13.4 14 24.7 29.4 29.5v101.2c-46.4 14.9-42.6 93.4 16 93.4 58.7 0 62.8-78.6 16-93.4V285.5c42.9-13.1 42.1-77.6.1-90.9zM464 224c21.2 0 20.7 32 0 32-21.5 0-20.8-32 0-32zm0-160c21.2 0 20.7 32 0 32-21.5 0-20.8-32 0-32zM176 256c-21.6 0-20.8-32 0-32 21.2 0 20.7 32 0 32zm288 192c-21.6 0-20.8-32 0-32 21.2 0 20.8 32 0 32z" fill="#{$color}"/><path class="lexicon-icon-outline third-party-border" d="M284.9 320v92.9H67.1V99.1h217.8V160H352V99.1c0-37-30-67.1-67.1-67.1H67.1C30.1 32 0 62.1 0 99.1v313.8c0 37 30.1 67.1 67.1 67.1h217.8c37.1 0 67.1-30.1 67.1-67.1V320h-67.1z" fill="#{$color}"/></svg>',

	'thumbs-down': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M120.1 31.1C83.9 56.9 64 91.4 64 128v35.9c-7.7 2.1-15.6 5.3-23.3 10.1C22.2 185.5 0 209 0 256c0 38 .8 56.1 8.7 70.8 4.5 8.3 13.4 19.1 30.5 23.1 8.1 1.9 16.2 1.9 24.8 1.9l108.2.1c-4 9.1-7.6 18.6-10.7 29.4-14.7 40.9-13.3 77 4.1 102 12.9 18.5 33.3 28.7 57.5 28.7H224.7c24-.5 47.3-15.7 69.2-45.1 12.6-16.8 21.2-33.5 22.6-36.4L373.9 320H416V0H200.2c-21.9 0-54 12.5-80.1 31.1z"/><path class="lexicon-icon-outline" d="M120.1 31.1C83.9 56.9 64 91.4 64 128v35.9c-7.7 2.1-15.6 5.3-23.3 10.1C22.2 185.5 0 209 0 256c0 38 .8 56.1 8.7 70.8 4.5 8.3 13.4 19.1 30.5 23.1 8.1 1.9 16.2 1.9 24.8 1.9l108.2.1c-4 9.1-7.6 18.6-10.7 29.4-14.7 40.9-13.3 77 4.1 102 12.9 18.5 33.3 28.7 57.5 28.7H224.7c24-.5 47.3-15.7 69.2-45.1 12.6-16.8 21.2-33.5 22.6-36.4L373.9 320H416V0H200.2c-21.9 0-54 12.5-80.1 31.1zM352 64v192h-17l-75.4 145.3-.3.6c-.1.1-5.8 11.7-14.6 24-11.3 15.8-19.4 21.2-21.9 22.2-3.8-.1-4.4-.9-4.7-1.3-3.3-4.7-4.9-20.4 4-44.5l.5-1.3.4-1.3c4.5-16.5 11.3-29.5 20.6-47.4 2.9-5.6 5.9-11.3 9.1-17.8l23.3-46.3-211.3-.1c-.7-10.3-.7-24.7-.7-32.1 0-19.2 5.1-32 29.9-32h1.4l32.6.7V128c0-19.4 15.5-34.8 28.6-44.3C175.2 70.2 195 64.2 200.2 64H352zM480 0c-17.7 0-32 14.3-32 32v256c0 17.7 14.3 32 32 32s32-14.3 32-32V32c0-17.7-14.3-32-32-32z" fill="#{$color}"/></svg>',

	'thumbs-up-arrow': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline thumbs-up-arrow-cuff" d="M64 319.8v-160c0-44.8-64-41.6-64 0v160c0 41.6 64 41.6 64 0z" fill="#{$color}"/><path class="lexicon-icon-outline thumbs-up-arrow-hand" d="M384 127.8H272s16-35.2 16-76.8c3.2-48-64-86.4-112 3.2-19.2 32-48 73.6-48 73.6H96v224h131.2c115.2 0 124.8-54.4 124.8-96 0 0 64 0 64-64v-32c0-22.4-12.8-32-32-32zm-32 96h-32v32c0 57.6-54.4 64-92.8 64H128v-160h16l57.6-89.6C230.4 12.6 256 35 256 57.4c0 38.4-32 102.4-32 102.4h160v32c0 22.4-25.6 32-32 32z" fill="#{$color}"/><path class="lexicon-icon-outline thumbs-up-arrow-uptrend" d="M153.6 511.8l67.2-54.4 44.8 44.8c12.8 12.8 32 12.8 44.8 0l140.8-140.8 19.2 19.2c9.6 9.6 25.6 3.2 25.6-9.6l16-96c0-12.8-9.6-19.2-22.4-19.2l-96 16c-12.8 0-19.2 16-9.6 25.6l19.2 19.2L284.8 435l-41.6-41.6c-12.8-12.8-28.8-12.8-41.6-3.2L48 511.8h105.6z" fill="#{$color}"/></svg>',

	'thumbs-up': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M503.3 185.2c-4.5-8.3-13.4-19.1-30.5-23.1-8.1-1.9-16.2-1.9-24.8-1.9l-108.2-.2c4-9.1 7.6-18.6 10.7-29.4 14.7-40.9 13.3-77-4.1-102C333.5 10.2 313.1 0 288.9 0H287.3c-24 .5-47.3 15.7-69.2 45.1-12.6 16.8-21.2 33.5-22.6 36.4L138.1 192H96v320h215.8c21.8 0 54-12.5 80-31.1 36.2-25.9 56.1-60.3 56.1-96.9v-36c7.7-2.1 15.6-5.3 23.3-10.1 18.6-11.5 40.7-35 40.7-82 .1-37.9-.7-56-8.6-70.7z"/><path class="lexicon-icon-outline" d="M503.3 185.2c-4.5-8.3-13.4-19.1-30.5-23.1-8.1-1.9-16.2-1.9-24.8-1.9l-108.2-.2c4-9.1 7.6-18.6 10.7-29.4 14.7-40.9 13.3-77-4.1-102C333.5 10.2 313.1 0 288.9 0H287.3c-24 .5-47.3 15.7-69.2 45.1-12.6 16.8-21.2 33.5-22.6 36.4L138.1 192H96v320h215.8c21.8 0 54-12.5 80-31.1 36.2-25.9 56.1-60.3 56.1-96.9v-36c7.7-2.1 15.6-5.3 23.3-10.1 18.6-11.5 40.7-35 40.7-82 .1-37.9-.7-56-8.6-70.7zM418.1 288h-1.4l-32.6-.7V384c0 19.4-15.5 34.8-28.6 44.3-18.6 13.5-38.5 19.5-43.7 19.7H160V256h17l75.4-145.3.3-.6c.1-.1 5.8-11.7 14.6-24 11.3-15.8 19.4-21.2 21.9-22.2 3.8.1 4.4 1 4.7 1.3 3.3 4.7 4.9 20.4-4 44.5l-.5 1.3-.4 1.3c-4.5 16.5-11.3 29.5-20.6 47.4-2.9 5.6-5.9 11.3-9.1 17.8L236.1 224l211.3.1c.6 10.1.6 24.4.6 31.9 0 19.2-5.1 32-29.9 32zM32 192c-17.7 0-32 14.3-32 32v256c0 17.7 14.3 32 32 32s32-14.3 32-32V224c0-17.7-14.3-32-32-32z" fill="#{$color}"/></svg>',

	'time': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M437 75C388.7 26.6 324.4 0 256 0S123.3 26.6 75 75C26.6 123.3 0 187.6 0 256s26.6 132.7 75 181c48.4 48.4 112.6 75 181 75s132.7-26.6 181-75c48.4-48.4 75-112.6 75-181s-26.6-132.7-75-181z"/><path class="lexicon-icon-outline" d="M437 75C388.7 26.6 324.4 0 256 0S123.3 26.6 75 75C26.6 123.3 0 187.6 0 256s26.6 132.7 75 181c48.4 48.4 112.6 75 181 75s132.7-26.6 181-75c48.4-48.4 75-112.6 75-181s-26.6-132.7-75-181zM256 448c-105.9 0-192-86.1-192-192S150.1 64 256 64s192 86.1 192 192-86.1 192-192 192z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M180.7 347.3c3.1 3.1 7.2 4.7 11.3 4.7s8.2-1.6 11.3-4.7l48-48c6.3 3 13.3 4.7 20.7 4.7 26.5 0 48-21.5 48-48 0-20.9-13.4-38.7-32-45.3V112c0-8.8-7.2-16-16-16s-16 7.2-16 16v98.7c-18.6 6.6-32 24.4-32 45.3 0 7.4 1.7 14.4 4.7 20.7l-48 48c-6.3 6.2-6.3 16.4 0 22.6z" fill="#{$color}"/></svg>',

	'times-circle': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M256 0C114.8 0 0 114.8 0 256s114.8 256 256 256 256-114.8 256-256S397.2 0 256 0z"/><path class="lexicon-icon-outline" d="M256 0C114.8 0 0 114.8 0 256s114.8 256 256 256 256-114.8 256-256S397.2 0 256 0zm147 403c-19.1 19.1-41.4 34.2-66.2 44.7C311.2 458.5 284 464 256 464s-55.2-5.5-80.8-16.3c-24.8-10.5-47-25.5-66.2-44.7s-34.2-41.4-44.7-66.2C53.5 311.2 48 284 48 256s5.5-55.2 16.3-80.8c10.5-24.8 25.5-47 44.7-66.2s41.4-34.2 66.2-44.7C200.8 53.5 228 48 256 48s55.2 5.5 80.8 16.3c24.8 10.5 47 25.5 66.2 44.7s34.2 41.4 44.7 66.2C458.5 200.8 464 228 464 256s-5.5 55.2-16.3 80.8c-10.5 24.8-25.6 47-44.7 66.2z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M301.5 255.5l67.9-67.9c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-67.9 67.9-67.9-67.9c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l67.9 67.9-67.9 67.9c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l67.9-67.9 68.9 68.9c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3l-68.9-68.9z" fill="#{$color}"/></svg>',

	'times': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M295.781 256L500.986 50.795c10.998-10.998 10.998-28.814 0-39.781-10.998-10.998-28.815-10.998-39.781 0L256 216.219 50.795 10.981c-10.966-10.998-28.814-10.998-39.781 0-10.998 10.998-10.998 28.814 0 39.781L216.219 256 11.014 461.205c-10.998 10.998-10.998 28.815 0 39.781 5.467 5.531 12.671 8.265 19.874 8.265s14.407-2.734 19.907-8.233L256 295.78l205.205 205.205c5.5 5.5 12.703 8.233 19.906 8.233s14.407-2.734 19.906-8.233c10.998-10.998 10.998-28.815 0-39.781L295.779 255.999z" fill="#{$color}"/></svg>',

	'transform': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M352 96H160V0H96v352c0 35.3 28.7 64 64 64h192v96h64V160c0-35.3-28.7-64-64-64zM160 352V160h192v192H160zM448 352h64v64h-64zM0 96h64v64H0z" fill="#{$color}"/></svg>',

	'trash': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M64.4 440.7c0 39.3 31.9 71.3 71.3 71.3h240.6c39.3 0 71.3-31.9 71.3-71.3v-312H64.4v312zm63.8-248.1h255.5v231.7c0 13.1-10.7 23.8-23.8 23.8H152c-13.1 0-23.8-10.7-23.8-23.8V192.6zM351.8 32.9V0H160.2v32.9H64.4v63.2h383.2V32.9z" fill="#{$color}"/><path class="lexicon-icon-outline" fill="#{$color}" d="M287.9 223.6h63.9v191.6h-63.9zM160.2 223.6h63.9v191.6h-63.9z"/></svg>',

	'twitter': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M512.015 97.213c-18.842 8.368-39.089 14.015-60.332 16.531 21.68-12.991 38.358-33.589 46.2-58.108-20.306 12.026-42.776 20.774-66.71 25.485-19.164-20.423-46.462-33.179-76.688-33.179-58.02 0-105.039 47.048-105.039 105.039 0 8.222.936 16.238 2.721 23.934-87.308-4.389-164.698-46.2-216.516-109.749-9.041 15.508-14.22 33.559-14.22 52.812 0 36.457 18.55 68.612 46.727 87.425a104.651 104.651 0 0 1-47.575-13.137v1.317c0 50.91 36.222 93.336 84.266 102.99a105.153 105.153 0 0 1-27.679 3.687c-6.759 0-13.343-.673-19.779-1.901 13.371 41.723 52.169 72.123 98.135 72.942-35.959 28.176-81.252 44.971-130.465 44.971-8.486 0-16.853-.498-25.046-1.464 46.493 29.815 101.704 47.195 161.041 47.195 193.226 0 298.879-160.075 298.879-298.879 0-4.565-.117-9.07-.293-13.576 20.481-14.776 38.3-33.267 52.374-54.334z" fill="#{$color}"/></svg>',

	'underline': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M96.695 448H416v64H96.695v-64zM255.724 416c87.848 0 159.724-71.875 159.724-159.724V0h-96v256c0 35.346-28.654 64-64 64-35.346 0-64-28.654-64-64V0H96.001v256.276C96.001 344.124 167.876 416 255.725 416z" fill="#{$color}"/></svg>',

	'undo': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M73.4 137.4l96-96c12.5-12.5 32.8-12.5 45.3 0s12.5 32.8 0 45.3l-41.2 41.2H288c88.2 0 160 71.8 160 160s-71.8 160-160 160c-17.7 0-32-14.3-32-32s14.3-32 32-32c52.9 0 96-43.1 96-96s-43.1-96-96-96H173l41.4 41.4c12.5 12.5 12.5 32.8 0 45.3-6.2 6.2-14.4 9.4-22.6 9.4-8.2 0-16.4-3.1-22.6-9.4l-95.8-96c-12.5-12.5-12.5-32.7 0-45.2z" fill="#{$color}"/></svg>',

	'unlock': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M364.8 223.9H192v-96.1c0-84 128-84.7 128 0v31.5h32v-31.5c0-127.4-192-128.1-192 0v96.1h-19.2c-28.2 0-44.8 23-44.8 51.2v153.7c0 28.2 16.6 51.2 44.8 51.2h224c28.2 0 51.2-23 51.2-51.2V275.1c0-28.2-23-51.2-51.2-51.2zM288 416h-64v-96.1h64V416z" fill="#{$color}"/></svg>',

	'upload': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline upload-arrow-up" d="M278.9 9.5C272.8 3.4 264.6 0 256 0c-8.6 0-16.8 3.4-22.9 9.5l-71.6 71.6c-12.7 12.7-12.7 33.2 0 45.8 6.3 6.3 14.6 9.5 22.9 9.5s16.6-3.2 22.9-9.5l16.7-16.7V352c0 17.7 14.3 32 32 32s32-14.3 32-32V110.2l16.7 16.7c12.7 12.7 33.2 12.7 45.8 0 12.7-12.7 12.7-33.2 0-45.8L278.9 9.5z" fill="#{$color}"/><path class="lexicon-icon-outline upload-bracket" d="M416 352c-17.7 0-32 14.3-32 32v64H128v-64c0-17.7-14.3-32-32-32s-32 14.3-32 32v128h384V384c0-17.7-14.3-32-32-32z" fill="#{$color}"/></svg>',

	'urgent': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256 256-114.6 256-256S397.4 0 256 0zm31.9 399.7c15.1-6.9 33.4-17.8 52.5-34 25.4 42.1-34.3 69.3-52.5 34zm-64.4-16.2c-37.1-26.1-4.1-45.4-50.9-90.5-16.9-16.2-70.6-60.6-30.6-127.6-21.1-19.9 1.4-45.8 23.6-23.6 66.5-38.9 111.1 13.9 127.5 30.5 48.8 49.6 65.3 13.1 91.5 49.9-8.6 81.7-94.4 155.4-161.1 161.3z"/></svg>',

	'user': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M438.475 277.908c-23.42-26.763-50.791-47.825-81.358-62.6a242.668 242.668 0 0 0-5.34-2.493C371.813 190.215 384 160.506 384 128 384 57.42 326.58 0 256 0S128 57.42 128 128c0 32.506 12.187 62.215 32.223 84.815-1.786.81-3.568 1.635-5.34 2.492-30.567 14.776-57.939 35.838-81.358 62.601C26.112 332.096 0 403.866 0 480c0 17.673 14.327 32 32 32s32-14.327 32-32c0-123.514 86.13-224 192-224s192 100.486 192 224c0 17.673 14.327 32 32 32s32-14.327 32-32c0-76.134-26.112-147.904-73.525-202.092zM192 128c0-35.29 28.71-64 64-64s64 28.71 64 64-28.71 64-64 64-64-28.71-64-64z" fill="#{$color}"/></svg>',

	'users': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M457.22 329.628c-16.056-18.35-34.519-33.055-54.61-43.766 11.315-16.268 17.961-36.016 17.961-57.29C420.571 173.115 375.455 128 320 128s-100.571 45.116-100.571 100.571c0 21.275 6.645 41.023 17.962 57.29-20.093 10.712-38.555 25.418-54.61 43.767C147.454 370 128 423.403 128 480c0 17.673 14.327 32 32 32s32-14.327 32-32c0-83.183 57.42-150.857 128-150.857S448 396.817 448 480c0 17.673 14.327 32 32 32s32-14.327 32-32c0-56.597-19.455-109.999-54.78-150.372zM283.429 228.57C283.429 208.406 299.835 192 320 192s36.571 16.406 36.571 36.571-16.406 36.572-36.571 36.572-36.571-16.406-36.571-36.572zM246.857 86.857C246.857 38.964 207.893 0 160 0S73.143 38.964 73.143 86.857c0 15.868 4.281 30.755 11.744 43.57-14.42 8.552-27.729 19.632-39.48 33.061C16.127 196.953 0 241.172 0 288c0 17.673 14.327 32 32 32s32-14.327 32-32c0-63.017 43.065-114.286 96-114.286 47.893 0 86.857-38.964 86.857-86.857zm-109.714 0C137.143 74.253 147.397 64 160 64s22.857 10.253 22.857 22.857-10.254 22.857-22.857 22.857-22.857-10.254-22.857-22.857z" fill="#{$color}"/></svg>',

	'vertical-scroll': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M333.1 365.1c-8.9 0-17.9 3.4-24.7 10.2L288 395.8V116.2l20.4 20.4c13.6 13.6 35.7 13.6 49.3 0 13.6-13.6 13.6-35.7 0-49.3l-77.1-77.1C274.1 3.7 265.3 0 256 0s-18.1 3.7-24.7 10.2l-77.1 77.1c-13.6 13.6-13.6 35.7 0 49.3 6.8 6.8 15.7 10.2 24.7 10.2 8.9 0 17.9-3.4 24.7-10.2l20.4-20.4v279.5l-20.4-20.4c-13.6-13.6-35.7-13.6-49.3 0-13.6 13.6-13.6 35.7 0 49.3l77.1 77.1c.8.8 1.7 1.6 2.5 2.3 5.7 5.5 13.5 8.9 22.1 8.9 8.6 0 16.4-3.4 22.1-8.9.9-.7 1.7-1.5 2.5-2.3l77.1-77.1c13.6-13.6 13.6-35.7 0-49.3-6.7-6.8-15.7-10.2-24.6-10.2z" fill="#{$color}"/></svg>',

	'video': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M448 0H64C28.7 0 0 28.7 0 64v384c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64zM192 352V160l160 96-160 96z" fill="#{$color}"/></svg>',

	'view': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M499.7 228.2C412.4 101.9 291 96 260.4 96h-14.8C210 96 81.3 106.5 3.2 244.5c-9.1 16.1 3.3 30.7 9.2 39.3C99.8 410.1 222.6 416 253.6 416h14.9c35.2 0 162.2-10.5 240.2-148.5 9.1-16.1-3-30.7-9-39.3zm-246.6 85.3c-28.2 0-51-22.8-51-51s22.8-51 51-51 51 22.8 51 51-22.8 51-51 51zM56 256.6c26.8-42.1 62-72.7 104.9-91 6.6-2.8 13.1-5.2 19.4-7.3-32.8 23-54.3 61.1-54.3 104.2 0 29.7 10.2 57 27.3 78.7-32.6-15.8-67.3-41.9-97.3-84.6zm290 92.7c21.2-22.7 34.3-53.2 34.3-86.8 0-44.2-22.6-83.2-56.9-106 40.9 12.1 91.1 39.2 133 98.9-33.1 52.2-74.3 79.6-110.4 93.9z" fill="#{$color}"/></svg>',

	'vocabulary': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512.0034 512.498"><path class="lexicon-icon-outline" d="M145.689 252.622c15.808 7.903 35.029 1.497 42.933-14.31L195.777 224h120.446l7.155 14.311c5.607 11.214 16.908 17.697 28.646 17.696 4.81 0 9.694-1.089 14.287-3.386 15.807-7.903 22.214-27.125 14.311-42.932l-96-192a32 32 0 0 0-57.244 0l-96 192c-7.903 15.808-1.496 35.029 14.311 42.933zM256 103.554L284.223 160h-56.446L256 103.554zM160 352v-64c0-17.673-14.327-32-32-32H0v256h160c17.673 0 32-14.327 32-32v-96c0-17.673-14.327-32-32-32zm-64-32v32H64v-32h32zm32 128H64v-32h64v32zM478.736 448.025c-16.4.646-18.544.48-20.266.344-2.576-.202-5.14-.369-10.47-.369-35.29 0-64-28.71-64-64s28.71-64 64-64c15.178 0 28.193 1.474 28.295 1.485 17.567 2.04 33.444-10.526 35.49-28.08 2.046-17.554-10.526-33.443-28.08-35.49-.67-.078-16.652-1.915-35.705-1.915-70.58 0-128 57.42-128 128s57.42 128 128 128c3.255 0 4.229.076 5.46.173 2.357.185 4.5.325 8.43.325 3.96 0 9.737-.143 19.374-.523 17.659-.698 31.409-15.58 30.71-33.239-.697-17.66-15.608-31.434-33.238-30.71z" fill="#{$color}"/></svg>',

	'warning-full': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline" d="M506.3 409.3l-214-353.7c-16.8-30.6-55.8-32.6-72.6 0L5.7 409.3C-8 436.5 5 480 42 480h428c36 0 52.5-43.5 36.3-70.7zM224 392c0-42.5 64-42 64 0 0 41.5-64 42.5-64 0zm64-104c0 42.5-64 40.5-64 0V184c0-43 64-43.5 64 0v104z" fill="#{$color}"/></svg>',

	'warning': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline warning-border" d="M496.1 409.7L290.8 54.1c-15.8-26.4-52.5-27.1-69.6 0L15.9 409.7c-13.9 26 1.1 60.2 34.8 60.2h410.6c30.4 0 50.7-31.9 34.8-60.2zM83.2 407L256 107.6 428.8 407H83.2z" fill="#{$color}"/><path class="lexicon-icon-outline warning-stem" d="M284 285v-75c0-38-56-37.5-56 0v75c0 37.5 56 37 56 0z" fill="#{$color}"/><circle class="lexicon-icon-outline warning-dot" cx="256" cy="361.9" r="32" fill="#{$color}"/></svg>',

	'web-content': '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path class="lexicon-icon-outline web-content-border" d="M0 64v384c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64H64C28.7 0 0 28.7 0 64zm448 384H64V64h384v384z" fill="#{$color}"/><path class="lexicon-icon-outline web-content-text-1" d="M144 320h224c22 0 21-32 0-32H144c-21 0-21 32 0 32z" fill="#{$color}"/><path class="lexicon-icon-outline web-content-text-2" d="M144 384h160c22 0 20-32 0-32H144c-21 0-22 32 0 32z" fill="#{$color}"/><circle class="lexicon-icon-outline web-content-circle" cx="320" cy="160" r="64" fill="#{$color}"/><path class="lexicon-icon-outline web-content-triangle" fill="#{$color}" d="M128 224l64-128 64 128z"/></svg>',

	'wiki-page': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M416 0H63.4C28.4 0 0 28.4 0 63.4V448c0 35 28.4 64 63.4 64h380.2c35 0 68.4-29 68.4-64V96L416 0z"/><path class="lexicon-icon-outline" d="M416 0H63.4C28.4 0 0 28.4 0 63.4V448c0 35 28.4 64 63.4 64h380.2c35 0 68.4-29 68.4-64V96L416 0zm32 448H64V64h256v128h128v256zm-64-320V64l64 64h-64z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M96 288c0 17.7 14.3 32 32 32h256c17.7 0 32-14.3 32-32s-14.3-32-32-32H128c-17.7 0-32 14.3-32 32zM288 352H128c-17.7 0-32 14.3-32 32s14.3 32 32 32h160c17.7 0 32-14.3 32-32s-14.3-32-32-32zM127 200.6c.7 1.9 1.8 4.4 3.1 7.7 1.3 3.2 2.8 6 4.5 8.4 1.7 2.4 3.8 4.2 6.4 5.4s5.7 1.9 9.3 1.9c7.2 0 12.2-2 15-6.1 2.9-4.1 5.5-10.2 7.9-18.2l18.5-65.2 19.1 65.2c1.6 5.2 3.1 9.5 4.5 12.7s3.5 6 6.4 8.3c2.9 2.2 6.9 3.4 11.9 3.4 4.9 0 8.7-1 11.6-3.2s4.9-4.5 6.2-7.2c1.3-2.7 3.1-7 5.5-13l27.3-78.5c2.5-6.2 3.8-10.8 3.8-13.8 0-3.3-1.5-6.2-4.4-8.7-2.9-2.5-6.4-3.7-10.4-3.7s-7 .8-9.2 2.4c-2.1 1.6-3.6 3.5-4.5 5.6-.9 2.1-2.1 5.6-3.5 10.4l-22 73.7-19.8-69c-2-6.2-3.6-10.5-4.8-13-1.1-2.5-3.1-4.8-5.9-7-2.8-2.1-6.7-3.2-11.7-3.2-4.9 0-8.7 1.1-11.5 3.2s-4.7 4.4-5.7 6.7-2.6 6.8-4.7 13.2l-19.8 69-21.8-73.7c-2.2-6.7-4.3-11.5-6.2-14.3-2-2.8-5.7-4.2-11.2-4.2-4.2 0-7.7 1.3-10.5 3.8s-4.3 5.4-4.3 8.6c0 2.5 1.3 7.1 4 13.8l26.9 78.6z" fill="#{$color}"/></svg>',

	'wiki': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M448 0H64C28.7 0 0 28.7 0 64v384c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64z"/><path class="lexicon-icon-outline" d="M448 0H64C28.7 0 0 28.7 0 64v384c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64zm0 448H64V64h384v384z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M384 256H128c-17.7 0-32 14.3-32 32s14.3 32 32 32h256c17.7 0 32-14.3 32-32s-14.3-32-32-32zM288 352H128c-17.7 0-32 14.3-32 32s14.3 32 32 32h160c17.7 0 32-14.3 32-32s-14.3-32-32-32zM191 200.6c.7 1.9 1.8 4.4 3.1 7.7 1.3 3.2 2.8 6 4.5 8.4 1.7 2.4 3.8 4.2 6.4 5.4s5.7 1.9 9.3 1.9c7.2 0 12.2-2 15-6.1 2.9-4.1 5.5-10.2 7.9-18.2l18.5-65.2 19.1 65.2c1.6 5.2 3.1 9.5 4.5 12.7s3.5 6 6.4 8.3c2.9 2.2 6.9 3.4 11.9 3.4 4.9 0 8.7-1 11.6-3.2s4.9-4.5 6.2-7.2c1.3-2.7 3.1-7 5.5-13l27.3-78.5c2.5-6.2 3.8-10.8 3.8-13.8 0-3.3-1.5-6.2-4.4-8.7-2.9-2.5-6.4-3.7-10.4-3.7s-7 .8-9.2 2.4c-2.1 1.6-3.6 3.5-4.5 5.6-.9 2.1-2.1 5.6-3.5 10.4l-22 73.7-19.8-69c-2-6.2-3.6-10.5-4.8-13-1.1-2.5-3.1-4.8-5.9-7-2.8-2.1-6.7-3.2-11.7-3.2-4.9 0-8.7 1.1-11.5 3.2s-4.7 4.4-5.7 6.7-2.6 6.8-4.7 13.2l-19.8 69-21.8-73.7c-2.2-6.7-4.3-11.5-6.2-14.3-2-2.8-5.7-4.2-11.2-4.2-4.2 0-7.7 1.3-10.5 3.8s-4.3 5.4-4.3 8.6c0 2.5 1.3 7.1 4 13.8l26.9 78.6z" fill="#{$color}"/></svg>',

	'workflow': '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path class="lexicon-icon-body" fill="none" d="M448 0H64C28.7 0 0 28.7 0 64v384c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64z"/><path class="lexicon-icon-outline" d="M448 0H64C28.7 0 0 28.7 0 64v384c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64zm0 448H64V64h384v384z" fill="#{$color}"/><path class="lexicon-icon-outline" d="M352 257.6V208h32l-48-96-48 96h32v49.6c-31.3 6.4-56 31.1-62.4 62.4H192v-64h64V96H96v160h64v96h97.6c7.4 36.5 39.7 64 78.4 64 44.2 0 80-35.8 80-80 0-38.7-27.5-71-64-78.4z" fill="#{$color}"/></svg>'

	);

	@return $lx-icons;
}
$clay-unset: !default;
$clay-unset-placeholder: clay-unset-placeholder !default;

$atlas-theme: true !default;

$enable-scaling-components: true !default;
$enable-shadows: true !default;

$grid-breakpoints: (
	xs: 0,
	sm: 576px,
	md: 768px,
	lg: 992px,
	xl: 1280px
) !default;

$container-max-widths: (
	sm: 540px,
	md: 720px,
	lg: 960px,
	xl: 1248px
) !default;

$grid-gutter-width: 24px !default;

$moz-osx-font-smoothing: grayscale !default;
$webkit-font-smoothing: antialiased !default;

$font-size-base: 1rem !default; // 16px
$font-size-lg: 1.125rem !default; // 18px
$font-size-sm: 0.875rem !default; // 14px

$font-weight-light: 300 !default;
$font-weight-normal: 400 !default;
$font-weight-semi-bold: 600 !default;
$font-weight-bold: 700 !default;
$font-weight-bolder: 900 !default;

$headings-font-weight: $font-weight-semi-bold !default;

$h1-font-size: 1.625rem !default; // 26px
$h2-font-size: 1.375rem !default; // 22px
$h3-font-size: 1.1875rem !default; // 19px
$h4-font-size: 1rem !default; // 16px
$h5-font-size: 0.875rem !default; // 14px
$h6-font-size: 0.8125rem !default; // 13px

$line-height-base: 1.5 !default;

$font-family-sans-serif: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol" !default;

// Theme Base Colors

$primary: #0B5FFF !default;
$secondary: #6B6C7E !default;
$success: #287D3D !default;
$info: #2E5AAC !default;
$warning: #B95000 !default;
$danger: #DA1414 !default;
$light: #F1F2F5 !default;
$dark: #272834 !default;

$theme-colors: () !default;
$theme-colors: map-merge((
	primary: $primary,
	secondary: $secondary,
	success: $success,
	info: $info,
	warning: $warning,
	danger: $danger,
	light: $light,
	dark: $dark
), $theme-colors);

$yiq-text-dark: #272833 !default;
$yiq-text-light: #FFF !default;

$body-bg: #F1F2F5 !default;
$body-color: #272833 !default;
$text-muted: lighten(saturate(adjust-hue($body-color, -1), 0.22), 51.96) !default;

$link-color: #0B5FFF !default;
$link-hover-color: darken($link-color, 8%) !default;

$component-active-bg: #0B5FFF !default;
$component-active-color: #FFF !default;

$border-radius: 0.25rem !default; // 4px
$border-radius-lg: 0.375rem !default; // 6px
$border-radius-sm: 0.1875rem !default; // 3px

$close-text-shadow: none !default;
$alert-padding-x: 1rem !default; // 16px
$alert-padding-y: 1.09375rem !default; // 17.5px

// For top only border use: 2px 0 0 0
$alert-border-width: 0.0625rem !default;

$alert-close-opacity: 1 !default;

$alert-font-size: 0.875rem !default; // 14px

$alert-lead-font-size: $alert-font-size !default;
$alert-lead-font-weight: $font-weight-semi-bold !default;

$alert-link-decoration: underline !default;
$alert-link-hover-decoration: none !default;
$alert-link-font-weight: $font-weight-semi-bold !default;

$alert-indicator-font-size: !default;

$alert-title: () !default;
$alert-title: map-merge((
	font-size: 0.875rem,
	margin-bottom: 0.25rem,
	margin-top: 0
), $alert-title);

$alert-subtitle: () !default;
$alert-subtitle: map-merge((
	font-size: 0.75rem,
	font-weight: $font-weight-normal
), $alert-subtitle);

// Alert Notification

$alert-notifications-box-shadow: 0 0.5rem 2rem -0.25rem rgba(0, 0, 0, 0.3) !default;

// Alert Variants

$alert-primary-color: $primary !default;
$alert-primary-bg: lighten($alert-primary-color, 44.90) !default;
$alert-primary-border-color: lighten($alert-primary-color, 22.94) !default;
$alert-primary-close-color: $alert-primary-color !default;
$alert-primary-close-hover-color: $alert-primary-color !default;
$alert-primary-lead-color: $alert-primary-color !default;
$alert-primary-link-color: $link-color !default;

$alert-secondary-color: $secondary !default;
$alert-secondary-bg: lighten(saturate(adjust-hue($alert-secondary-color, 3), 6.13), 46.08) !default;
$alert-secondary-border-color: lighten(saturate(adjust-hue($alert-secondary-color, -3), 5.39), 23.92) !default;
$alert-secondary-close-color: $alert-secondary-color !default;
$alert-secondary-close-hover-color: $alert-secondary-color !default;
$alert-secondary-lead-color: $alert-secondary-color !default;
$alert-secondary-link-color: $link-color !default;

$alert-info-color: $info !default;
$alert-info-bg: lighten(desaturate(adjust-hue($alert-info-color, 1), 3.25), 52.94) !default;
$alert-info-border-color: lighten(saturate($alert-info-color, 0.59), 28.04) !default;
$alert-info-close-color: $alert-info-color !default;
$alert-info-close-hover-color: $alert-info-color !default;
$alert-info-lead-color: $alert-info-color !default;
$alert-info-link-color: $link-color !default;

$alert-success-color: $success !default;
$alert-success-bg: lighten(desaturate($alert-success-color, 1.52), 62.94) !default;
$alert-success-border-color: lighten(desaturate($alert-success-color, 0.14), 24.90) !default;
$alert-success-close-color: $alert-success-color !default;
$alert-success-close-hover-color: $alert-success-color !default;
$alert-success-lead-color: $alert-success-color !default;
$alert-success-link-color: $link-color !default;

$alert-warning-color: $warning !default;
$alert-warning-bg: lighten(adjust-hue($alert-warning-color, -1), 60.00) !default;
$alert-warning-border-color: lighten($alert-warning-color, 24.90) !default;
$alert-warning-close-color: $alert-warning-color !default;
$alert-warning-close-hover-color: $alert-warning-color !default;
$alert-warning-lead-color: $alert-warning-color !default;
$alert-warning-link-color: $link-color !default;

$alert-danger-color: $danger !default;
$alert-danger-bg: lighten(saturate($alert-danger-color, 5.04), 50.00) !default;
$alert-danger-border-color: lighten(desaturate($alert-danger-color, 0.25), 28.04) !default;
$alert-danger-close-color: $alert-danger-color !default;
$alert-danger-close-hover-color: $alert-danger-color !default;
$alert-danger-lead-color: $alert-danger-color !default;
$alert-danger-link-color: $link-color !default;

$alert-light-color: $dark !default;
$alert-light-border-color: lighten(desaturate($alert-light-color, 0.65), 64.90) !default;
$alert-light-close-color: $secondary !default;
$alert-light-close-hover-color: $secondary !default;
$alert-light-lead-color: $alert-light-color !default;
$alert-light-link-color: $link-color !default;

$alert-dark-color: $light !default;
$alert-dark-bg: darken(desaturate(adjust-hue($alert-dark-color, 11), 3.69), 69.61) !default;
$alert-dark-border-color: darken(desaturate(adjust-hue($alert-dark-color, 10), 2.38), 77.45) !default;
$alert-dark-close-color: $alert-dark-color !default;
$alert-dark-close-hover-color: $alert-dark-color !default;
$alert-dark-lead-color: $alert-dark-color !default;
$alert-dark-link-color: $alert-dark-color !default;
$badge-border-radius: 10rem !default;
$badge-font-size: 0.625rem !default; // 10px
$badge-font-weight: $font-weight-semi-bold !default;
$badge-line-height: 1.1 !default;
$badge-padding-x: 0.25rem !default; // 4px
$badge-padding-y: 0.09375rem !default; // 1.5px

$badge-item-spacer-x: 0.85714em !default;

$badge-pill-border-radius: $border-radius !default;
$badge-pill-padding-x: 0.25rem !default; // 4px

// Badge Variants

$badge-primary-color: #FFF !default;
$badge-primary-bg: $primary !default;
$badge-primary-hover-bg: $badge-primary-bg !default;
$badge-primary-hover-color: $badge-primary-color !default;

$badge-secondary-color: $dark !default;
$badge-secondary-bg: lighten(saturate(adjust-hue($secondary, 3), 6.13), 46.08) !default;
$badge-secondary-hover-bg: $badge-secondary-bg !default;
$badge-secondary-hover-color: $badge-secondary-color !default;
$badge-secondary-link-color: $badge-secondary-color !default;

$badge-success-color: #FFF !default;
$badge-success-bg: $success !default;
$badge-success-hover-bg: $badge-success-bg !default;
$badge-success-hover-color: $badge-success-color !default;

$badge-info-color: #FFF !default;
$badge-info-bg: $info !default;
$badge-info-hover-bg: $badge-info-bg !default;
$badge-info-hover-color: $badge-info-color !default;

$badge-warning-color: #FFF !default;
$badge-warning-bg: $warning !default;
$badge-warning-hover-bg: $badge-warning-bg !default;
$badge-warning-hover-color: $badge-warning-color !default;

$badge-danger-color: #FFF !default;
$badge-danger-bg: $danger !default;
$badge-danger-hover-bg: $badge-danger-bg !default;
$badge-danger-hover-color: $badge-danger-color !default;

$badge-light-color: $dark !default;
$badge-light-bg: $light !default;
$badge-light-hover-bg: $badge-light-bg !default;
$badge-light-hover-color: $badge-light-color !default;
$badge-light-link-color: $badge-light-color !default;

$badge-dark-color: #FFF !default;
$badge-dark-bg: $dark !default;
$badge-dark-hover-bg: $badge-dark-bg !default;
$badge-dark-hover-color: $badge-dark-color !default;
$breadcrumb-bg: transparent !default;
$breadcrumb-font-size: 0.875rem !default; // 14px
$breadcrumb-padding-x: 0.125rem !default; // 2px

$breadcrumb-link-color: $secondary !default;
$breadcrumb-link-hover-color: $breadcrumb-link-color !default;

$breadcrumb-active-color: $body-color !default;

$breadcrumb-divider-color: $breadcrumb-link-color !default;
$breadcrumb-divider-svg-icon-height: 0.6em !default;
$btn-box-shadow: none !default;
$btn-font-weight: $font-weight-semi-bold !default;
$btn-padding-x: 0.9375rem !default; // 15px
$btn-padding-y: 0.4375rem !default; // 7px

$btn-disabled-opacity: 0.26 !default;

$btn-link-disabled-color: $link-color !default;

// Will need to be revisited if https://github.com/twbs/bootstrap/pull/24821 merge error is fixed
$btn-active-box-shadow: inset 0 0 rgba(#000, 0) !default;

$btn-inline-item-font-size: 1rem !default; // 16px

// Button Sizes

$btn-border-radius-lg: $border-radius !default;
$btn-font-size-lg: $font-size-lg !default; // 18px
$btn-padding-x-lg: 1.5rem !default; // 24px
$btn-padding-y-lg: 0.59375rem !default; // 9.5px
$btn-inline-item-font-size-lg: $font-size-lg !default; // 18px

$btn-font-size-sm: $font-size-sm !default; // 14px
$btn-line-height-sm: 1.15 !default;
$btn-padding-x-sm: 0.75rem !default; // 12px
$btn-padding-y-sm: 0.4375rem !default; // 7px

// Button Monospaced

$btn-monospaced-padding-y: 0.25rem !default; // 4px
$btn-monospaced-size: 2.5rem !default; // 40px

$btn-monospaced-padding-x-sm: null !default;
$btn-monospaced-padding-y-sm: 0.1875rem !default; // 3px
$btn-monospaced-size-sm: 2rem !default; // 32px

$btn-monospaced-padding-y-lg: 0.375rem !default; // 6px

// Button Group

$btn-group-item-margin-right: 1rem !default;

// Button Variants

$btn-primary: () !default;
$btn-primary: map-merge((
	hover-bg: darken($primary, 5.10),
	hover-border-color: transparent,
	focus-box-shadow: 0 0 0 2px rgba(darken($primary, 5.10), 0.5),
	disabled-bg: $primary,
	active-bg: darken($primary, 10.00),
	active-border-color: transparent,
	active-box-shadow: none
), $btn-primary);

$btn-secondary: () !default;
$btn-secondary: map-merge((
	bg: #FFF,
	border-color: lighten(saturate(adjust-hue($secondary, -2), 5.48), 37.06),
	color: $secondary,
	hover-bg: lighten(saturate(adjust-hue($secondary, -27), 6.13), 51.57),
	hover-border-color: lighten(saturate(adjust-hue($secondary, -2), 5.48), 37.06),
	hover-color: $body-color,
	focus-box-shadow: 0 0 0 2px rgba(lighten(saturate(adjust-hue($secondary, -2), 5.48), 37.06), 0.5),
	focus-color: $body-color,
	disabled-bg: #FFF,
	disabled-border-color: lighten(saturate(adjust-hue($secondary, -2), 5.48), 37.06),
	disabled-color: $secondary,
	active-border-color: lighten(saturate(adjust-hue($secondary, -2), 5.48), 37.06),
	active-color: $body-color,
	active-bg: lighten(saturate(adjust-hue($secondary, -12), 8.51), 49.61),
	active-box-shadow: none,
	loading-animation: null
), $btn-secondary);

$btn-success: () !default;
$btn-success: map-merge((
	hover-bg: darken($success, 4%),
	hover-border-color: transparent,
	focus-box-shadow: 0 0 0 2px rgba(darken($success, 4%), 0.5),
	disabled-bg: $success,
	active-bg: darken($success, 8%),
	active-border-color: transparent,
	active-box-shadow: none
), $btn-success);

$btn-info: () !default;
$btn-info: map-merge((
	hover-bg: darken($info, 4%),
	hover-border-color: transparent,
	focus-box-shadow: 0 0 0 2px rgba(darken($info, 4%), 0.5),
	disabled-bg: $info,
	active-bg: darken($info, 8%),
	active-border-color: transparent,
	active-box-shadow: none
), $btn-info);

$btn-warning: () !default;
$btn-warning: map-merge((
	hover-bg: darken($warning, 4%),
	hover-border-color: transparent,
	focus-box-shadow: 0 0 0 2px rgba(darken($warning, 4%), 0.5),
	disabled-bg: $warning,
	active-bg: darken($warning, 8%),
	active-border-color: transparent,
	active-box-shadow: none,
	loading-animation: 'loading-animation-light'
), $btn-warning);

$btn-danger: () !default;
$btn-danger: map-merge((
	hover-bg: darken($danger, 4%),
	hover-border-color: transparent,
	focus-box-shadow: 0 0 0 2px rgba(darken($danger, 4%), 0.5),
	disabled-bg: $danger,
	active-bg: darken($danger, 8%),
	active-border-color: transparent,
	active-box-shadow: none
), $btn-danger);

$btn-light: () !default;
$btn-light: map-merge((
	color: $body-color,
	hover-bg: darken($light, 4%),
	hover-border-color: transparent,
	focus-box-shadow: 0 0 0 2px rgba(darken($light, 4%), 0.5),
	disabled-bg: $light,
	active-bg: darken($light, 8%),
	active-border-color: transparent,
	active-box-shadow: none
), $btn-light);

$btn-dark: () !default;
$btn-dark: map-merge((
	hover-bg: darken($dark, 4%),
	hover-border-color: transparent,
	focus-box-shadow: 0 0 0 2px rgba(darken($dark, 4%), 0.5),
	disabled-bg: $dark,
	active-bg: darken($dark, 8%),
	active-border-color: transparent,
	active-box-shadow: none
), $btn-dark);

// Button Outline Variant

$btn-outline-primary: () !default;
$btn-outline-primary: map-merge((
	hover-bg: lighten($primary, 44.90),
	hover-color: $primary,
	focus-bg: lighten($primary, 44.90),
	focus-box-shadow: 0 0 0 2px rgba(darken($primary, 5.10), 0.25),
	focus-color: $primary,
	disabled-bg: transparent,
	disabled-border-color: map-get($btn-primary, bg),
	disabled-color: map-get($btn-primary, bg),
	active-bg: lighten(desaturate($primary, 42.05), 41.76),
	active-color: $primary,
	active-box-shadow: map-get($btn-primary, active-box-shadow)
), $btn-outline-primary);

$btn-outline-secondary: () !default;
$btn-outline-secondary: map-merge((
	bg: null,
	border-color: lighten(saturate(adjust-hue($secondary, -2), 5.48), 37.06),
	color: null,
	hover-bg: rgba(#272833, 0.03),
	hover-border-color: transparent,
	hover-color: map-get($btn-secondary, hover-color),
	focus-bg: map-get($btn-secondary, focus-bg),
	focus-border-color: transparent,
	focus-box-shadow: map-get($btn-secondary, focus-box-shadow),
	focus-color: map-get($btn-secondary, focus-color),
	disabled-bg: transparent,
	disabled-border-color: $secondary,
	disabled-color: $secondary,
	active-bg: rgba(#272833, 0.06),
	active-border-color: transparent,
	active-box-shadow: map-get($btn-secondary, active-box-shadow),
	active-color: map-get($btn-secondary, active-color)
), $btn-outline-secondary);

$btn-outline-info: () !default;
$btn-outline-info: map-merge((
	hover-bg: map-get($btn-info, hover-bg),
	focus-box-shadow: map-get($btn-info, focus-box-shadow),
	focus-color: #FFF,
	disabled-bg: transparent,
	disabled-border-color: map-get($btn-info, bg),
	disabled-color: map-get($btn-info, bg),
	active-bg: map-get($btn-info, active-bg),
	active-box-shadow: map-get($btn-info, active-box-shadow)
), $btn-outline-info);

$btn-outline-success: () !default;
$btn-outline-success: map-merge((
	hover-bg: map-get($btn-success, hover-bg),
	focus-box-shadow: map-get($btn-success, focus-box-shadow),
	focus-color: #FFF,
	disabled-bg: transparent,
	disabled-border-color: map-get($btn-success, bg),
	disabled-color: map-get($btn-success, bg),
	active-bg: map-get($btn-success, active-bg),
	active-box-shadow: map-get($btn-success, active-box-shadow)
), $btn-outline-success);

$btn-outline-warning: () !default;
$btn-outline-warning: map-merge((
	hover-bg: map-get($btn-warning, hover-bg),
	focus-box-shadow: map-get($btn-warning, focus-box-shadow),
	focus-color: #FFF,
	disabled-bg: transparent,
	disabled-border-color: map-get($btn-warning, bg),
	disabled-color: map-get($btn-warning, bg),
	active-bg: map-get($btn-warning, active-bg),
	active-box-shadow: map-get($btn-warning, active-box-shadow)
), $btn-outline-warning);

$btn-outline-danger: () !default;
$btn-outline-danger: map-merge((
	hover-bg: map-get($btn-danger, hover-bg),
	focus-box-shadow: map-get($btn-danger, focus-box-shadow),
	focus-color: #FFF,
	disabled-bg: transparent,
	disabled-border-color: map-get($btn-danger, bg),
	disabled-color: map-get($btn-danger, bg),
	active-bg: map-get($btn-danger, active-bg),
	active-box-shadow: map-get($btn-danger, active-box-shadow)
), $btn-outline-danger);

$btn-outline-light: () !default;
$btn-outline-light: map-merge((
	hover-bg: map-get($btn-light, hover-bg),
	focus-box-shadow: map-get($btn-light, focus-box-shadow),
	focus-color: $body-color,
	disabled-bg: transparent,
	disabled-border-color: map-get($btn-light, bg),
	disabled-color: map-get($btn-light, bg),
	active-bg: map-get($btn-light, active-bg),
	active-box-shadow: map-get($btn-light, active-box-shadow)
), $btn-outline-light);

$btn-outline-dark: () !default;
$btn-outline-dark: map-merge((
	hover-bg: map-get($btn-dark, hover-bg),
	focus-box-shadow: map-get($btn-dark, focus-box-shadow),
	focus-color: #FFF,
	disabled-bg: transparent,
	disabled-border-color: map-get($btn-dark, bg),
	disabled-color: map-get($btn-dark, bg),
	active-bg: map-get($btn-dark, active-bg),
	active-box-shadow: map-get($btn-dark, active-box-shadow)
), $btn-outline-dark);
$label-border-radius: 0.125rem !default; // 2px
$label-font-size: 0.625rem !default; // 10px
$label-font-weight: $font-weight-semi-bold !default;
$label-padding-x: 0.25rem !default; // 4px
$label-padding-y: 0.125rem !default; // 2px
$label-text-transform: uppercase !default;

$label-item-spacer-x: 0.85714em !default;

$label-anchor-hover-text-decoration: underline !default;

$label-link-text-decoration: none !default;
$label-link-hover-text-decoration: underline !default;

// Label Close

$label-close: () !default;
$label-close: map-merge((
	disabled-color: inherit
), $label-close);

// Label Sizes

$label-lg: () !default;
$label-lg: map-merge((
	font-size: 0.75rem, // 12px
	height: 1.5rem, // 24px
	padding-x: 0.5rem, // 8px
	padding-y: 0.3125rem // 5px
), $label-lg);

// Label Variants

$label-primary-color: $primary !default;
$label-primary-hover-color: $label-primary-color !default;
$label-primary-border-color: lighten($label-primary-color, 22.94) !default;
$label-primary-hover-border-color: $label-primary-border-color !default;

$label-secondary-color: $secondary !default;
$label-secondary-hover-color: $label-secondary-color !default;
$label-secondary-border-color: lighten(saturate(adjust-hue($label-secondary-color, -2), 5.48), 37.06) !default;
$label-secondary-hover-border-color: $label-secondary-border-color !default;

$label-success-color: $success !default;
$label-success-hover-color: $label-success-color !default;
$label-success-border-color: lighten(desaturate($label-success-color, 0.14), 24.90) !default;
$label-success-hover-border-color: $label-success-border-color !default;

$label-info-color: $info !default;
$label-info-hover-color: $label-info-color !default;
$label-info-border-color: lighten(saturate($label-info-color, 0.59), 28.04) !default;
$label-info-hover-border-color: $label-info-border-color !default;

$label-warning-color: $warning !default;
$label-warning-hover-color: $label-warning-color !default;
$label-warning-border-color: lighten($label-warning-color, 24.90) !default;
$label-warning-hover-border-color: $label-warning-border-color !default;

$label-danger-color: $danger !default;
$label-danger-hover-color: $label-danger-color !default;
$label-danger-border-color: lighten(desaturate($label-danger-color, 0.25), 28.04) !default;
$label-danger-hover-border-color: $label-danger-border-color !default;

$label-light-color: $light !default;
$label-light-hover-color: $label-light-color !default;
$label-light-bg: $dark !default;
$label-light-border-color: $light !default;
$label-light-hover-border-color: $label-light-border-color !default;

$label-dark-color: $dark !default;
$label-dark-hover-color: $label-dark-color !default;
$label-dark-border-color: $dark !default;
$label-dark-hover-border-color: $label-dark-border-color !default;
$sticker-font-size: 0.625rem !default; // 10px
$sticker-font-weight: $font-weight-bold !default;

$sticker-inline-item-font-size: 1rem !default; // 16px

// Sticker Sizes

$sticker-sm: () !default;
$sticker-sm: map-merge((
	font-size: 0.5625rem, // 9px
	inline-item-font-size: 0.75rem // 14px
), $sticker-sm);

$sticker-lg: () !default;
$sticker-lg: map-merge((
	font-size: 0.9375rem, // 15px
	inline-item-font-size: 1.25rem // 20px
), $sticker-lg);

$sticker-xl: () !default;
$sticker-xl: map-merge((
	font-size: 1.0625rem, // 17px
	inline-item-font-size: 1.5rem // 24px
), $sticker-xl);

// Sticker Positions

$sticker-inside-offset: 1rem !default; // 16px

// Sticker Variants

$sticker-light-color: $dark !default;
$card-border-radius: $border-radius !default;
$card-border-width: 0 !default;
$card-box-shadow: 0 1px 3px -1px rgba(0, 0, 0, 0.6) !default;

$card-body-padding-bottom: 1rem !default;
$card-body-padding-left: 1rem !default;
$card-body-padding-right: 1rem !default;
$card-body-padding-top: 1rem !default;

$card-inner-border-radius: if($card-border-width > 0, calc(#{$card-border-radius} - #{$card-border-width}), $card-border-radius) !default;

// Card Title

$card-title: () !default;
$card-title: map-merge((
	color: $body-color,
	font-size: 0.875rem // 14px
), $card-title);

$card-title-link: () !default;
$card-title-link: map-merge((
	hover-color: map-get($card-title, color)
), $card-title-link);

// Card Subtitle

$card-subtitle: () !default;
$card-subtitle: map-merge((
	font-weight: $font-weight-normal
), $card-subtitle);

$card-subtitle-link: () !default;
$card-subtitle-link: map-merge((
	hover-color: $secondary
), $card-subtitle-link);

// Card Link

$card-link: () !default;
$card-link: map-merge((
	color: $secondary,
	font-size: 0.875rem, // 14px
	hover-color: $secondary,
	hover-text-decoration: underline
), $card-link);

$checkbox-left-card-padding: 50px !default;

$form-check-card-checked-box-shadow: 0 0 0 2px lighten($component-active-bg, 22.94) !default;

// Card Type Asset

$card-type-asset: () !default;
$card-type-asset: map-merge((
	aspect-ratio-border-color: lighten(map-get($theme-colors, secondary), 46%),
	card-body-padding-top: 0.75rem
), $card-type-asset);

$image-card: () !default;
$image-card: map-merge((
	aspect-ratio-checkered-fg: lighten(saturate(adjust-hue($secondary, 3), 6.13), 46.08)
), $image-card);

$file-card: () !default;
$file-card: map-merge((
	asset-icon-color: lighten(saturate(adjust-hue($secondary, -2), 5.48), 37.06)
), $file-card);
$dropdown-border-color: lighten(saturate(adjust-hue($secondary, 3), 6.13), 46.08) !default;
$dropdown-border-width: 0 !default;
$dropdown-box-shadow: 0 1px 5px -1px rgba(0, 0, 0, 0.3) !default;
$dropdown-font-size: 0.875rem !default; // 14px

$dropdown-padding-y: 0.375rem !default; // 6px
$dropdown-min-height: 40px !default;
$dropdown-min-width: 240px !default;
$dropdown-max-width: 240px !default;

$dropdown-item-padding-x: 1.25rem !default; // 20px
$dropdown-item-padding-y: 0.5rem !default; // 8px

$dropdown-header-color: $secondary !default;
$dropdown-header-font-size: 0.875rem !default; // 14px
$dropdown-header-margin-top: 0.625rem !default; // 10px

$dropdown-subheader-font-size: 0.75rem !default; // 12px
$dropdown-subheader-margin-top: 0.625rem !default; // 10px

$dropdown-link-color: $secondary !default;
$dropdown-link-font-weight: $font-weight-normal !default;
$dropdown-link-hover-color: $body-color !default;
$dropdown-link-hover-bg: lighten($component-active-bg, 44.90) !default;
$dropdown-link-active-color: $dropdown-link-hover-color !default;
$dropdown-link-active-bg: $dropdown-link-hover-bg !default;
$dropdown-link-active-font-weight: $font-weight-semi-bold !default;
$dropdown-link-disabled-color: lighten(desaturate(adjust-hue($body-color, -1), 0.74), 51.76) !default;

$dropdown-divider-bg: $dropdown-border-color !default;

// Dropdown Action

$dropdown-action-toggle-font-size: 1rem !default; // 16px
$dropdown-action-toggle-size: $btn-monospaced-size-sm !default;

$dropdown-action-toggle-disabled-opacity: $btn-disabled-opacity !default;
$input-font-size-mobile: 1rem !default; // 16px

$input-label-font-size: 0.875rem !default; // 14px
$input-label-font-weight: $font-weight-semi-bold !default;
$input-label-margin-bottom: 0.25rem !default; // 4px

$input-label-reference-mark-font-size: 6px !default;

$input-border-width: 0.0625rem !default; // 1px

$input-border-bottom-width: $input-border-width !default; // 1px
$input-border-left-width: $input-border-width !default; // 1px
$input-border-right-width: $input-border-width !default; // 1px
$input-border-top-width: $input-border-width !default; // 1px

$input-border-style: solid !default;

$input-padding-x: 1rem !default; // 16px
$input-padding-y: 0.5rem !default; // 8px

$input-padding-x-lg: $input-padding-x !default;
$input-padding-y-lg: $input-padding-y !default;

$input-padding-x-sm: 0.75rem !default; // 12px
$input-padding-y-sm: 0.25rem !default;

$input-height-border: $input-border-bottom-width + $input-border-top-width !default;
$input-height: 2.5rem !default; // 40px
$input-height-inner: $input-height - $input-height-border !default;
$input-height-lg: 3rem !default; // 48px
$input-height-inner-lg: $input-height-lg - $input-height-border !default;
$input-height-sm: 2rem !default; // 32px
$input-height-inner-sm: $input-height-sm - $input-height-border !default;

$form-feedback-font-size: 0.875rem !default; // 14px

$form-text-color: $secondary !default;

$form-group-margin-bottom: 1.5rem !default; // 24px
$form-group-margin-bottom-mobile: 1rem !default; // 16px

// Form Check

$form-check-input-gutter: 0.875rem !default;
$form-check-input-margin-y: 0.41667em !default;

$form-check-label-text-margin-left: -0.1875rem !default; // 3px

// Skin

$input-color: $body-color !default;
$input-bg: $body-bg !default;
$input-border-color: lighten(saturate(adjust-hue($secondary, 3), 6.13), 46.08) !default;
$input-box-shadow: none !default;
$input-placeholder-color: $secondary !default;
$input-label-color: $body-color !default;

$input-focus-bg: lighten($component-active-bg, 44.90) !default;
$input-focus-border-color: lighten($component-active-bg, 22.94) !default;
$input-focus-box-shadow: none !default;

$input-disabled-color: $text-muted !default;
$input-disabled-bg: $input-bg !default;
$input-disabled-border-color: $input-bg !default;
$input-placeholder-disabled-color: $input-disabled-color !default;

$input-label-disabled-color: $text-muted !default;

$input-readonly-bg: $input-border-color !default;

$input-danger-bg: lighten(saturate($danger, 5.04), 50.00) !default;
$input-danger-border-color: lighten(desaturate($danger, 0.25), 28.04) !default;
$input-danger-box-shadow: none !default;
$input-danger-focus-box-shadow: none !default;
$input-danger-color: $input-color !default;
$input-danger-checkbox-label-color: $danger !default;
$input-danger-select-icon-color: $input-danger-border-color !default;
$input-danger-select-icon: clay-icon(caret-double-l, $input-danger-select-icon-color) !default;

$input-success-bg: lighten(desaturate($success, 1.52), 62.94) !default;
$input-success-border-color: lighten(desaturate($success, 0.14), 24.90) !default;
$input-success-box-shadow: none !default;
$input-success-focus-box-shadow: none !default;
$input-success-color: $input-color !default;
$input-success-checkbox-label-color: $success !default;
$input-success-select-icon-color: $input-success-border-color !default;
$input-success-select-icon: clay-icon(caret-double-l, $input-success-select-icon-color) !default;

$input-warning-bg: lighten(adjust-hue($warning, -1), 60.00) !default;
$input-warning-border-color: lighten($warning, 24.90) !default;
$input-warning-box-shadow: none !default;
$input-warning-focus-box-shadow: none !default;
$input-warning-color: $input-color !default;
$input-warning-checkbox-label-color: $warning !default;
$input-warning-select-icon-color: $input-warning-border-color !default;
$input-warning-select-icon: clay-icon(caret-double-l, $input-warning-select-icon-color) !default;

// Select Element

$input-select-bg-position: right 0.5em center !default;
$input-select-bg-size: 1.5em auto !default;
$input-select-padding-right: 2em !default;

$input-select-icon-color: $secondary !default;
$input-select-icon: clay-icon(caret-double-l, $input-select-icon-color) !default;

$input-select-icon-focus-color: $input-select-icon-color !default;
$input-select-icon-focus: clay-icon(caret-double-l, $input-select-icon-focus-color) !default;

$input-select-icon-disabled-color: $text-muted !default;
$input-select-icon-disabled: clay-icon(caret-double-l, $input-select-icon-disabled-color) !default;

// Form Control Label (Labels inside Form Control Tag Group)

$form-control-label-size: () !default;
$form-control-label-size: map-merge((
	border-width: 0.0625rem, // 1px
	font-size: map-get($label-lg, font-size),
	height: 1.5rem, // 24px
	padding-x: map-get($label-lg, padding-x),
	padding-y: map-get($label-lg, padding-y),
	text-transform: none
), $form-control-label-size);

// Form Group

$form-group-item-label-spacer: ($input-label-font-size * $line-height-base) + $input-label-margin-bottom !default;

// Input Groups

$input-group-addon-bg: lighten(saturate(adjust-hue($secondary, 3), 6.13), 46.08) !default;
$input-group-addon-border-color: $input-group-addon-bg !default;
$input-group-addon-color: $secondary !default;
$input-group-addon-font-weight: $font-weight-semi-bold !default;
$input-group-addon-min-width: 2.5rem !default; // 40px
$input-group-addon-padding-x: 0.75rem !default; // 12px

// Input Group Sizes

$input-group-addon-min-width-sm: 2rem !default; // 32px

// Input Group Secondary

$input-group-secondary-addon-bg: #FFF !default;
$input-group-secondary-addon-border-color: lighten(saturate(adjust-hue($secondary, -2), 5.48), 37.06) !default;
$input-group-secondary-addon-color: $secondary !default;
$link-secondary: () !default;
$link-secondary: map-merge((
	hover-color: $body-color
), $link-secondary);

// Component Title

$component-title: () !default;
$component-title: map-merge((
	font-size: 1rem,
	line-height: 1.25,
	margin-bottom: calc((#{$dropdown-action-toggle-size} - (1em * 1.25)) / 2),
	margin-top: calc((#{$dropdown-action-toggle-size} - (1em * 1.25)) / 2)
), $component-title);

// Component Subtitle

$component-subtitle: () !default;
$component-subtitle: map-merge((
	font-weight: $font-weight-semi-bold,
	line-height: 1.45
), $component-subtitle);

$component-subtitle-link: () !default;
$component-subtitle-link: map-merge((
	hover-color: $body-color
), $component-subtitle-link);

// Component Action

$component-action: () !default;
$component-action: map-merge((
	font-size: 1rem, // 16px
	hover-bg: rgba(#272833, 0.03),
	hover-color: $body-color,
	active-bg: rgba(#272833, 0.06),
	active-color: $body-color,
	btn-focus-box-shadow: map-get($btn-secondary, focus-box-shadow),
	disabled-bg: transparent
), $component-action);

// Link Outline

$link-outline-primary: () !default;
$link-outline-primary: map-merge((
	hover-bg: lighten($primary, 44.90),
	hover-color: $primary,
	btn-focus-box-shadow: map-get($btn-outline-primary, focus-box-shadow),
	btn-focus-outline: 0,
	active-bg: lighten(desaturate($primary, 42.05), 41.76),
	active-color: $primary
), $link-outline-primary);

$link-outline-secondary: () !default;
$link-outline-secondary: map-merge((
	border-color: lighten(saturate(adjust-hue($secondary, -2), 5.48), 37.06),
	hover-bg: rgba(#272833, 0.03),
	hover-color: $body-color,
	btn-focus-box-shadow: map-get($btn-secondary, focus-box-shadow),
	btn-focus-outline: 0,
	active-bg: rgba(#272833, 0.06),
	active-color: $body-color
), $link-outline-secondary);
$custom-control-indicator-size: 1.0625rem !default; // 17px
$custom-control-indicator-bg: #FFF !default;
$custom-control-indicator-border-color: lighten(saturate(adjust-hue($secondary, -2), 5.48), 37.06) !default;
$custom-control-indicator-border-style: solid !default;
$custom-control-indicator-border-width: 0.0625rem !default; // 1px
$custom-control-indicator-box-shadow: none !default;

$custom-control-indicator-focus-box-shadow: 0 0 0 1px $body-bg, 0 0 0 2px lighten($component-active-bg, 22.94) !default;

$custom-control-indicator-active-bg: #FFF !default;
$custom-control-indicator-active-border-color: $custom-control-indicator-border-color !default;
$custom-control-indicator-active-box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1) !default;

$custom-control-indicator-disabled-bg: $input-disabled-bg !default;
$custom-control-indicator-disabled-border-color: $input-disabled-border-color !default;

// Custom Control Indicator Checked

// $custom-control-indicator-active-checked-bg is deprecated as of v2.2.1
$custom-control-indicator-active-checked-bg: $component-active-bg !default;
$custom-control-indicator-checked-active-bg: $custom-control-indicator-active-checked-bg !default;

// $custom-control-indicator-active-checked-border-color is deprecated as of v2.2.1
$custom-control-indicator-active-checked-border-color: $custom-control-indicator-checked-active-bg !default;
$custom-control-indicator-checked-active-border-color: $custom-control-indicator-active-checked-border-color !default;

$custom-control-indicator-checked-border-color: $custom-control-indicator-checked-active-bg !default;

// $custom-control-indicator-disabled-checked-bg is deprecated as of v2.2.1
$custom-control-indicator-disabled-checked-bg: lighten($component-active-bg, 32.94) !default;
$custom-control-indicator-checked-disabled-bg: $custom-control-indicator-disabled-checked-bg !default;

// $custom-control-indicator-disabled-checked-border-color is deprecated as of v2.2.1
$custom-control-indicator-disabled-checked-border-color: $custom-control-indicator-disabled-checked-bg !default;
$custom-control-indicator-checked-disabled-border-color: $custom-control-indicator-disabled-checked-border-color !default;

// Custom Control Indicator Indeterminate

$custom-control-indicator-indeterminate-border-color: $custom-control-indicator-checked-active-bg !default;

// Custom Control Description

$custom-control-description-font-size: $input-label-font-size !default; // 13px
$custom-control-description-disabled-color: $input-label-disabled-color !default;
$custom-control-description-line-height: $custom-control-indicator-size + ($custom-control-indicator-border-width * 2) !default;

// Custom Checkbox

$custom-checkbox-indicator-icon-checked: clay-icon(check, #FFF) !default;
$custom-checkbox-indicator-icon-checked-bg-size: 60% !default;
$custom-checkbox-indicator-icon-indeterminate-bg-size: 50% !default;

$custom-checkbox-indicator-indeterminate-bg: $component-active-bg !default;
$custom-checkbox-indicator-border-radius: 0.125rem !default; // 2px

// Custom Radio

$custom-radio-indicator-icon-checked-bg-size: 70% !default;

$custom-radio-indicator-disabled-border-color: $custom-control-indicator-disabled-bg !default;

// $custom-radio-indicator-disabled-checked-border-color is deprecated as of v2.2.1
$custom-radio-indicator-disabled-checked-border-color: $custom-control-indicator-disabled-checked-border-color !default;
$custom-radio-indicator-checked-disabled-border-color: $custom-radio-indicator-disabled-checked-border-color !default;
$order-arrow-down-active-color: lighten(saturate(adjust-hue($secondary, -3), 5.39), 23.92) !default;
$order-arrow-up-active-color: $order-arrow-down-active-color !default;
$list-group-border-color: rgba(220, 220, 220, 0.5) !default;
$list-group-color: $secondary !default;
$list-group-hover-bg: lighten($component-active-bg, 44.90) !default;
$list-group-active-bg: $list-group-hover-bg !default;
$list-group-active-border-color: $list-group-border-color !default;
$list-group-active-color: !default;

$list-group-font-size: 0.875rem !default; // 14px
$list-group-item-padding-x: 1rem !default; // 16px
$list-group-item-padding-y: 1rem !default; // 16px

// List Group Header

$list-group-header-bg: lighten(saturate(adjust-hue($secondary, -27), 6.13), 51.57) !default;
$list-group-header-padding-y: 0.5rem !default; // 8px

$list-group-header-title: () !default;
$list-group-header-title: map-merge((
	color: $secondary,
	font-size: 0.75rem, // 12px
	text-transform: uppercase
), $list-group-header-title);

// List Group Title

$list-group-title-link: () !default;
$list-group-title-link: map-merge((
	hover-color: $clay-unset
), $list-group-title-link);

$list-group-title: () !default;
$list-group-title: map-merge((
	color: $body-color,
	font-size: 0.875rem, // 14px
	line-height: 1.45
), $list-group-title);

// List Group Subtitle

$list-group-subtitle-link: () !default;
$list-group-subtitle-link: map-merge((
	hover-color: $body-color
), $list-group-subtitle-link);

// List Group Text

$list-group-text-link: () !default;
$list-group-text-link: map-merge((
	hover-color: $body-color
), $list-group-text-link);

$list-group-text: () !default;
$list-group-text: map-merge((
	line-height: 1.45
), $list-group-text);

// List Group Subtext

$list-group-subtext-link: () !default;
$list-group-subtext-link: map-merge((
	hover-color: $body-color
), $list-group-subtext-link);

$list-group-subtext: () !default;
$list-group-subtext: map-merge((
	line-height: 1.45
), $list-group-subtext);

// List Group Link

$list-group-link-color: $body-color !default;
$list-group-link-hover-color: $list-group-link-color !default;
$list-group-link-active-color: $list-group-link-color !default;

// List Group Notification

$list-group-notification-item-primary: () !default;
$list-group-notification-item-primary: map-merge((
	border-left-color: lighten($component-active-bg, 22.94),
	active-border-left-color: lighten($component-active-bg, 22.94)
), $list-group-notification-item-primary);
$loading-animation: () !default;
$loading-animation: map-merge((
	color: $secondary
), $loading-animation);
$modal-backdrop-bg: lighten($body-color, 8%) !default;
$modal-backdrop-opacity: 0.8 !default;

$modal-content-box-shadow-xs: 0 0 3px 1px rgba(0, 0, 0, 0.2) !default;
$modal-content-border-color: transparent !default;

$modal-inner-padding: 1.5rem !default; // 24px

$modal-header-border-color: lighten(saturate(adjust-hue($secondary, 3), 6.13), 46.08) !default;
$modal-header-padding: 1.5rem !default; // 24px

$modal-title-font-size: 1.25rem !default; // 20px
$modal-title-font-weight: $font-weight-bold !default;

// Modal Success

$modal-success: () !default;
$modal-success: map-merge((
	header-bg: lighten(desaturate(#287d3d, 1.52), 62.94),
	header-border-color: lighten(desaturate(#287d3d, 0.14), 24.90),
	header-color: $success,
	header-close: (
		color: $success,
		hover-color: inherit,
		focus-color: inherit,
		disabled-color: inherit
	)
), $modal-success);

// Modal Info

$modal-info: () !default;
$modal-info: map-merge((
	header-bg: lighten(desaturate(adjust-hue($info, 1), 3.25), 52.94),
	header-border-color: lighten(saturate($info, 0.59), 28.04),
	header-color: $info,
	header-close: (
		color: $info,
		hover-color: inherit,
		focus-color: inherit,
		disabled-color: inherit
	)
), $modal-info);

// Modal Warning

$modal-warning: () !default;
$modal-warning: map-merge((
	header-bg: lighten(adjust-hue($warning, -1), 60.00),
	header-border-color: lighten($warning, 24.90),
	header-color: $warning,
	header-close: (
		color: $warning,
		hover-color: inherit,
		focus-color: inherit,
		disabled-color: inherit
	)
), $modal-warning);

// Modal Danger

$modal-danger: () !default;
$modal-danger: map-merge((
	header-bg: lighten(saturate($danger, 5.04), 50.00),
	header-border-color: lighten(desaturate($danger, 0.25), 28.04),
	header-color: $danger,
	header-close: (
		color: $danger,
		hover-color: inherit,
		focus-color: inherit,
		disabled-color: inherit
	)
), $modal-danger);
$multi-step-icon-bg: lighten(saturate(adjust-hue($secondary, -12), 8.51), 49.61) !default;
$multi-step-icon-color: $secondary !default;
$multi-step-icon-border-radius: 100px !default;
$multi-step-icon-font-size: 0.875rem !default;
$multi-step-icon-font-weight: $font-weight-semi-bold !default;

$multi-step-icon-hover-color: $multi-step-icon-color !default;

$multi-step-indicator-label-color: $secondary !default;
$multi-step-indicator-label-font-size: 0.875rem !default;
$multi-step-indicator-label-font-weight: $font-weight-semi-bold !default;

$multi-step-title-color: $secondary !default;
$multi-step-title-font-size: 0.875rem !default;
$multi-step-title-font-weight: $font-weight-semi-bold !default;

$multi-step-icon-disabled-bg: $multi-step-icon-bg !default;
$multi-step-icon-disabled-color: lighten(saturate(adjust-hue($secondary, -3), 5.39), 23.92) !default;
$nav-font-size: 0.875rem !default;

$nav-link-disabled-color: lighten(saturate(adjust-hue($secondary, -3), 5.39), 23.92) !default;

$nav-link-padding-x: 1rem !default; // 16px
$nav-link-padding-y: 0.625rem !default; // 10px

$nav-collapse-icon-closed: "\f0da" !default;
$nav-collapse-icon-open: "\f0d7" !default;

// Nav Nested

$nav-nested-spacer-x: 1rem !default; // 16px

// Nav Tabs

$nav-tabs-border-color: transparent !default;
$nav-tabs-font-size: 0.875rem !default; // 14px
$nav-tabs-link-color: $secondary !default;

$nav-tabs-link-hover-border-color: transparent !default;

$nav-tabs-link-active-color: $body-color !default;
$nav-tabs-link-active-bg: #FFF !default;

$nav-tabs-link-active-border-color: transparent transparent $body-bg !default;
$nav-tabs-link-show-color: $nav-tabs-link-active-color !default;
$nav-tabs-link-show-bg: transparent !default;
$nav-tabs-link-show-border-color: transparent transparent $nav-tabs-border-color transparent !default;

$nav-tabs-link-padding-y: 0.28125rem !default; // 4.5px

$nav-tabs-tab-pane-bg: #FFF !default;
$nav-tabs-tab-pane-border-radius: 4px !default;
$nav-tabs-tab-pane-padding: 2rem !default;

// Nav Underline

$nav-underline-link-color: $secondary !default;

$nav-underline-link-highlight-left: 0 !default;
$nav-underline-link-highlight-right: 0 !default;

$nav-underline-link-disabled-color: $nav-link-disabled-color !default;

$nav-underline-link-active-color: $body-color !default;
$nav-underline-link-active-highlight: $component-active-bg !default;
$nav-underline-link-active-highlight-height: 0.125rem !default; // 2px
// Menubar Vertical MD

$menubar-vertical-transparent-md: () !default;
$menubar-vertical-transparent-md: map-merge((
	bg-mobile: #FFF,
	link-border-radius: 0.375rem,
	link-border-radius-mobile: 0,
	link-hover-bg: rgba(#272833, 0.03),
	link-hover-color: #272833,
	link-active-font-weight: $font-weight-semi-bold,
	toggler-font-size-mobile: 0.875rem,
	toggler-font-weight-mobile: $font-weight-semi-bold
), $menubar-vertical-transparent-md);

// Menubar Vertical LG

$menubar-vertical-transparent-lg: () !default;
$menubar-vertical-transparent-lg: map-merge((
	bg-mobile: #FFF,
	link-border-radius: 0.375rem,
	link-border-radius-mobile: 0,
	link-hover-bg: rgba(#272833, 0.03),
	link-hover-color: #272833,
	link-active-font-weight: $font-weight-semi-bold,
	toggler-font-size-mobile: 0.875rem,
	toggler-font-weight-mobile: $font-weight-semi-bold
), $menubar-vertical-transparent-lg);
$navbar-font-size: 0.875rem !default; // 14px

$navbar-underline-active-bg: lighten($component-active-bg, 22.94) !default;

// Navbar Light

$navbar-light-color: $secondary !default;
$navbar-light-hover-color: $navbar-light-color !default;
$navbar-light-active-color: $body-color !default;
$navbar-light-disabled-color: $nav-link-disabled-color !default;

// Navbar Dark

$navbar-dark-color: #FFF !default;
$navbar-dark-hover-color: $navbar-dark-color !default;
$navbar-dark-active-color: $navbar-dark-color !default;
$navbar-dark-disabled-color: $nav-link-disabled-color !default;
$application-bar-size: () !default;
$application-bar-size: map-merge((
	title-font-size: 1.125rem // 18px
), $application-bar-size);

$application-bar-dark: () !default;
$application-bar-dark: map-merge((
	bg: lighten(desaturate(adjust-hue($dark, 1), 0.77), 3.92),
	link-border-radius: $border-radius,
	link-font-weight: $font-weight-semi-bold,
	link-hover-bg: rgba(255, 255, 255, 0.03),
	link-active-bg: rgba(255, 255, 255, 0.06),
	link-disabled-bg: transparent,
	link-disabled-opacity: 0.5
), $application-bar-dark);
$management-bar-light: () !default;
$management-bar-light: map-merge((
	bg: #FFF,
	link-border-radius: $border-radius,
	link-font-weight: $font-weight-semi-bold,
	link-hover-color: $body-color,
	link-hover-bg: rgba(#272833, 0.03),
	link-active-bg: rgba(#272833, 0.06),
	link-disabled-bg: transparent
), $management-bar-light);

$management-bar-primary: () !default;
$management-bar-primary: map-merge((
	link-border-radius: $border-radius,
	link-font-weight: $font-weight-semi-bold,
	link-hover-color: $body-color,
	link-hover-bg: rgba(#272833, 0.03),
	link-active-bg: rgba(#272833, 0.06),
	link-disabled-bg: transparent
), $management-bar-primary);
$navigation-bar-size: () !default;
$navigation-bar-size: map-merge((
	collapse-dropdown-item-padding-y-mobile: 0.8125rem
), $navigation-bar-size);

$navigation-bar-light: () !default;
$navigation-bar-light: map-merge((
	bg: #FFF,
	link-font-weight: $font-weight-semi-bold,
	link-hover-color: $body-color
), $navigation-bar-light);


$navigation-bar-secondary: () !default;
$navigation-bar-secondary: map-merge((
	bg: darken(saturate($secondary, 4.82), 20.00),
	link-color: lighten(saturate(adjust-hue($secondary, -2), 5.48), 37.06),
	link-font-weight: $font-weight-semi-bold,
	link-hover-color: #FFF,
	link-active-color: #FFF,
	link-disabled-color: $nav-link-disabled-color,
	link-disabled-opacity: 0.5
), $navigation-bar-secondary);
$pagination-font-size: 0.875rem !default; // 14px

$pagination-item-height: 2rem !default; // 32px
$pagination-item-margin-x: 0.125rem !default;

$pagination-link-border-radius: 4px !default;

$pagination-bg: transparent !default;
$pagination-border-color: $pagination-bg !default;
$pagination-border-width: 0.0625rem !default; // 1px
$pagination-color: $secondary !default;
$pagination-padding-x: 0.625rem !default; // 10px
$pagination-padding-y: 0 !default;
$pagination-line-height: $pagination-item-height - ($pagination-border-width * 2) !default;

$pagination-hover-bg: rgba(0, 0, 0, 0.02) !default;
$pagination-hover-border-color: transparent !default;
$pagination-hover-color: $body-color !default;

$pagination-active-bg: rgba(0, 0, 0, 0.04) !default;
$pagination-active-border-color: transparent !default;
$pagination-active-color: $pagination-hover-color !default;

$pagination-disabled-bg: transparent !default;
$pagination-disabled-border-color: $pagination-disabled-bg !default;
$pagination-disabled-color: $secondary !default;
$pagination-disabled-opacity: 0.5 !default;

$pagination-dropdown-menu-spacer-y: 0.625rem !default; // 10px

$pagination-results-color: $pagination-color !default;

// Sizes

$pagination-link-border-radius-sm: 0.3125rem !default;
$pagination-font-size-sm: 0.75rem !default; // 12px
$pagination-item-height-sm: 1.5rem !default; // 24px
$pagination-line-height-sm: $pagination-item-height-sm - ($pagination-border-width * 2) !default;
$pagination-padding-y-sm: 0 !default;

$pagination-link-border-radius-lg: 0.3125rem !default; // 5px
$pagination-font-size-lg: 1.125rem !default; // 18px
$pagination-item-height-lg: 2.75rem !default; //44px
$pagination-line-height-lg: $pagination-item-height-lg - ($pagination-border-width * 2) !default;
$pagination-padding-x-lg: 1rem !default; // 16px
$pagination-padding-y-lg: 0 !default;
// Panel Header

$panel-header-border-bottom-width: 0 !default;
$panel-header-link-hover-text-decoration: none !default;

// Panel Footer

$panel-footer-border-top-width: 0 !default;

// Panel Title

$panel-title-font-size: 0.875rem !default; // 14px
$panel-title-text-transform: uppercase !default;

// Panel Collapse Icon

$panel-collapse-icon-font-size: 0.75rem !default; // 12px

// Panel Variants

$panel-secondary: () !default;
$panel-secondary: map-merge((
	border-color: lighten(saturate(adjust-hue($secondary, 3), 6.13), 46.08),
	color: $secondary,
	header-bg: null,
	header-border-color: lighten(saturate(adjust-hue($secondary, 3), 6.13), 46.08),
	footer-bg: null,
	footer-border-color: lighten(saturate(adjust-hue($secondary, 3), 6.13), 46.08)
), $panel-secondary);

$popover-border-color: transparent !default;
$popover-border-radius: $border-radius !default; // 4px
$popover-box-shadow: 0 1px 15px -2px rgba(0, 0, 0, 0.2) !default;
$popover-max-width: 14.5rem !default; // 232px
$popover-inline-scroller-max-height: 14.875rem !default; // 238px

$popover-arrow-outer-color: transparent !default;
$popover-arrow-height: 0.3rem !default;
$popover-arrow-offset: 0.625rem !default; // 10px
$popover-arrow-width: $popover-arrow-height * 2 !default;

$popover-inner-padding: 0 !default;

$popover-header-bg: #FFF !default;
$popover-header-border-color: lighten(saturate(adjust-hue($secondary, 3), 6.13), 46.08) !default;
$popover-header-color: $body-color !default;
$popover-header-font-size: 0.875rem !default; // 14px
$popover-header-margin-x: 1rem !default; // 16px
$popover-header-margin-y: 0 !default;
$popover-header-padding-x: 0 !default;
$popover-header-padding-y: 0.75rem !default; // 12px

$popover-body-color: $secondary !default;
$popover-body-padding-x: 1rem !default; // 16px
$popover-body-padding-y: 0.75rem !default; // 12px
$progress-border-radius: 100px !default;
$progress-box-shadow: none !default;
$progress-font-size: 0.5625rem !default;
$progress-height: 0.5rem !default;

// Progress Sizes

$progress-border-radius-lg: 100px !default;

// Progress Group

$progress-group-subtitle: () !default;
$progress-group-subtitle: map-merge((
	font-size: 0.75rem,
	font-weight: $font-weight-normal
), $progress-group-subtitle);

$progress-group-addon-font-size: 0.875rem !default;
$progress-group-addon-font-weight: $font-weight-semi-bold !default;
$quick-action-font-size: 1rem !default; // 16px

$quick-action-item-disabled-opacity: $btn-disabled-opacity !default;
$sheet-border-color: lighten(saturate(adjust-hue($secondary, 3), 6.13), 46.08) !default;

$sheet-padding-bottom-mobile: null !default;
$sheet-padding-left-mobile: 1rem !default; // 16px
$sheet-padding-right-mobile: 1rem !default; // 16px
$sheet-padding-top-mobile: 1rem !default; // 16px

$sheet-header-margin-bottom-mobile: 2rem !default; // 32px

$sheet-section-margin-bottom-mobile: 2rem !default; // 32px

$sheet-panel-group-margin-bottom-mobile: 1rem !default; // 16px

$sheet-footer-margin-bottom-mobile: 1rem !default; // 16px
$sheet-footer-margin-top-mobile: 1rem !default; // 16px

// Sheet Title

$sheet-title-font-size: 1.25rem !default; // 20px
$sheet-title-font-weight: $font-weight-bold !default;
$sheet-title-margin-bottom-mobile: 1rem !default; // 16px

// Sheet Subtitle

$sheet-subtitle-color: $body-color !default;
$sheet-subtitle-border-color: lighten(saturate(adjust-hue($secondary, -3), 5.39), 23.92) !default;
$sheet-subtitle-font-size: 0.875rem !default // 14px
$sheet-subtitle-padding-y: 0.5rem !default; // 8px
$sheet-subtitle-margin-bottom-mobile: 1rem !default; // 16px

// Sheet Tertiary Title

$sheet-tertiary-title-margin-bottom-mobile: 0.5rem !default; // 8px

$sheet-text-color: $secondary !default;

$sheet-text-margin-bottom-mobile: 1rem !default; // 16px
// Sidebar Header Title

$sidebar-header-component-title: () !default;
$sidebar-header-component-title: map-merge((
	font-size: 1.25rem // 20px,
), $sidebar-header-component-title);

// Sidebar Header Subtitle

$sidebar-header-component-subtitle: () !default;
$sidebar-header-component-subtitle: map-merge((
	font-size: 0.75rem, // 12px
	font-weight: $font-weight-normal
), $sidebar-header-component-subtitle);

// Sidebar DT

$sidebar-dt: () !default;
$sidebar-dt: map-merge((
	font-size: 0.75rem // 12px
), $sidebar-dt);

// Sidebar DD

$sidebar-dd: () !default;
$sidebar-dd: map-merge((
	font-size: 0.875rem // 14px
), $sidebar-dd);

// Sidebar List Group

$sidebar-list-group-border-color: lighten(saturate(adjust-hue($secondary, -2), 5.48), 37.06) !default;

// Sidebar Light

$sidebar-light: () !default;
$sidebar-light: map-merge((
	bg: #FFF,
	border-left-width: 0,
	box-shadow: -0.25rem 0 0.5rem -0.25rem rgba(0, 0, 0, 0.1),
	panel-bg: $light,
	dt: (
		color: $secondary
	),
	dd: (
		clay-link: (
			color: $body-color,
			hover-color: $clay-unset
		)
	),
	sidebar-list-group-title: (
		font-size: $clay-unset
	)
), $sidebar-light);

$sidebar-light-navigation-bar: () !default;
$sidebar-light-navigation-bar: map-merge((
	bg: #FFF,
	border-color: lighten(saturate(adjust-hue($secondary, -2), 5.48), 37.06)
), $sidebar-light-navigation-bar);
$table-bg: #FFF !default;
$table-accent-bg: lighten(saturate(adjust-hue($secondary, -27), 6.13), 51.57) !default;
$table-hover-bg: lighten($component-active-bg, 44.90) !default;
$table-border-color: lighten(saturate(adjust-hue($secondary, 3), 6.13), 46.08) !default;
$table-font-size: 0.875rem !default;

$table-disabled-color: #D9D9DD !default;

$table-head-bg: #FFF !default;
$table-head-border-bottom-width: 1px !default;
$table-head-color: $secondary !default;
$table-head-font-weight: $font-weight-semi-bold !default;

$table-head-link: () !default;
$table-head-link: map-merge((
	color: $secondary,
	hover-color: $body-color
), $table-head-link);

$table-divider-bg: lighten(saturate(adjust-hue($secondary, -27), 6.13), 51.57) !default;
$table-divider-color: $secondary !default;
$table-divider-font-size: 0.75rem !default; // 12px
$table-divider-font-weight: $font-weight-semi-bold !default;
$table-divider-padding: 0.4375rem 0.75rem !default;
$table-divider-text-transform: uppercase !default;

$table-quick-action-menu-accent-bg: $table-accent-bg !default;
$table-quick-action-menu-accent-active-bg: $table-hover-bg !default;
$table-quick-action-menu-active-bg: lighten(saturate(adjust-hue($secondary, -12), 8.51), 49.61) !default;
$table-quick-action-menu-hover-bg: $table-hover-bg !default;

// Table Title

$table-title: () !default;
$table-title: map-merge((
	color: $body-color,
	font-size: 0.875rem // 14px
), $table-title);

// Table Action Link

$table-action-link: () !default;
$table-action-link: map-merge((
	color: $secondary,
	font-size: 1rem, // 16px
	hover-bg: rgba(0, 0, 0, 0.02),
	hover-color: $body-color,
	active-bg: rgba(0, 0, 0, 0.04)
), $table-action-link);

// Table Link

$table-link: () !default;
$table-link: map-merge((
	color: $body-color,
	hover-color: $body-color
), $table-link);

// Table List

$table-list-accent-bg: lighten(saturate(adjust-hue($secondary, -27), 6.13), 51.57) !default;
$table-list-hover-bg: $table-hover-bg !default;
$table-list-active-bg: $table-list-hover-bg !default;
$table-list-border-color: lighten(saturate(adjust-hue($secondary, 3), 6.13), 46.08) !default;
$table-list-color: $body-color !default;

$table-list-disabled-color: #D9D9DD !default;

$table-list-head-bg: #FFF !default;

$table-list-link-color: $secondary !default;

$table-list-divider-padding-x: 0.75rem !default; // 12px
$table-list-divider-padding-y: 0.4375rem !default; // 7px

// Table List Title

$table-list-title: () !default;
$table-list-title: map-merge((
	color: $body-color,
	font-size: 0.875rem, // 14px
	line-height: 1.45
), $table-list-title);

$table-list-title-link: () !default;
$table-list-title-link: map-merge((
	color: $body-color,
	hover-color: $body-color
), $table-list-title-link);

// Table List Link

$table-list-link: () !default;
$table-list-link: map-merge((
	color: $body-color,
	hover-color: $body-color
), $table-list-link);

// Table List Action Link

$table-list-action-link: () !default;
$table-list-action-link: map-merge((
	color: $secondary,
	hover-bg: rgba(0, 0, 0, 0.02),
	hover-color: $body-color
), $table-list-action-link);
$component-tbar: () !default;
$component-tbar: map-merge((
	border-color: lighten(saturate(adjust-hue($secondary, 3), 6.13), 46.08),
	color: $secondary
), $component-tbar);

// Subnav Tbar Primary

$subnav-tbar-primary-component-link: () !default;
$subnav-tbar-primary-component-link: map-merge((
	disabled-opacity: 0.65
), $subnav-tbar-primary-component-link);

$subnav-tbar-primary-component-label-close: () !default;
$subnav-tbar-primary-component-label-close: map-merge((
	disabled-opacity: 0.65
), $subnav-tbar-primary-component-label-close);

// Subnav Tbar Primary Disabled

$subnav-tbar-primary-disabled-component-label: () !default;
$subnav-tbar-primary-disabled-component-label: map-merge((
	border-color: #8E94AA
), $subnav-tbar-primary-disabled-component-label);

$subnav-tbar-primary-disabled: () !default;
$subnav-tbar-primary-disabled: map-merge((
	color: #8E94AA
), $subnav-tbar-primary-disabled);

// Subnav Tbar Light

$subnav-tbar-light: () !default;
$subnav-tbar-light: map-merge((
	bg-color: #FFF,
	color: $secondary
), $subnav-tbar-light);
$timeline-border-color: $dark !default;
$timeline-icon-border-color: $secondary !default;
$timeline-increment-label-color: $secondary !default;
// must all be same units--start
$toggle-switch-bar-padding: 4px !default; // space between button and bar, can be negative value
$toggle-switch-bar-padding-mobile: 4px !default;

$toggle-switch-button-width: 24px !default; // 24px
$toggle-switch-button-width-mobile: 16px !default; // 16px

$toggle-switch-bar-height: ($toggle-switch-bar-padding * 2) + $toggle-switch-button-width !default;
$toggle-switch-bar-height-mobile: ($toggle-switch-bar-padding-mobile * 2) + $toggle-switch-button-width-mobile !default;

$toggle-switch-bar-width: 60px !default; // width of switch bar
$toggle-switch-bar-width-mobile: 44px !default; // width of switch bar
// must all be same units--end

$toggle-switch-bar-bg: lighten(saturate(adjust-hue($secondary, -3), 5.39), 23.92) !default;
$toggle-switch-bar-border-color: $toggle-switch-bar-bg !default;
$toggle-switch-bar-border-radius: 20px !default;
$toggle-switch-bar-border-width: 1px !default;
$toggle-switch-bar-font-size: 0.75rem !default; // 12px
$toggle-switch-bar-font-size-mobile: 0.625rem !default; // 10px
$toggle-switch-bar-icon-color: #FFF !default;
$toggle-switch-bar-focus-box-shadow: $custom-control-indicator-focus-box-shadow !default;

$toggle-switch-button-bg: #FFF !default;
$toggle-switch-button-border-color: $toggle-switch-button-bg !default;
$toggle-switch-button-border-radius: 50% !default;
$toggle-switch-button-border-width: 1px !default;
$toggle-switch-button-font-size: $toggle-switch-bar-font-size !default; // 12px
$toggle-switch-button-font-size-mobile: $toggle-switch-bar-font-size-mobile !default; // 10px
$toggle-switch-button-icon-color: $body-color !default;

// Toggle Switch On
$toggle-switch-bar-on-bg: $component-active-bg !default;
$toggle-switch-bar-on-border-color: $toggle-switch-bar-on-bg !default;
$toggle-switch-bar-on-icon-color: #FFF !default;

$toggle-switch-button-on-bg: #FFF !default;
$toggle-switch-button-on-border-color: #FFF !default;
$toggle-switch-button-on-border-radius: $toggle-switch-button-border-radius !default;
$toggle-switch-button-on-icon-color: $body-color !default;
$tooltip-bg: $body-color !default;
$tooltip-box-shadow: 0 1px 4px 0px rgba(0, 0, 0, 0.4) !default;
$tooltip-font-size: 0.875rem !default; // 14px
$tooltip-max-width: 230px !default;
$tooltip-opacity: 1 !default;
$tooltip-padding-x: 0.75rem !default; // 12px
$tooltip-padding-y: 0.75rem !default; // 12px

$tooltip-arrow-offset: 0.5rem !default; // 8px
$b-font-weight: $font-weight-semi-bold !default;

$strong-font-weight: $font-weight-semi-bold !default;
$bg-checkered-fg: lighten(saturate(adjust-hue($secondary, 3), 6.13), 46.08) !default;

// Close

$close: () !default;
$close: map-merge((
	color: $body-color,
	opacity: 1,
	hover-color: $body-color,
	hover-opacity: 1,
	focus-opacity: 1,
	disabled-color: $secondary,
	disabled-opacity: $btn-disabled-opacity
), $close);

$page-header-bg: #FFF !default;
// This file is used to overwrite default Bootstrap 4 variables for the Clay
// Base Theme and should only be limited to the most destructive variables.

$enable-caret: false !default;

$input-border-width: 0.0625rem !default; // 1px
$input-height: 2.375rem !default; // 38px
$input-height-lg: 3rem !default; // 48px
$input-height-sm: 1.9375rem !default; // 31px

$form-check-inline-input-margin-x: !default;

$table-accent-bg: #F2F2F2 !default;
$table-hover-bg: #ECECEC !default;

$table-head-bg: #FFF !default;
// Bootstrap functions
//
// Utility mixins and functions for evalutating source code across our variables, maps, and mixins.

// Ascending
// Used to evaluate Sass maps like our grid breakpoints.
@mixin _assert-ascending($map, $map-name) {
  $prev-key: null;
  $prev-num: null;
  @each $key, $num in $map {
    @if $prev-num == null {
      // Do nothing
    } @else if not comparable($prev-num, $num) {
      @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    } @else if $prev-num >= $num {
      @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    }
    $prev-key: $key;
    $prev-num: $num;
  }
}

// Starts at zero
// Another grid mixin that ensures the min-width of the lowest breakpoint starts at 0.
@mixin _assert-starts-at-zero($map) {
  $values: map-values($map);
  $first-value: nth($values, 1);
  @if $first-value != 0 {
    @warn "First breakpoint in `$grid-breakpoints` must start at 0, but starts at #{$first-value}.";
  }
}

// Replace `$search` with `$replace` in `$string`
// Used on our SVG icon backgrounds for custom forms.
//
// @author Hugo Giraudel
// @param {String} $string - Initial string
// @param {String} $search - Substring to replace
// @param {String} $replace ('') - New value
// @return {String} - Updated string
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

// Color contrast
@function color-yiq($color) {
  $r: red($color);
  $g: green($color);
  $b: blue($color);

  $yiq: (($r * 299) + ($g * 587) + ($b * 114)) / 1000;

  @if ($yiq >= $yiq-contrasted-threshold) {
    @return $yiq-text-dark;
  } @else {
    @return $yiq-text-light;
  }
}

// Retrieve color Sass maps
@function color($key: "blue") {
  @return map-get($colors, $key);
}

@function theme-color($key: "primary") {
  @return map-get($theme-colors, $key);
}

@function gray($key: "100") {
  @return map-get($grays, $key);
}

// Request a theme color level
@function theme-color-level($color-name: "primary", $level: 0) {
  $color: theme-color($color-name);
  $color-base: if($level > 0, #000, #fff);
  $level: abs($level);

  @return mix($color-base, $color, $level * $theme-color-interval);
}

// Variables
//
// Variables should follow the `$component-state-property-size` formula for
// consistent naming. Ex: $nav-link-disabled-color and $modal-content-box-shadow-xs.


//
// Color system
//

// stylelint-disable
$white:    #fff !default;
$gray-100: #f8f9fa !default;
$gray-200: #e9ecef !default;
$gray-300: #dee2e6 !default;
$gray-400: #ced4da !default;
$gray-500: #adb5bd !default;
$gray-600: #6c757d !default;
$gray-700: #495057 !default;
$gray-800: #343a40 !default;
$gray-900: #212529 !default;
$black:    #000 !default;

$grays: () !default;
$grays: map-merge((
  "100": $gray-100,
  "200": $gray-200,
  "300": $gray-300,
  "400": $gray-400,
  "500": $gray-500,
  "600": $gray-600,
  "700": $gray-700,
  "800": $gray-800,
  "900": $gray-900
), $grays);

$blue:    #007bff !default;
$indigo:  #6610f2 !default;
$purple:  #6f42c1 !default;
$pink:    #e83e8c !default;
$red:     #dc3545 !default;
$orange:  #fd7e14 !default;
$yellow:  #ffc107 !default;
$green:   #28a745 !default;
$teal:    #20c997 !default;
$cyan:    #17a2b8 !default;

$colors: () !default;
$colors: map-merge((
  "blue":       $blue,
  "indigo":     $indigo,
  "purple":     $purple,
  "pink":       $pink,
  "red":        $red,
  "orange":     $orange,
  "yellow":     $yellow,
  "green":      $green,
  "teal":       $teal,
  "cyan":       $cyan,
  "white":      $white,
  "gray":       $gray-600,
  "gray-dark":  $gray-800
), $colors);

$primary:       $blue !default;
$secondary:     $gray-600 !default;
$success:       $green !default;
$info:          $cyan !default;
$warning:       $yellow !default;
$danger:        $red !default;
$light:         $gray-100 !default;
$dark:          $gray-800 !default;

$theme-colors: () !default;
$theme-colors: map-merge((
  "primary":    $primary,
  "secondary":  $secondary,
  "success":    $success,
  "info":       $info,
  "warning":    $warning,
  "danger":     $danger,
  "light":      $light,
  "dark":       $dark
), $theme-colors);
// stylelint-enable

// Set a specific jump point for requesting color jumps
$theme-color-interval:      8% !default;

// The yiq lightness value that determines when the lightness of color changes from "dark" to "light". Acceptable values are between 0 and 255.
$yiq-contrasted-threshold: 150 !default;

// Customize the light and dark text colors for use in our YIQ color contrast function.
$yiq-text-dark: $gray-900 !default;
$yiq-text-light: $white !default;

// Options
//
// Quickly modify global styling by enabling or disabling optional features.

$enable-caret:              true !default;
$enable-rounded:            true !default;
$enable-shadows:            false !default;
$enable-gradients:          false !default;
$enable-transitions:        true !default;
$enable-hover-media-query:  false !default; // Deprecated, no longer affects any compiled CSS
$enable-grid-classes:       true !default;
$enable-print-styles:       true !default;


// Spacing
//
// Control the default styling of most Bootstrap elements by modifying these
// variables. Mostly focused on spacing.
// You can add more entries to the $spacers map, should you need more variation.

// stylelint-disable
$spacer: 1rem !default;
$spacers: () !default;
$spacers: map-merge((
  0: 0,
  1: ($spacer * .25),
  2: ($spacer * .5),
  3: $spacer,
  4: ($spacer * 1.5),
  5: ($spacer * 3)
), $spacers);

// This variable affects the `.h-*` and `.w-*` classes.
$sizes: () !default;
$sizes: map-merge((
  25: 25%,
  50: 50%,
  75: 75%,
  100: 100%
), $sizes);
// stylelint-enable

// Body
//
// Settings for the `<body>` element.

$body-bg:                   $white !default;
$body-color:                $gray-900 !default;

// Links
//
// Style anchor elements.

$link-color:                theme-color("primary") !default;
$link-decoration:           none !default;
$link-hover-color:          darken($link-color, 15%) !default;
$link-hover-decoration:     underline !default;

// Paragraphs
//
// Style p element.

$paragraph-margin-bottom:   1rem !default;


// Grid breakpoints
//
// Define the minimum dimensions at which your layout will change,
// adapting to different screen sizes, for use in media queries.

$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
) !default;

@include _assert-ascending($grid-breakpoints, "$grid-breakpoints");
@include _assert-starts-at-zero($grid-breakpoints);


// Grid containers
//
// Define the maximum width of `.container` for different screen sizes.

$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px
) !default;

@include _assert-ascending($container-max-widths, "$container-max-widths");


// Grid columns
//
// Set the number of columns and specify the width of the gutters.

$grid-columns:                12 !default;
$grid-gutter-width:           30px !default;

// Components
//
// Define common padding and border radius sizes and more.

$line-height-lg:              1.5 !default;
$line-height-sm:              1.5 !default;

$border-width:                1px !default;
$border-color:                $gray-300 !default;

$border-radius:               .25rem !default;
$border-radius-lg:            .3rem !default;
$border-radius-sm:            .2rem !default;

$component-active-color:      $white !default;
$component-active-bg:         theme-color("primary") !default;

$caret-width:                 .3em !default;

$transition-base:             all .2s ease-in-out !default;
$transition-fade:             opacity .15s linear !default;
$transition-collapse:         height .35s ease !default;


// Fonts
//
// Font, line-height, and color for body text, headings, and more.

// stylelint-disable value-keyword-case
$font-family-sans-serif:      -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol" !default;
$font-family-monospace:       SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace !default;
$font-family-base:            $font-family-sans-serif !default;
// stylelint-enable value-keyword-case

$font-size-base:              1rem !default; // Assumes the browser default, typically `16px`
$font-size-lg:                ($font-size-base * 1.25) !default;
$font-size-sm:                ($font-size-base * .875) !default;

$font-weight-light:           300 !default;
$font-weight-normal:          400 !default;
$font-weight-bold:            700 !default;

$font-weight-base:            $font-weight-normal !default;
$line-height-base:            1.5 !default;

$h1-font-size:                $font-size-base * 2.5 !default;
$h2-font-size:                $font-size-base * 2 !default;
$h3-font-size:                $font-size-base * 1.75 !default;
$h4-font-size:                $font-size-base * 1.5 !default;
$h5-font-size:                $font-size-base * 1.25 !default;
$h6-font-size:                $font-size-base !default;

$headings-margin-bottom:      ($spacer / 2) !default;
$headings-font-family:        inherit !default;
$headings-font-weight:        500 !default;
$headings-line-height:        1.2 !default;
$headings-color:              inherit !default;

$display1-size:               6rem !default;
$display2-size:               5.5rem !default;
$display3-size:               4.5rem !default;
$display4-size:               3.5rem !default;

$display1-weight:             300 !default;
$display2-weight:             300 !default;
$display3-weight:             300 !default;
$display4-weight:             300 !default;
$display-line-height:         $headings-line-height !default;

$lead-font-size:              ($font-size-base * 1.25) !default;
$lead-font-weight:            300 !default;

$small-font-size:             80% !default;

$text-muted:                  $gray-600 !default;

$blockquote-small-color:      $gray-600 !default;
$blockquote-font-size:        ($font-size-base * 1.25) !default;

$hr-border-color:             rgba($black, .1) !default;
$hr-border-width:             $border-width !default;

$mark-padding:                .2em !default;

$dt-font-weight:              $font-weight-bold !default;

$kbd-box-shadow:              inset 0 -.1rem 0 rgba($black, .25) !default;
$nested-kbd-font-weight:      $font-weight-bold !default;

$list-inline-padding:         .5rem !default;

$mark-bg:                     #fcf8e3 !default;

$hr-margin-y:                 $spacer !default;


// Tables
//
// Customizes the `.table` component with basic values, each used across all table variations.

$table-cell-padding:          .75rem !default;
$table-cell-padding-sm:       .3rem !default;

$table-bg:                    transparent !default;
$table-accent-bg:             rgba($black, .05) !default;
$table-hover-bg:              rgba($black, .075) !default;
$table-active-bg:             $table-hover-bg !default;

$table-border-width:          $border-width !default;
$table-border-color:          $gray-300 !default;

$table-head-bg:               $gray-200 !default;
$table-head-color:            $gray-700 !default;

$table-dark-bg:               $gray-900 !default;
$table-dark-accent-bg:        rgba($white, .05) !default;
$table-dark-hover-bg:         rgba($white, .075) !default;
$table-dark-border-color:     lighten($gray-900, 7.5%) !default;
$table-dark-color:            $body-bg !default;


// Buttons + Forms
//
// Shared variables that are reassigned to `$input-` and `$btn-` specific variables.

$input-btn-padding-y:         .375rem !default;
$input-btn-padding-x:         .75rem !default;
$input-btn-line-height:       $line-height-base !default;

$input-btn-focus-width:       .2rem !default;
$input-btn-focus-color:       rgba($component-active-bg, .25) !default;
$input-btn-focus-box-shadow:  0 0 0 $input-btn-focus-width $input-btn-focus-color !default;

$input-btn-padding-y-sm:      .25rem !default;
$input-btn-padding-x-sm:      .5rem !default;
$input-btn-line-height-sm:    $line-height-sm !default;

$input-btn-padding-y-lg:      .5rem !default;
$input-btn-padding-x-lg:      1rem !default;
$input-btn-line-height-lg:    $line-height-lg !default;

$input-btn-border-width:      $border-width !default;


// Buttons
//
// For each of Bootstrap's buttons, define text, background, and border color.

$btn-padding-y:               $input-btn-padding-y !default;
$btn-padding-x:               $input-btn-padding-x !default;
$btn-line-height:             $input-btn-line-height !default;

$btn-padding-y-sm:            $input-btn-padding-y-sm !default;
$btn-padding-x-sm:            $input-btn-padding-x-sm !default;
$btn-line-height-sm:          $input-btn-line-height-sm !default;

$btn-padding-y-lg:            $input-btn-padding-y-lg !default;
$btn-padding-x-lg:            $input-btn-padding-x-lg !default;
$btn-line-height-lg:          $input-btn-line-height-lg !default;

$btn-border-width:            $input-btn-border-width !default;

$btn-font-weight:             $font-weight-normal !default;
$btn-box-shadow:              inset 0 1px 0 rgba($white, .15), 0 1px 1px rgba($black, .075) !default;
$btn-focus-width:             $input-btn-focus-width !default;
$btn-focus-box-shadow:        $input-btn-focus-box-shadow !default;
$btn-disabled-opacity:        .65 !default;
$btn-active-box-shadow:       inset 0 3px 5px rgba($black, .125) !default;

$btn-link-disabled-color:     $gray-600 !default;

$btn-block-spacing-y:         .5rem !default;

// Allows for customizing button radius independently from global border radius
$btn-border-radius:           $border-radius !default;
$btn-border-radius-lg:        $border-radius-lg !default;
$btn-border-radius-sm:        $border-radius-sm !default;

$btn-transition:              color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;


// Forms

$input-padding-y:                       $input-btn-padding-y !default;
$input-padding-x:                       $input-btn-padding-x !default;
$input-line-height:                     $input-btn-line-height !default;

$input-padding-y-sm:                    $input-btn-padding-y-sm !default;
$input-padding-x-sm:                    $input-btn-padding-x-sm !default;
$input-line-height-sm:                  $input-btn-line-height-sm !default;

$input-padding-y-lg:                    $input-btn-padding-y-lg !default;
$input-padding-x-lg:                    $input-btn-padding-x-lg !default;
$input-line-height-lg:                  $input-btn-line-height-lg !default;

$input-bg:                              $white !default;
$input-disabled-bg:                     $gray-200 !default;

$input-color:                           $gray-700 !default;
$input-border-color:                    $gray-400 !default;
$input-border-width:                    $input-btn-border-width !default;
$input-box-shadow:                      inset 0 1px 1px rgba($black, .075) !default;

$input-border-radius:                   $border-radius !default;
$input-border-radius-lg:                $border-radius-lg !default;
$input-border-radius-sm:                $border-radius-sm !default;

$input-focus-bg:                        $input-bg !default;
$input-focus-border-color:              lighten($component-active-bg, 25%) !default;
$input-focus-color:                     $input-color !default;
$input-focus-width:                     $input-btn-focus-width !default;
$input-focus-box-shadow:                $input-btn-focus-box-shadow !default;

$input-placeholder-color:               $gray-600 !default;

$input-height-border:                   $input-border-width * 2 !default;

$input-height-inner:                    ($font-size-base * $input-btn-line-height) + ($input-btn-padding-y * 2) !default;
$input-height:                          calc(#{$input-height-inner} + #{$input-height-border}) !default;

$input-height-inner-sm:                 ($font-size-sm * $input-btn-line-height-sm) + ($input-btn-padding-y-sm * 2) !default;
$input-height-sm:                       calc(#{$input-height-inner-sm} + #{$input-height-border}) !default;

$input-height-inner-lg:                 ($font-size-lg * $input-btn-line-height-lg) + ($input-btn-padding-y-lg * 2) !default;
$input-height-lg:                       calc(#{$input-height-inner-lg} + #{$input-height-border}) !default;

$input-transition:                      border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;

$form-text-margin-top:                  .25rem !default;

$form-check-input-gutter:               1.25rem !default;
$form-check-input-margin-y:             .3rem !default;
$form-check-input-margin-x:             .25rem !default;

$form-check-inline-margin-x:            .75rem !default;
$form-check-inline-input-margin-x:      .3125rem !default;

$form-group-margin-bottom:              1rem !default;

$input-group-addon-color:               $input-color !default;
$input-group-addon-bg:                  $gray-200 !default;
$input-group-addon-border-color:        $input-border-color !default;

$custom-control-gutter:                 1.5rem !default;
$custom-control-spacer-x:               1rem !default;

$custom-control-indicator-size:         1rem !default;
$custom-control-indicator-bg:           $gray-300 !default;
$custom-control-indicator-bg-size:      50% 50% !default;
$custom-control-indicator-box-shadow:   inset 0 .25rem .25rem rgba($black, .1) !default;

$custom-control-indicator-disabled-bg:          $gray-200 !default;
$custom-control-label-disabled-color:     $gray-600 !default;

$custom-control-indicator-checked-color:        $component-active-color !default;
$custom-control-indicator-checked-bg:           $component-active-bg !default;
$custom-control-indicator-checked-disabled-bg:  rgba(theme-color("primary"), .5) !default;
$custom-control-indicator-checked-box-shadow:   none !default;

$custom-control-indicator-focus-box-shadow:     0 0 0 1px $body-bg, $input-btn-focus-box-shadow !default;

$custom-control-indicator-active-color:         $component-active-color !default;
$custom-control-indicator-active-bg:            lighten($component-active-bg, 35%) !default;
$custom-control-indicator-active-box-shadow:    none !default;

$custom-checkbox-indicator-border-radius:       $border-radius !default;
$custom-checkbox-indicator-icon-checked:        str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='#{$custom-control-indicator-checked-color}' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E"), "#", "%23") !default;

$custom-checkbox-indicator-indeterminate-bg:    $component-active-bg !default;
$custom-checkbox-indicator-indeterminate-color: $custom-control-indicator-checked-color !default;
$custom-checkbox-indicator-icon-indeterminate:  str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3E%3Cpath stroke='#{$custom-checkbox-indicator-indeterminate-color}' d='M0 2h4'/%3E%3C/svg%3E"), "#", "%23") !default;
$custom-checkbox-indicator-indeterminate-box-shadow: none !default;

$custom-radio-indicator-border-radius:          50% !default;
$custom-radio-indicator-icon-checked:           str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='#{$custom-control-indicator-checked-color}'/%3E%3C/svg%3E"), "#", "%23") !default;

$custom-select-padding-y:           .375rem !default;
$custom-select-padding-x:          .75rem !default;
$custom-select-height:              $input-height !default;
$custom-select-indicator-padding:   1rem !default; // Extra padding to account for the presence of the background-image based indicator
$custom-select-line-height:         $input-btn-line-height !default;
$custom-select-color:               $input-color !default;
$custom-select-disabled-color:      $gray-600 !default;
$custom-select-bg:                  $white !default;
$custom-select-disabled-bg:         $gray-200 !default;
$custom-select-bg-size:             8px 10px !default; // In pixels because image dimensions
$custom-select-indicator-color:     $gray-800 !default;
$custom-select-indicator:           str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='#{$custom-select-indicator-color}' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E"), "#", "%23") !default;
$custom-select-border-width:        $input-btn-border-width !default;
$custom-select-border-color:        $input-border-color !default;
$custom-select-border-radius:       $border-radius !default;

$custom-select-focus-border-color:  $input-focus-border-color !default;
$custom-select-focus-box-shadow:    inset 0 1px 2px rgba($black, .075), 0 0 5px rgba($custom-select-focus-border-color, .5) !default;

$custom-select-font-size-sm:        75% !default;
$custom-select-height-sm:           $input-height-sm !default;

$custom-select-font-size-lg:        125% !default;
$custom-select-height-lg:           $input-height-lg !default;

$custom-file-height:                $input-height !default;
$custom-file-focus-border-color:    $input-focus-border-color !default;
$custom-file-focus-box-shadow:      $input-btn-focus-box-shadow !default;

$custom-file-padding-y:             $input-btn-padding-y !default;
$custom-file-padding-x:             $input-btn-padding-x !default;
$custom-file-line-height:           $input-btn-line-height !default;
$custom-file-color:                 $input-color !default;
$custom-file-bg:                    $input-bg !default;
$custom-file-border-width:          $input-btn-border-width !default;
$custom-file-border-color:          $input-border-color !default;
$custom-file-border-radius:         $input-border-radius !default;
$custom-file-box-shadow:            $input-box-shadow !default;
$custom-file-button-color:          $custom-file-color !default;
$custom-file-button-bg:             $input-group-addon-bg !default;
$custom-file-text: (
  en: "Browse"
) !default;


// Form validation
$form-feedback-margin-top:          $form-text-margin-top !default;
$form-feedback-font-size:           $small-font-size !default;
$form-feedback-valid-color:         theme-color("success") !default;
$form-feedback-invalid-color:       theme-color("danger") !default;


// Dropdowns
//
// Dropdown menu container and contents.

$dropdown-min-width:                10rem !default;
$dropdown-padding-y:                .5rem !default;
$dropdown-spacer:                   .125rem !default;
$dropdown-bg:                       $white !default;
$dropdown-border-color:             rgba($black, .15) !default;
$dropdown-border-radius:            $border-radius !default;
$dropdown-border-width:             $border-width !default;
$dropdown-divider-bg:               $gray-200 !default;
$dropdown-box-shadow:               0 .5rem 1rem rgba($black, .175) !default;

$dropdown-link-color:               $gray-900 !default;
$dropdown-link-hover-color:         darken($gray-900, 5%) !default;
$dropdown-link-hover-bg:            $gray-100 !default;

$dropdown-link-active-color:        $component-active-color !default;
$dropdown-link-active-bg:           $component-active-bg !default;

$dropdown-link-disabled-color:      $gray-600 !default;

$dropdown-item-padding-y:           .25rem !default;
$dropdown-item-padding-x:           1.5rem !default;

$dropdown-header-color:             $gray-600 !default;


// Z-index master list
//
// Warning: Avoid customizing these values. They're used for a bird's eye view
// of components dependent on the z-axis and are designed to all work together.

$zindex-dropdown:                   1000 !default;
$zindex-sticky:                     1020 !default;
$zindex-fixed:                      1030 !default;
$zindex-modal-backdrop:             1040 !default;
$zindex-modal:                      1050 !default;
$zindex-popover:                    1060 !default;
$zindex-tooltip:                    1070 !default;

// Navs

$nav-link-padding-y:                .5rem !default;
$nav-link-padding-x:                1rem !default;
$nav-link-disabled-color:           $gray-600 !default;

$nav-tabs-border-color:             $gray-300 !default;
$nav-tabs-border-width:             $border-width !default;
$nav-tabs-border-radius:            $border-radius !default;
$nav-tabs-link-hover-border-color:  $gray-200 $gray-200 $nav-tabs-border-color !default;
$nav-tabs-link-active-color:        $gray-700 !default;
$nav-tabs-link-active-bg:           $body-bg !default;
$nav-tabs-link-active-border-color: $gray-300 $gray-300 $nav-tabs-link-active-bg !default;

$nav-pills-border-radius:           $border-radius !default;
$nav-pills-link-active-color:       $component-active-color !default;
$nav-pills-link-active-bg:          $component-active-bg !default;

// Navbar

$navbar-padding-y:                  ($spacer / 2) !default;
$navbar-padding-x:                  $spacer !default;

$navbar-nav-link-padding-x:         .5rem !default;

$navbar-brand-font-size:            $font-size-lg !default;
// Compute the navbar-brand padding-y so the navbar-brand will have the same height as navbar-text and nav-link
$nav-link-height:                   ($font-size-base * $line-height-base + $nav-link-padding-y * 2) !default;
$navbar-brand-height:               $navbar-brand-font-size * $line-height-base !default;
$navbar-brand-padding-y:            ($nav-link-height - $navbar-brand-height) / 2 !default;

$navbar-toggler-padding-y:          .25rem !default;
$navbar-toggler-padding-x:          .75rem !default;
$navbar-toggler-font-size:          $font-size-lg !default;
$navbar-toggler-border-radius:      $btn-border-radius !default;

$navbar-dark-color:                 rgba($white, .5) !default;
$navbar-dark-hover-color:           rgba($white, .75) !default;
$navbar-dark-active-color:          $white !default;
$navbar-dark-disabled-color:        rgba($white, .25) !default;
$navbar-dark-toggler-icon-bg:       str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='#{$navbar-dark-color}' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E"), "#", "%23") !default;
$navbar-dark-toggler-border-color:  rgba($white, .1) !default;

$navbar-light-color:                rgba($black, .5) !default;
$navbar-light-hover-color:          rgba($black, .7) !default;
$navbar-light-active-color:         rgba($black, .9) !default;
$navbar-light-disabled-color:       rgba($black, .3) !default;
$navbar-light-toggler-icon-bg:      str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='#{$navbar-light-color}' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E"), "#", "%23") !default;
$navbar-light-toggler-border-color: rgba($black, .1) !default;

// Pagination

$pagination-padding-y:              .5rem !default;
$pagination-padding-x:              .75rem !default;
$pagination-padding-y-sm:           .25rem !default;
$pagination-padding-x-sm:           .5rem !default;
$pagination-padding-y-lg:           .75rem !default;
$pagination-padding-x-lg:           1.5rem !default;
$pagination-line-height:            1.25 !default;

$pagination-color:                  $link-color !default;
$pagination-bg:                     $white !default;
$pagination-border-width:           $border-width !default;
$pagination-border-color:           $gray-300 !default;

$pagination-focus-box-shadow:       $input-btn-focus-box-shadow !default;

$pagination-hover-color:            $link-hover-color !default;
$pagination-hover-bg:               $gray-200 !default;
$pagination-hover-border-color:     $gray-300 !default;

$pagination-active-color:           $component-active-color !default;
$pagination-active-bg:              $component-active-bg !default;
$pagination-active-border-color:    $pagination-active-bg !default;

$pagination-disabled-color:         $gray-600 !default;
$pagination-disabled-bg:            $white !default;
$pagination-disabled-border-color:  $gray-300 !default;


// Jumbotron

$jumbotron-padding:                 2rem !default;
$jumbotron-bg:                      $gray-200 !default;


// Cards

$card-spacer-y:                     .75rem !default;
$card-spacer-x:                     1.25rem !default;
$card-border-width:                 $border-width !default;
$card-border-radius:                $border-radius !default;
$card-border-color:                 rgba($black, .125) !default;
$card-inner-border-radius:          calc(#{$card-border-radius} - #{$card-border-width}) !default;
$card-cap-bg:                       rgba($black, .03) !default;
$card-bg:                           $white !default;

$card-img-overlay-padding:          1.25rem !default;

$card-group-margin:                 ($grid-gutter-width / 2) !default;
$card-deck-margin:                  $card-group-margin !default;

$card-columns-count:                3 !default;
$card-columns-gap:                  1.25rem !default;
$card-columns-margin:               $card-spacer-y !default;


// Tooltips

$tooltip-font-size:           $font-size-sm !default;
$tooltip-max-width:           200px !default;
$tooltip-color:               $white !default;
$tooltip-bg:                  $black !default;
$tooltip-border-radius:        $border-radius !default;
$tooltip-opacity:             .9 !default;
$tooltip-padding-y:           .25rem !default;
$tooltip-padding-x:           .5rem !default;
$tooltip-margin:              0 !default;

$tooltip-arrow-width:         .8rem !default;
$tooltip-arrow-height:        .4rem !default;
$tooltip-arrow-color:         $tooltip-bg !default;


// Popovers

$popover-font-size:                 $font-size-sm !default;
$popover-bg:                        $white !default;
$popover-max-width:                 276px !default;
$popover-border-width:              $border-width !default;
$popover-border-color:              rgba($black, .2) !default;
$popover-border-radius:             $border-radius-lg !default;
$popover-box-shadow:                0 .25rem .5rem rgba($black, .2) !default;

$popover-header-bg:                 darken($popover-bg, 3%) !default;
$popover-header-color:              $headings-color !default;
$popover-header-padding-y:          .5rem !default;
$popover-header-padding-x:          .75rem !default;

$popover-body-color:                $body-color !default;
$popover-body-padding-y:            $popover-header-padding-y !default;
$popover-body-padding-x:            $popover-header-padding-x !default;

$popover-arrow-width:               1rem !default;
$popover-arrow-height:              .5rem !default;
$popover-arrow-color:               $popover-bg !default;

$popover-arrow-outer-color:         fade-in($popover-border-color, .05) !default;


// Badges

$badge-font-size:                   75% !default;
$badge-font-weight:                 $font-weight-bold !default;
$badge-padding-y:                   .25em !default;
$badge-padding-x:                   .4em !default;
$badge-border-radius:               $border-radius !default;

$badge-pill-padding-x:              .6em !default;
// Use a higher than normal value to ensure completely rounded edges when
// customizing padding or font-size on labels.
$badge-pill-border-radius:          10rem !default;


// Modals

// Padding applied to the modal body
$modal-inner-padding:         1rem !default;

$modal-dialog-margin:         .5rem !default;
$modal-dialog-margin-y-sm-up: 1.75rem !default;

$modal-title-line-height:           $line-height-base !default;

$modal-content-bg:               $white !default;
$modal-content-border-color:     rgba($black, .2) !default;
$modal-content-border-width:     $border-width !default;
$modal-content-box-shadow-xs:    0 .25rem .5rem rgba($black, .5) !default;
$modal-content-box-shadow-sm-up: 0 .5rem 1rem rgba($black, .5) !default;

$modal-backdrop-bg:           $black !default;
$modal-backdrop-opacity:      .5 !default;
$modal-header-border-color:   $gray-200 !default;
$modal-footer-border-color:   $modal-header-border-color !default;
$modal-header-border-width:   $modal-content-border-width !default;
$modal-footer-border-width:   $modal-header-border-width !default;
$modal-header-padding:        1rem !default;

$modal-lg:                          800px !default;
$modal-md:                          500px !default;
$modal-sm:                          300px !default;

$modal-transition:                  transform .3s ease-out !default;


// Alerts
//
// Define alert colors, border radius, and padding.

$alert-padding-y:                   .75rem !default;
$alert-padding-x:                   1.25rem !default;
$alert-margin-bottom:               1rem !default;
$alert-border-radius:               $border-radius !default;
$alert-link-font-weight:            $font-weight-bold !default;
$alert-border-width:                $border-width !default;

$alert-bg-level:                    -10 !default;
$alert-border-level:                -9 !default;
$alert-color-level:                 6 !default;


// Progress bars

$progress-height:                   1rem !default;
$progress-font-size:                ($font-size-base * .75) !default;
$progress-bg:                       $gray-200 !default;
$progress-border-radius:            $border-radius !default;
$progress-box-shadow:               inset 0 .1rem .1rem rgba($black, .1) !default;
$progress-bar-color:                $white !default;
$progress-bar-bg:                   theme-color("primary") !default;
$progress-bar-animation-timing:     1s linear infinite !default;
$progress-bar-transition:           width .6s ease !default;

// List group

$list-group-bg:                     $white !default;
$list-group-border-color:           rgba($black, .125) !default;
$list-group-border-width:           $border-width !default;
$list-group-border-radius:          $border-radius !default;

$list-group-item-padding-y:         .75rem !default;
$list-group-item-padding-x:         1.25rem !default;

$list-group-hover-bg:               $gray-100 !default;
$list-group-active-color:           $component-active-color !default;
$list-group-active-bg:              $component-active-bg !default;
$list-group-active-border-color:    $list-group-active-bg !default;

$list-group-disabled-color:         $gray-600 !default;
$list-group-disabled-bg:            $list-group-bg !default;

$list-group-action-color:           $gray-700 !default;
$list-group-action-hover-color:     $list-group-action-color !default;

$list-group-action-active-color:    $body-color !default;
$list-group-action-active-bg:       $gray-200 !default;


// Image thumbnails

$thumbnail-padding:                 .25rem !default;
$thumbnail-bg:                      $body-bg !default;
$thumbnail-border-width:            $border-width !default;
$thumbnail-border-color:            $gray-300 !default;
$thumbnail-border-radius:           $border-radius !default;
$thumbnail-box-shadow:              0 1px 2px rgba($black, .075) !default;


// Figures

$figure-caption-font-size:          90% !default;
$figure-caption-color:              $gray-600 !default;


// Breadcrumbs

$breadcrumb-padding-y:              .75rem !default;
$breadcrumb-padding-x:              1rem !default;
$breadcrumb-item-padding:           .5rem !default;

$breadcrumb-margin-bottom:          1rem !default;

$breadcrumb-bg:                     $gray-200 !default;
$breadcrumb-divider-color:          $gray-600 !default;
$breadcrumb-active-color:           $gray-600 !default;
$breadcrumb-divider:                "/" !default;


// Carousel

$carousel-control-color:            $white !default;
$carousel-control-width:            15% !default;
$carousel-control-opacity:          .5 !default;

$carousel-indicator-width:          30px !default;
$carousel-indicator-height:         3px !default;
$carousel-indicator-spacer:         3px !default;
$carousel-indicator-active-bg:      $white !default;

$carousel-caption-width:            70% !default;
$carousel-caption-color:            $white !default;

$carousel-control-icon-width:       20px !default;

$carousel-control-prev-icon-bg:     str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='#{$carousel-control-color}' viewBox='0 0 8 8'%3E%3Cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3E%3C/svg%3E"), "#", "%23") !default;
$carousel-control-next-icon-bg:     str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='#{$carousel-control-color}' viewBox='0 0 8 8'%3E%3Cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3E%3C/svg%3E"), "#", "%23") !default;

$carousel-transition:               transform .6s ease !default;


// Close

$close-font-size:                   $font-size-base * 1.5 !default;
$close-font-weight:                 $font-weight-bold !default;
$close-color:                       $black !default;
$close-text-shadow:                 0 1px 0 $white !default;

// Code

$code-font-size:                    87.5% !default;
$code-color:                        $pink !default;

$kbd-padding-y:                     .2rem !default;
$kbd-padding-x:                     .4rem !default;
$kbd-font-size:                     $code-font-size !default;
$kbd-color:                         $white !default;
$kbd-bg:                            $gray-900 !default;

$pre-color:                         $gray-900 !default;
$pre-scrollable-max-height:         340px !default;


// Printing
$print-page-size:                   a3 !default;
$print-body-min-width:              map-get($grid-breakpoints, "lg") !default;

// Breakpoint viewport sizes and media queries.
//
// Breakpoints are defined as a map of (name: minimum width), order from small to large:
//
//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)
//
// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.

// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    md
//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))
//    md
@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $n: index($breakpoint-names, $name);
  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    576px
@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

// Maximum breakpoint width. Null for the largest (last) breakpoint.
// The maximum value is calculated as the minimum of the next one less 0.02px
// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.
// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max
// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.
// See https://bugs.webkit.org/show_bug.cgi?id=178261
//
//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    767.98px
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $next: breakpoint-next($name, $breakpoints);
  @return if($next, breakpoint-min($next, $breakpoints) - .02px, null);
}

// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.
// Useful for making responsive utilities.
//
//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    ""  (Returns a blank string)
//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    "-sm"
@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}

// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media that spans multiple breakpoint widths.
// Makes the @content apply between the min and max breakpoints
@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($lower, $breakpoints);
  $max: breakpoint-max($upper, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($lower, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($upper, $breakpoints) {
      @content;
    }
  }
}

// Media between the breakpoint's minimum and maximum widths.
// No minimum for the smallest breakpoint, and no maximum for the largest one.
// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.
@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  $max: breakpoint-max($name, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($name, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($name, $breakpoints) {
      @content;
    }
  }
}

// stylelint-disable indentation

// Hover mixin and `$enable-hover-media-query` are deprecated.
//
// Origally added during our alphas and maintained during betas, this mixin was
// designed to prevent `:hover` stickiness on iOS—an issue where hover styles
// would persist after initial touch.
//
// For backward compatibility, we've kept these mixins and updated them to
// always return their regular psuedo-classes instead of a shimmed media query.
//
// Issue: https://github.com/twbs/bootstrap/issues/25195

@mixin hover {
  &:hover { @content; }
}

@mixin hover-focus {
  &:hover,
  &:focus {
    @content;
  }
}

@mixin plain-hover-focus {
  &,
  &:hover,
  &:focus {
    @content;
  }
}

@mixin hover-focus-active {
  &:hover,
  &:focus,
  &:active {
    @content;
  }
}

// Image Mixins
// - Responsive image
// - Retina image


// Responsive image
//
// Keep images from scaling beyond the width of their parents.

@mixin img-fluid {
  // Part 1: Set a maximum relative to the parent
  max-width: 100%;
  // Part 2: Override the height to auto, otherwise images will be stretched
  // when setting a width and height attribute on the img element.
  height: auto;
}


// Retina image
//
// Short retina mixin for setting background-image and -size.

// stylelint-disable indentation, media-query-list-comma-newline-after
@mixin img-retina($file-1x, $file-2x, $width-1x, $height-1x) {
  background-image: url($file-1x);

  // Autoprefixer takes care of adding -webkit-min-device-pixel-ratio and -o-min-device-pixel-ratio,
  // but doesn't convert dppx=>dpi.
  // There's no such thing as unprefixed min-device-pixel-ratio since it's nonstandard.
  // Compatibility info: https://caniuse.com/#feat=css-media-resolution
  @media only screen and (min-resolution: 192dpi), // IE9-11 don't support dppx
  only screen and (min-resolution: 2dppx) { // Standardized
    background-image: url($file-2x);
    background-size: $width-1x $height-1x;
  }
}

@mixin badge-variant($bg) {
  color: color-yiq($bg);
  background-color: $bg;

  &[href] {
    @include hover-focus {
      color: color-yiq($bg);
      text-decoration: none;
      background-color: darken($bg, 10%);
    }
  }
}

// Resize anything

@mixin resizable($direction) {
  overflow: auto; // Per CSS3 UI, `resize` only applies when `overflow` isn't `visible`
  resize: $direction; // Options: horizontal, vertical, both
}

// Only display content to screen readers
//
// See: http://a11yproject.com/posts/how-to-hide-content/
// See: https://hugogiraudel.com/2016/10/13/css-hide-and-seek/

@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  clip-path: inset(50%);
  border: 0;
}

// Use in conjunction with .sr-only to only display content when it's focused.
//
// Useful for "Skip to main content" links; see https://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
//
// Credit: HTML5 Boilerplate

@mixin sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    overflow: visible;
    clip: auto;
    white-space: normal;
    clip-path: none;
  }
}

// Sizing shortcuts

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin reset-text {
  font-family: $font-family-base;
  // We deliberately do NOT reset font-size or word-wrap.
  font-style: normal;
  font-weight: $font-weight-normal;
  line-height: $line-height-base;
  text-align: left; // Fallback for where `start` is not supported
  text-align: start; // stylelint-disable-line declaration-block-no-duplicate-properties
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  letter-spacing: normal;
  word-break: normal;
  word-spacing: normal;
  white-space: normal;
  line-break: auto;
}

// stylelint-disable declaration-no-important

// Typography

@mixin text-emphasis-variant($parent, $color) {
  #{$parent} {
    color: $color !important;
  }
  a#{$parent} {
    @include hover-focus {
      color: darken($color, 10%) !important;
    }
  }
}

// CSS image replacement
@mixin text-hide() {
  // stylelint-disable-next-line font-family-no-missing-generic-family-keyword
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

// Text truncate
// Requires inline-block or block for proper styling

@mixin text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// stylelint-disable declaration-no-important

// Visibility

@mixin invisible($visibility) {
  visibility: $visibility !important;
}

@mixin alert-variant($background, $border, $color) {
  color: $color;
  @include gradient-bg($background);
  border-color: $border;

  hr {
    border-top-color: darken($border, 5%);
  }

  .alert-link {
    color: darken($color, 10%);
  }
}

// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

@mixin button-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)) {
  color: color-yiq($background);
  @include gradient-bg($background);
  border-color: $border;
  @include box-shadow($btn-box-shadow);

  @include hover {
    color: color-yiq($hover-background);
    @include gradient-bg($hover-background);
    border-color: $hover-border;
  }

  &:focus,
  &.focus {
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: $btn-box-shadow, 0 0 0 $btn-focus-width rgba($border, .5);
    } @else {
      box-shadow: 0 0 0 $btn-focus-width rgba($border, .5);
    }
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: color-yiq($background);
    background-color: $background;
    border-color: $border;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    @if $enable-gradients {
      background-image: none; // Remove the gradient for the pressed/active state
    }
    border-color: $active-border;

    &:focus {
      // Avoid using mixin so we can pass custom focus shadow properly
      @if $enable-shadows {
        box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($border, .5);
      } @else {
        box-shadow: 0 0 0 $btn-focus-width rgba($border, .5);
      }
    }
  }
}

@mixin button-outline-variant($color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color) {
  color: $color;
  background-color: transparent;
  background-image: none;
  border-color: $color;

  &:hover {
    color: $color-hover;
    background-color: $active-background;
    border-color: $active-border;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    border-color: $active-border;

    &:focus {
      // Avoid using mixin so we can pass custom focus shadow properly
      @if $enable-shadows and $btn-active-box-shadow != none {
        box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, .5);
      } @else {
        box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
      }
    }
  }
}

// Button sizes
@mixin button-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  line-height: $line-height;
  // Manually declare to provide an override to the browser default
  @if $enable-rounded {
    border-radius: $border-radius;
  } @else {
    border-radius: 0;
  }
}

@mixin caret-down {
  border-top: $caret-width solid;
  border-right: $caret-width solid transparent;
  border-bottom: 0;
  border-left: $caret-width solid transparent;
}

@mixin caret-up {
  border-top: 0;
  border-right: $caret-width solid transparent;
  border-bottom: $caret-width solid;
  border-left: $caret-width solid transparent;
}

@mixin caret-right {
  border-top: $caret-width solid transparent;
  border-bottom: $caret-width solid transparent;
  border-left: $caret-width solid;
}

@mixin caret-left {
  border-top: $caret-width solid transparent;
  border-right: $caret-width solid;
  border-bottom: $caret-width solid transparent;
}

@mixin caret($direction: down) {
  @if $enable-caret {
    &::after {
      display: inline-block;
      width: 0;
      height: 0;
      margin-left: $caret-width * .85;
      vertical-align: $caret-width * .85;
      content: "";
      @if $direction == down {
        @include caret-down;
      } @else if $direction == up {
        @include caret-up;
      } @else if $direction == right {
        @include caret-right;
      }
    }

    @if $direction == left {
      &::after {
        display: none;
      }

      &::before {
        display: inline-block;
        width: 0;
        height: 0;
        margin-right: $caret-width * .85;
        vertical-align: $caret-width * .85;
        content: "";
        @include caret-left;
      }
    }

    &:empty::after {
      margin-left: 0;
    }
  }
}

// Pagination

@mixin pagination-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  .page-link {
    padding: $padding-y $padding-x;
    font-size: $font-size;
    line-height: $line-height;
  }

  .page-item {
    &:first-child {
      .page-link {
        @include border-left-radius($border-radius);
      }
    }
    &:last-child {
      .page-link {
        @include border-right-radius($border-radius);
      }
    }
  }
}

// Lists

// Unstyled keeps list items block level, just removes default browser padding and list-style
@mixin list-unstyled {
  padding-left: 0;
  list-style: none;
}

// List Groups

@mixin list-group-item-variant($state, $background, $color) {
  .list-group-item-#{$state} {
    color: $color;
    background-color: $background;

    &.list-group-item-action {
      @include hover-focus {
        color: $color;
        background-color: darken($background, 5%);
      }

      &.active {
        color: #fff;
        background-color: $color;
        border-color: $color;
      }
    }
  }
}

// Horizontal dividers
//
// Dividers (basically an hr) within dropdowns and nav lists

@mixin nav-divider($color: #e5e5e5) {
  height: 0;
  margin: ($spacer / 2) 0;
  overflow: hidden;
  border-top: 1px solid $color;
}

// Form control focus state
//
// Generate a customized focus state and for any input with the specified color,
// which defaults to the `$input-focus-border-color` variable.
//
// We highly encourage you to not customize the default value, but instead use
// this to tweak colors on an as-needed basis. This aesthetic change is based on
// WebKit's default styles, but applicable to a wider range of browsers. Its
// usability and accessibility should be taken into account with any change.
//
// Example usage: change the default blue border and shadow to white for better
// contrast against a dark gray background.
@mixin form-control-focus() {
  &:focus {
    color: $input-focus-color;
    background-color: $input-focus-bg;
    border-color: $input-focus-border-color;
    outline: 0;
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: $input-box-shadow, $input-focus-box-shadow;
    } @else {
      box-shadow: $input-focus-box-shadow;
    }
  }
}


@mixin form-validation-state($state, $color) {
  .#{$state}-feedback {
    display: none;
    width: 100%;
    margin-top: $form-feedback-margin-top;
    font-size: $form-feedback-font-size;
    color: $color;
  }

  .#{$state}-tooltip {
    position: absolute;
    top: 100%;
    z-index: 5;
    display: none;
    max-width: 100%; // Contain to parent when possible
    padding: .5rem;
    margin-top: .1rem;
    font-size: .875rem;
    line-height: 1;
    color: #fff;
    background-color: rgba($color, .8);
    border-radius: .2rem;
  }

  .form-control,
  .custom-select {
    .was-validated &:#{$state},
    &.is-#{$state} {
      border-color: $color;

      &:focus {
        border-color: $color;
        box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }
    }
  }

  .form-check-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .form-check-label {
        color: $color;
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }
    }
  }

  .custom-control-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .custom-control-label {
        color: $color;

        &::before {
          background-color: lighten($color, 25%);
        }
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }

      &:checked {
        ~ .custom-control-label::before {
          @include gradient-bg(lighten($color, 10%));
        }
      }

      &:focus {
        ~ .custom-control-label::before {
          box-shadow: 0 0 0 1px $body-bg, 0 0 0 $input-focus-width rgba($color, .25);
        }
      }
    }
  }

  // custom file
  .custom-file-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .custom-file-label {
        border-color: $color;

        &::before { border-color: inherit; }
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }

      &:focus {
        ~ .custom-file-label {
          box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
        }
      }
    }
  }
}

// Tables

@mixin table-row-variant($state, $background) {
  // Exact selectors below required to override `.table-striped` and prevent
  // inheritance to nested tables.
  .table-#{$state} {
    &,
    > th,
    > td {
      background-color: $background;
    }
  }

  // Hover states for `.table-hover`
  // Note: this is not available for cells or rows within `thead` or `tfoot`.
  .table-hover {
    $hover-background: darken($background, 5%);

    .table-#{$state} {
      @include hover {
        background-color: $hover-background;

        > td,
        > th {
          background-color: $hover-background;
        }
      }
    }
  }
}

// stylelint-disable declaration-no-important

// Contextual backgrounds

@mixin bg-variant($parent, $color) {
  #{$parent} {
    background-color: $color !important;
  }
  a#{$parent},
  button#{$parent} {
    @include hover-focus {
      background-color: darken($color, 10%) !important;
    }
  }
}

@mixin bg-gradient-variant($parent, $color) {
  #{$parent} {
    background: $color linear-gradient(180deg, mix($body-bg, $color, 15%), $color) repeat-x !important;
  }
}

// Single side border-radius

@mixin border-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-radius: $radius;
  }
}

@mixin border-top-radius($radius) {
  @if $enable-rounded {
    border-top-left-radius: $radius;
    border-top-right-radius: $radius;
  }
}

@mixin border-right-radius($radius) {
  @if $enable-rounded {
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
  }
}

@mixin border-bottom-radius($radius) {
  @if $enable-rounded {
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}

@mixin border-left-radius($radius) {
  @if $enable-rounded {
    border-top-left-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}

@mixin box-shadow($shadow...) {
  @if $enable-shadows {
    box-shadow: $shadow;
  }
}

// Gradients

@mixin gradient-bg($color) {
  @if $enable-gradients {
    background: $color linear-gradient(180deg, mix($body-bg, $color, 15%), $color) repeat-x;
  } @else {
    background-color: $color;
  }
}

// Horizontal gradient, from left to right
//
// Creates two color stops, start and end, by specifying a color and position for each color stop.
@mixin gradient-x($start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100%) {
  background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent);
  background-repeat: repeat-x;
}

// Vertical gradient, from top to bottom
//
// Creates two color stops, start and end, by specifying a color and position for each color stop.
@mixin gradient-y($start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100%) {
  background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent);
  background-repeat: repeat-x;
}

@mixin gradient-directional($start-color: #555, $end-color: #333, $deg: 45deg) {
  background-image: linear-gradient($deg, $start-color, $end-color);
  background-repeat: repeat-x;
}
@mixin gradient-x-three-colors($start-color: #00b3ee, $mid-color: #7a43b6, $color-stop: 50%, $end-color: #c3325f) {
  background-image: linear-gradient(to right, $start-color, $mid-color $color-stop, $end-color);
  background-repeat: no-repeat;
}
@mixin gradient-y-three-colors($start-color: #00b3ee, $mid-color: #7a43b6, $color-stop: 50%, $end-color: #c3325f) {
  background-image: linear-gradient($start-color, $mid-color $color-stop, $end-color);
  background-repeat: no-repeat;
}
@mixin gradient-radial($inner-color: #555, $outer-color: #333) {
  background-image: radial-gradient(circle, $inner-color, $outer-color);
  background-repeat: no-repeat;
}
@mixin gradient-striped($color: rgba(255,255,255,.15), $angle: 45deg) {
  background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
}

@mixin transition($transition...) {
  @if $enable-transitions {
    @if length($transition) == 0 {
      transition: $transition-base;
    } @else {
      transition: $transition;
    }
  }
}

@mixin clearfix() {
  &::after {
    display: block;
    clear: both;
    content: "";
  }
}

// Framework grid generation
//
// Used only by Bootstrap to generate the correct number of grid classes given
// any value of `$grid-columns`.

@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
  // Common properties for all breakpoints
  %grid-column {
    position: relative;
    width: 100%;
    min-height: 1px; // Prevent columns from collapsing when empty
    padding-right: ($gutter / 2);
    padding-left: ($gutter / 2);
  }

  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    // Allow columns to stretch full width below their breakpoints
    @for $i from 1 through $columns {
      .col#{$infix}-#{$i} {
        @extend %grid-column;
      }
    }
    .col#{$infix},
    .col#{$infix}-auto {
      @extend %grid-column;
    }

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      // Provide basic `.col-{bp}` classes for equal-width flexbox columns
      .col#{$infix} {
        flex-basis: 0;
        flex-grow: 1;
        max-width: 100%;
      }
      .col#{$infix}-auto {
        flex: 0 0 auto;
        width: auto;
        max-width: none; // Reset earlier grid tiers
      }

      @for $i from 1 through $columns {
        .col#{$infix}-#{$i} {
          @include make-col($i, $columns);
        }
      }

      .order#{$infix}-first { order: -1; }

      .order#{$infix}-last { order: $columns + 1; }

      @for $i from 0 through $columns {
        .order#{$infix}-#{$i} { order: $i; }
      }

      // `$columns - 1` because offsetting by the width of an entire row isn't possible
      @for $i from 0 through ($columns - 1) {
        @if not ($infix == "" and $i == 0) { // Avoid emitting useless .offset-0
          .offset#{$infix}-#{$i} {
            @include make-col-offset($i, $columns);
          }
        }
      }
    }
  }
}

/// Grid system
//
// Generate semantic grid columns with these mixins.

@mixin make-container() {
  width: 100%;
  padding-right: ($grid-gutter-width / 2);
  padding-left: ($grid-gutter-width / 2);
  margin-right: auto;
  margin-left: auto;
}


// For each breakpoint, define the maximum width of the container in a media query
@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $container-max-width in $max-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      max-width: $container-max-width;
    }
  }
}

@mixin make-row() {
  display: flex;
  flex-wrap: wrap;
  margin-right: ($grid-gutter-width / -2);
  margin-left: ($grid-gutter-width / -2);
}

@mixin make-col-ready() {
  position: relative;
  // Prevent columns from becoming too narrow when at smaller grid tiers by
  // always setting `width: 100%;`. This works because we use `flex` values
  // later on to override this initial width.
  width: 100%;
  min-height: 1px; // Prevent collapsing
  padding-right: ($grid-gutter-width / 2);
  padding-left: ($grid-gutter-width / 2);
}

@mixin make-col($size, $columns: $grid-columns) {
  flex: 0 0 percentage($size / $columns);
  // Add a `max-width` to ensure content within each column does not blow out
  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
  // do not appear to require this.
  max-width: percentage($size / $columns);
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  $num: $size / $columns;
  margin-left: if($num == 0, 0, percentage($num));
}

// stylelint-disable declaration-no-important

@mixin float-left {
  float: left !important;
}
@mixin float-right {
  float: right !important;
}
@mixin float-none {
  float: none !important;
}

:root {
  // Custom variable values only support SassScript inside `#{}`.
  @each $color, $value in $colors {
    --#{$color}: #{$value};
  }

  @each $color, $value in $theme-colors {
    --#{$color}: #{$value};
  }

  @each $bp, $value in $grid-breakpoints {
    --breakpoint-#{$bp}: #{$value};
  }

  // Use `inspect` for lists so that quoted items keep the quotes.
  // See https://github.com/sass/sass/issues/2383#issuecomment-336349172
  --font-family-sans-serif: #{inspect($font-family-sans-serif)};
  --font-family-monospace: #{inspect($font-family-monospace)};
}

// stylelint-disable at-rule-no-vendor-prefix, declaration-no-important, selector-no-qualifying-type, property-no-vendor-prefix

// Reboot
//
// Normalization of HTML elements, manually forked from Normalize.css to remove
// styles targeting irrelevant browsers while applying new styles.
//
// Normalize is licensed MIT. https://github.com/necolas/normalize.css


// Document
//
// 1. Change from `box-sizing: content-box` so that `width` is not affected by `padding` or `border`.
// 2. Change the default font family in all browsers.
// 3. Correct the line height in all browsers.
// 4. Prevent adjustments of font size after orientation changes in IE on Windows Phone and in iOS.
// 5. Setting @viewport causes scrollbars to overlap content in IE11 and Edge, so
//    we force a non-overlapping, non-auto-hiding scrollbar to counteract.
// 6. Change the default tap highlight to be completely transparent in iOS.

*,
*::before,
*::after {
  box-sizing: border-box; // 1
}

html {
  font-family: sans-serif; // 2
  line-height: 1.15; // 3
  -webkit-text-size-adjust: 100%; // 4
  -ms-text-size-adjust: 100%; // 4
  -ms-overflow-style: scrollbar; // 5
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); // 6
}

// IE10+ doesn't honor `<meta name="viewport">` in some cases.
@at-root {
  @-ms-viewport {
    width: device-width;
  }
}

// stylelint-disable selector-list-comma-newline-after
// Shim for "new" HTML5 structural elements to display correctly (IE10, older browsers)
article, aside, dialog, figcaption, figure, footer, header, hgroup, main, nav, section {
  display: block;
}
// stylelint-enable selector-list-comma-newline-after

// Body
//
// 1. Remove the margin in all browsers.
// 2. As a best practice, apply a default `background-color`.
// 3. Set an explicit initial text-align value so that we can later use the
//    the `inherit` value on things like `<th>` elements.

body {
  margin: 0; // 1
  font-family: $font-family-base;
  font-size: $font-size-base;
  font-weight: $font-weight-base;
  line-height: $line-height-base;
  color: $body-color;
  text-align: left; // 3
  background-color: $body-bg; // 2
}

// Suppress the focus outline on elements that cannot be accessed via keyboard.
// This prevents an unwanted focus outline from appearing around elements that
// might still respond to pointer events.
//
// Credit: https://github.com/suitcss/base
[tabindex="-1"]:focus {
  outline: 0 !important;
}


// Content grouping
//
// 1. Add the correct box sizing in Firefox.
// 2. Show the overflow in Edge and IE.

hr {
  box-sizing: content-box; // 1
  height: 0; // 1
  overflow: visible; // 2
}


//
// Typography
//

// Remove top margins from headings
//
// By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top
// margin for easier control within type scales as it avoids margin collapsing.
// stylelint-disable selector-list-comma-newline-after
h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  margin-bottom: $headings-margin-bottom;
}
// stylelint-enable selector-list-comma-newline-after

// Reset margins on paragraphs
//
// Similarly, the top margin on `<p>`s get reset. However, we also reset the
// bottom margin to use `rem` units instead of `em`.
p {
  margin-top: 0;
  margin-bottom: $paragraph-margin-bottom;
}

// Abbreviations
//
// 1. Remove the bottom border in Firefox 39-.
// 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
// 3. Add explicit cursor to indicate changed behavior.
// 4. Duplicate behavior to the data-* attribute for our tooltip plugin

abbr[title],
abbr[data-original-title] { // 4
  text-decoration: underline; // 2
  text-decoration: underline dotted; // 2
  cursor: help; // 3
  border-bottom: 0; // 1
}

address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit;
}

ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem;
}

ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}

dt {
  font-weight: $dt-font-weight;
}

dd {
  margin-bottom: .5rem;
  margin-left: 0; // Undo browser default
}

blockquote {
  margin: 0 0 1rem;
}

dfn {
  font-style: italic; // Add the correct font style in Android 4.3-
}

// stylelint-disable font-weight-notation
b,
strong {
  font-weight: bolder; // Add the correct font weight in Chrome, Edge, and Safari
}
// stylelint-enable font-weight-notation

small {
  font-size: 80%; // Add the correct font size in all browsers
}

//
// Prevent `sub` and `sup` elements from affecting the line height in
// all browsers.
//

sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}

sub { bottom: -.25em; }
sup { top: -.5em; }


//
// Links
//

a {
  color: $link-color;
  text-decoration: $link-decoration;
  background-color: transparent; // Remove the gray background on active links in IE 10.
  -webkit-text-decoration-skip: objects; // Remove gaps in links underline in iOS 8+ and Safari 8+.

  @include hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }
}

// And undo these styles for placeholder links/named anchors (without href)
// which have not been made explicitly keyboard-focusable (without tabindex).
// It would be more straightforward to just use a[href] in previous block, but that
// causes specificity issues in many other styles that are too complex to fix.
// See https://github.com/twbs/bootstrap/issues/19402

a:not([href]):not([tabindex]) {
  color: inherit;
  text-decoration: none;

  @include hover-focus {
    color: inherit;
    text-decoration: none;
  }

  &:focus {
    outline: 0;
  }
}


//
// Code
//

// stylelint-disable font-family-no-duplicate-names
pre,
code,
kbd,
samp {
  font-family: monospace, monospace; // Correct the inheritance and scaling of font size in all browsers.
  font-size: 1em; // Correct the odd `em` font sizing in all browsers.
}
// stylelint-enable font-family-no-duplicate-names

pre {
  // Remove browser default top margin
  margin-top: 0;
  // Reset browser default of `1em` to use `rem`s
  margin-bottom: 1rem;
  // Don't allow content to break outside
  overflow: auto;
  // We have @viewport set which causes scrollbars to overlap content in IE11 and Edge, so
  // we force a non-overlapping, non-auto-hiding scrollbar to counteract.
  -ms-overflow-style: scrollbar;
}


//
// Figures
//

figure {
  // Apply a consistent margin strategy (matches our type styles).
  margin: 0 0 1rem;
}


//
// Images and content
//

img {
  vertical-align: middle;
  border-style: none; // Remove the border on images inside links in IE 10-.
}

svg:not(:root) {
  overflow: hidden; // Hide the overflow in IE
}


//
// Tables
//

table {
  border-collapse: collapse; // Prevent double borders
}

caption {
  padding-top: $table-cell-padding;
  padding-bottom: $table-cell-padding;
  color: $text-muted;
  text-align: left;
  caption-side: bottom;
}

th {
  // Matches default `<td>` alignment by inheriting from the `<body>`, or the
  // closest parent with a set `text-align`.
  text-align: inherit;
}


//
// Forms
//

label {
  // Allow labels to use `margin` for spacing.
  display: inline-block;
  margin-bottom: .5rem;
}

// Remove the default `border-radius` that macOS Chrome adds.
//
// Details at https://github.com/twbs/bootstrap/issues/24093
button {
  border-radius: 0;
}

// Work around a Firefox/IE bug where the transparent `button` background
// results in a loss of the default `button` focus styles.
//
// Credit: https://github.com/suitcss/base/
button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

input,
button,
select,
optgroup,
textarea {
  margin: 0; // Remove the margin in Firefox and Safari
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

button,
input {
  overflow: visible; // Show the overflow in Edge
}

button,
select {
  text-transform: none; // Remove the inheritance of text transform in Firefox
}

// 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
//    controls in Android 4.
// 2. Correct the inability to style clickable types in iOS and Safari.
button,
html [type="button"], // 1
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; // 2
}

// Remove inner border and padding from Firefox, but don't restore the outline like Normalize.
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

input[type="radio"],
input[type="checkbox"] {
  box-sizing: border-box; // 1. Add the correct box sizing in IE 10-
  padding: 0; // 2. Remove the padding in IE 10-
}


input[type="date"],
input[type="time"],
input[type="datetime-local"],
input[type="month"] {
  // Remove the default appearance of temporal inputs to avoid a Mobile Safari
  // bug where setting a custom line-height prevents text from being vertically
  // centered within the input.
  // See https://bugs.webkit.org/show_bug.cgi?id=139848
  // and https://github.com/twbs/bootstrap/issues/11266
  -webkit-appearance: listbox;
}

textarea {
  overflow: auto; // Remove the default vertical scrollbar in IE.
  // Textareas should really only resize vertically so they don't break their (horizontal) containers.
  resize: vertical;
}

fieldset {
  // Browsers set a default `min-width: min-content;` on fieldsets,
  // unlike e.g. `<div>`s, which have `min-width: 0;` by default.
  // So we reset that to ensure fieldsets behave more like a standard block element.
  // See https://github.com/twbs/bootstrap/issues/12359
  // and https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements
  min-width: 0;
  // Reset the default outline behavior of fieldsets so they don't affect page layout.
  padding: 0;
  margin: 0;
  border: 0;
}

// 1. Correct the text wrapping in Edge and IE.
// 2. Correct the color inheritance from `fieldset` elements in IE.
legend {
  display: block;
  width: 100%;
  max-width: 100%; // 1
  padding: 0;
  margin-bottom: .5rem;
  font-size: 1.5rem;
  line-height: inherit;
  color: inherit; // 2
  white-space: normal; // 1
}

progress {
  vertical-align: baseline; // Add the correct vertical alignment in Chrome, Firefox, and Opera.
}

// Correct the cursor style of increment and decrement buttons in Chrome.
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

[type="search"] {
  // This overrides the extra rounded corners on search inputs in iOS so that our
  // `.form-control` class can properly style them. Note that this cannot simply
  // be added to `.form-control` as it's not specific enough. For details, see
  // https://github.com/twbs/bootstrap/issues/11586.
  outline-offset: -2px; // 2. Correct the outline style in Safari.
  -webkit-appearance: none;
}

//
// Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
//

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

//
// 1. Correct the inability to style clickable types in iOS and Safari.
// 2. Change font properties to `inherit` in Safari.
//

::-webkit-file-upload-button {
  font: inherit; // 2
  -webkit-appearance: button; // 1
}

//
// Correct element displays
//

output {
  display: inline-block;
}

summary {
  display: list-item; // Add the correct display in all browsers
  cursor: pointer;
}

template {
  display: none; // Add the correct display in IE
}

// Always hide an element with the `hidden` HTML attribute (from PureCSS).
// Needed for proper display in IE 10-.
[hidden] {
  display: none !important;
}

// stylelint-disable declaration-no-important, selector-list-comma-newline-after

//
// Headings
//

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  margin-bottom: $headings-margin-bottom;
  font-family: $headings-font-family;
  font-weight: $headings-font-weight;
  line-height: $headings-line-height;
  color: $headings-color;
}

h1, .h1 { font-size: $h1-font-size; }
h2, .h2 { font-size: $h2-font-size; }
h3, .h3 { font-size: $h3-font-size; }
h4, .h4 { font-size: $h4-font-size; }
h5, .h5 { font-size: $h5-font-size; }
h6, .h6 { font-size: $h6-font-size; }

.lead {
  font-size: $lead-font-size;
  font-weight: $lead-font-weight;
}

// Type display classes
.display-1 {
  font-size: $display1-size;
  font-weight: $display1-weight;
  line-height: $display-line-height;
}
.display-2 {
  font-size: $display2-size;
  font-weight: $display2-weight;
  line-height: $display-line-height;
}
.display-3 {
  font-size: $display3-size;
  font-weight: $display3-weight;
  line-height: $display-line-height;
}
.display-4 {
  font-size: $display4-size;
  font-weight: $display4-weight;
  line-height: $display-line-height;
}


//
// Horizontal rules
//

hr {
  margin-top: $hr-margin-y;
  margin-bottom: $hr-margin-y;
  border: 0;
  border-top: $hr-border-width solid $hr-border-color;
}


//
// Emphasis
//

small,
.small {
  font-size: $small-font-size;
  font-weight: $font-weight-normal;
}

mark,
.mark {
  padding: $mark-padding;
  background-color: $mark-bg;
}


//
// Lists
//

.list-unstyled {
  @include list-unstyled;
}

// Inline turns list items into inline-block
.list-inline {
  @include list-unstyled;
}
.list-inline-item {
  display: inline-block;

  &:not(:last-child) {
    margin-right: $list-inline-padding;
  }
}


//
// Misc
//

// Builds on `abbr`
.initialism {
  font-size: 90%;
  text-transform: uppercase;
}

// Blockquotes
.blockquote {
  margin-bottom: $spacer;
  font-size: $blockquote-font-size;
}

.blockquote-footer {
  display: block;
  font-size: 80%; // back to default font-size
  color: $blockquote-small-color;

  &::before {
    content: "\2014 \00A0"; // em dash, nbsp
  }
}

// Responsive images (ensure images don't scale beyond their parents)
//
// This is purposefully opt-in via an explicit class rather than being the default for all `<img>`s.
// We previously tried the "images are responsive by default" approach in Bootstrap v2,
// and abandoned it in Bootstrap v3 because it breaks lots of third-party widgets (including Google Maps)
// which weren't expecting the images within themselves to be involuntarily resized.
// See also https://github.com/twbs/bootstrap/issues/18178
.img-fluid {
  @include img-fluid;
}


// Image thumbnails
.img-thumbnail {
  padding: $thumbnail-padding;
  background-color: $thumbnail-bg;
  border: $thumbnail-border-width solid $thumbnail-border-color;
  @include border-radius($thumbnail-border-radius);
  @include box-shadow($thumbnail-box-shadow);

  // Keep them at most 100% wide
  @include img-fluid;
}

//
// Figures
//

.figure {
  // Ensures the caption's text aligns with the image.
  display: inline-block;
}

.figure-img {
  margin-bottom: ($spacer / 2);
  line-height: 1;
}

.figure-caption {
  font-size: $figure-caption-font-size;
  color: $figure-caption-color;
}

// Inline and block code styles
code,
kbd,
pre,
samp {
  font-family: $font-family-monospace;
}

// Inline code
code {
  font-size: $code-font-size;
  color: $code-color;
  word-break: break-word;

  // Streamline the style when inside anchors to avoid broken underline and more
  a > & {
    color: inherit;
  }
}

// User input typically entered via keyboard
kbd {
  padding: $kbd-padding-y $kbd-padding-x;
  font-size: $kbd-font-size;
  color: $kbd-color;
  background-color: $kbd-bg;
  @include border-radius($border-radius-sm);
  @include box-shadow($kbd-box-shadow);

  kbd {
    padding: 0;
    font-size: 100%;
    font-weight: $nested-kbd-font-weight;
    @include box-shadow(none);
  }
}

// Blocks of code
pre {
  display: block;
  font-size: $code-font-size;
  color: $pre-color;

  // Account for some code outputs that place code tags in pre tags
  code {
    font-size: inherit;
    color: inherit;
    word-break: normal;
  }
}

// Enable scrollable blocks of code
.pre-scrollable {
  max-height: $pre-scrollable-max-height;
  overflow-y: scroll;
}

// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

@if $enable-grid-classes {
  .container {
    @include make-container();
    @include make-container-max-widths();
  }
}

// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but with 100% width for
// fluid, full width layouts.

@if $enable-grid-classes {
  .container-fluid {
    @include make-container();
  }
}

// Row
//
// Rows contain and clear the floats of your columns.

@if $enable-grid-classes {
  .row {
    @include make-row();
  }

  // Remove the negative margin from default .row, then the horizontal padding
  // from all immediate children columns (to prevent runaway style inheritance).
  .no-gutters {
    margin-right: 0;
    margin-left: 0;

    > .col,
    > [class*="col-"] {
      padding-right: 0;
      padding-left: 0;
    }
  }
}

// Columns
//
// Common styles for small and large grid columns

@if $enable-grid-classes {
  @include make-grid-columns();
}

//
// Basic Bootstrap table
//

.table {
  width: 100%;
  max-width: 100%;
  margin-bottom: $spacer;
  background-color: $table-bg; // Reset for nesting within parents with `background-color`.

  th,
  td {
    padding: $table-cell-padding;
    vertical-align: top;
    border-top: $table-border-width solid $table-border-color;
  }

  thead th {
    vertical-align: bottom;
    border-bottom: (2 * $table-border-width) solid $table-border-color;
  }

  tbody + tbody {
    border-top: (2 * $table-border-width) solid $table-border-color;
  }

  .table {
    background-color: $body-bg;
  }
}


//
// Condensed table w/ half padding
//

.table-sm {
  th,
  td {
    padding: $table-cell-padding-sm;
  }
}


// Bordered version
//
// Add borders all around the table and between all the columns.

.table-bordered {
  border: $table-border-width solid $table-border-color;

  th,
  td {
    border: $table-border-width solid $table-border-color;
  }

  thead {
    th,
    td {
      border-bottom-width: (2 * $table-border-width);
    }
  }
}


// Zebra-striping
//
// Default zebra-stripe styles (alternating gray and transparent backgrounds)

.table-striped {
  tbody tr:nth-of-type(odd) {
    background-color: $table-accent-bg;
  }
}


// Hover effect
//
// Placed here since it has to come after the potential zebra striping

.table-hover {
  tbody tr {
    @include hover {
      background-color: $table-hover-bg;
    }
  }
}


// Table backgrounds
//
// Exact selectors below required to override `.table-striped` and prevent
// inheritance to nested tables.

@each $color, $value in $theme-colors {
  @include table-row-variant($color, theme-color-level($color, -9));
}

@include table-row-variant(active, $table-active-bg);


// Dark styles
//
// Same table markup, but inverted color scheme: dark background and light text.

// stylelint-disable-next-line no-duplicate-selectors
.table {
  .thead-dark {
    th {
      color: $table-dark-color;
      background-color: $table-dark-bg;
      border-color: $table-dark-border-color;
    }
  }

  .thead-light {
    th {
      color: $table-head-color;
      background-color: $table-head-bg;
      border-color: $table-border-color;
    }
  }
}

.table-dark {
  color: $table-dark-color;
  background-color: $table-dark-bg;

  th,
  td,
  thead th {
    border-color: $table-dark-border-color;
  }

  &.table-bordered {
    border: 0;
  }

  &.table-striped {
    tbody tr:nth-of-type(odd) {
      background-color: $table-dark-accent-bg;
    }
  }

  &.table-hover {
    tbody tr {
      @include hover {
        background-color: $table-dark-hover-bg;
      }
    }
  }
}


// Responsive tables
//
// Generate series of `.table-responsive-*` classes for configuring the screen
// size of where your table will overflow.

.table-responsive {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-down($breakpoint) {
        display: block;
        width: 100%;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
        -ms-overflow-style: -ms-autohiding-scrollbar; // See https://github.com/twbs/bootstrap/pull/10057

        // Prevent double border on horizontal scroll due to use of `display: block;`
        > .table-bordered {
          border: 0;
        }
      }
    }
  }
}

// stylelint-disable selector-no-qualifying-type

//
// Textual form controls
//

.form-control {
  display: block;
  width: 100%;
  padding: $input-padding-y $input-padding-x;
  font-size: $font-size-base;
  line-height: $input-line-height;
  color: $input-color;
  background-color: $input-bg;
  background-clip: padding-box;
  border: $input-border-width solid $input-border-color;

  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
  @if $enable-rounded {
    // Manually use the if/else instead of the mixin to account for iOS override
    border-radius: $input-border-radius;
  } @else {
    // Otherwise undo the iOS default
    border-radius: 0;
  }

  @include box-shadow($input-box-shadow);
  @include transition($input-transition);

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus();

  // Placeholder
  &::placeholder {
    color: $input-placeholder-color;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly] {
    background-color: $input-disabled-bg;
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
  }
}

select.form-control {
  &:not([size]):not([multiple]) {
    height: $input-height;
  }

  &:focus::-ms-value {
    // Suppress the nested default white text on blue background highlight given to
    // the selected option text when the (still closed) <select> receives focus
    // in IE and (under certain conditions) Edge, as it looks bad and cannot be made to
    // match the appearance of the native widget.
    // See https://github.com/twbs/bootstrap/issues/19398.
    color: $input-color;
    background-color: $input-bg;
  }
}

// Make file inputs better match text inputs by forcing them to new lines.
.form-control-file,
.form-control-range {
  display: block;
  width: 100%;
}


//
// Labels
//

// For use with horizontal and inline forms, when you need the label (or legend)
// text to align with the form controls.
.col-form-label {
  padding-top: calc(#{$input-padding-y} + #{$input-border-width});
  padding-bottom: calc(#{$input-padding-y} + #{$input-border-width});
  margin-bottom: 0; // Override the `<label>/<legend>` default
  font-size: inherit; // Override the `<legend>` default
  line-height: $input-line-height;
}

.col-form-label-lg {
  padding-top: calc(#{$input-padding-y-lg} + #{$input-border-width});
  padding-bottom: calc(#{$input-padding-y-lg} + #{$input-border-width});
  font-size: $font-size-lg;
  line-height: $input-line-height-lg;
}

.col-form-label-sm {
  padding-top: calc(#{$input-padding-y-sm} + #{$input-border-width});
  padding-bottom: calc(#{$input-padding-y-sm} + #{$input-border-width});
  font-size: $font-size-sm;
  line-height: $input-line-height-sm;
}


// Readonly controls as plain text
//
// Apply class to a readonly input to make it appear like regular plain
// text (without any border, background color, focus indicator)

.form-control-plaintext {
  display: block;
  width: 100%;
  padding-top: $input-padding-y;
  padding-bottom: $input-padding-y;
  margin-bottom: 0; // match inputs if this class comes on inputs with default margins
  line-height: $input-line-height;
  background-color: transparent;
  border: solid transparent;
  border-width: $input-border-width 0;

  &.form-control-sm,
  &.form-control-lg {
    padding-right: 0;
    padding-left: 0;
  }
}


// Form control sizing
//
// Build on `.form-control` with modifier classes to decrease or increase the
// height and font-size of form controls.
//
// The `.form-group-* form-control` variations are sadly duplicated to avoid the
// issue documented in https://github.com/twbs/bootstrap/issues/15074.

.form-control-sm {
  padding: $input-padding-y-sm $input-padding-x-sm;
  font-size: $font-size-sm;
  line-height: $input-line-height-sm;
  @include border-radius($input-border-radius-sm);
}

select.form-control-sm {
  &:not([size]):not([multiple]) {
    height: $input-height-sm;
  }
}

.form-control-lg {
  padding: $input-padding-y-lg $input-padding-x-lg;
  font-size: $font-size-lg;
  line-height: $input-line-height-lg;
  @include border-radius($input-border-radius-lg);
}

select.form-control-lg {
  &:not([size]):not([multiple]) {
    height: $input-height-lg;
  }
}


// Form groups
//
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.

.form-group {
  margin-bottom: $form-group-margin-bottom;
}

.form-text {
  display: block;
  margin-top: $form-text-margin-top;
}


// Form grid
//
// Special replacement for our grid system's `.row` for tighter form layouts.

.form-row {
  display: flex;
  flex-wrap: wrap;
  margin-right: -5px;
  margin-left: -5px;

  > .col,
  > [class*="col-"] {
    padding-right: 5px;
    padding-left: 5px;
  }
}


// Checkboxes and radios
//
// Indent the labels to position radios/checkboxes as hanging controls.

.form-check {
  position: relative;
  display: block;
  padding-left: $form-check-input-gutter;
}

.form-check-input {
  position: absolute;
  margin-top: $form-check-input-margin-y;
  margin-left: -$form-check-input-gutter;

  &:disabled ~ .form-check-label {
    color: $text-muted;
  }
}

.form-check-label {
  margin-bottom: 0; // Override default `<label>` bottom margin
}

.form-check-inline {
  display: inline-flex;
  align-items: center;
  padding-left: 0; // Override base .form-check
  margin-right: $form-check-inline-margin-x;

  // Undo .form-check-input defaults and add some `margin-right`.
  .form-check-input {
    position: static;
    margin-top: 0;
    margin-right: $form-check-inline-input-margin-x;
    margin-left: 0;
  }
}


// Form validation
//
// Provide feedback to users when form field values are valid or invalid. Works
// primarily for client-side validation via scoped `:invalid` and `:valid`
// pseudo-classes but also includes `.is-invalid` and `.is-valid` classes for
// server side validation.

@include form-validation-state("valid", $form-feedback-valid-color);
@include form-validation-state("invalid", $form-feedback-invalid-color);

// Inline forms
//
// Make forms appear inline(-block) by adding the `.form-inline` class. Inline
// forms begin stacked on extra small (mobile) devices and then go inline when
// viewports reach <768px.
//
// Requires wrapping inputs and labels with `.form-group` for proper display of
// default HTML form controls and our custom form controls (e.g., input groups).

.form-inline {
  display: flex;
  flex-flow: row wrap;
  align-items: center; // Prevent shorter elements from growing to same height as others (e.g., small buttons growing to normal sized button height)

  // Because we use flex, the initial sizing of checkboxes is collapsed and
  // doesn't occupy the full-width (which is what we want for xs grid tier),
  // so we force that here.
  .form-check {
    width: 100%;
  }

  // Kick in the inline
  @include media-breakpoint-up(sm) {
    label {
      display: flex;
      align-items: center;
      justify-content: center;
      margin-bottom: 0;
    }

    // Inline-block all the things for "inline"
    .form-group {
      display: flex;
      flex: 0 0 auto;
      flex-flow: row wrap;
      align-items: center;
      margin-bottom: 0;
    }

    // Allow folks to *not* use `.form-group`
    .form-control {
      display: inline-block;
      width: auto; // Prevent labels from stacking above inputs in `.form-group`
      vertical-align: middle;
    }

    // Make static controls behave like regular ones
    .form-control-plaintext {
      display: inline-block;
    }

    .input-group {
      width: auto;
    }

    // Remove default margin on radios/checkboxes that were used for stacking, and
    // then undo the floating of radios and checkboxes to match.
    .form-check {
      display: flex;
      align-items: center;
      justify-content: center;
      width: auto;
      padding-left: 0;
    }
    .form-check-input {
      position: relative;
      margin-top: 0;
      margin-right: $form-check-input-margin-x;
      margin-left: 0;
    }

    .custom-control {
      align-items: center;
      justify-content: center;
    }
    .custom-control-label {
      margin-bottom: 0;
    }
  }
}

// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.btn {
  display: inline-block;
  font-weight: $btn-font-weight;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: $btn-border-width solid transparent;
  @include button-size($btn-padding-y, $btn-padding-x, $font-size-base, $btn-line-height, $btn-border-radius);
  @include transition($btn-transition);

  // Share hover and focus styles
  @include hover-focus {
    text-decoration: none;
  }

  &:focus,
  &.focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  }

  // Opinionated: add "hand" cursor to non-disabled .btn elements
  &:not(:disabled):not(.disabled) {
    cursor: pointer;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    background-image: none;
    @include box-shadow($btn-active-box-shadow);

    &:focus {
      @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
    }
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}


//
// Alternate buttons
//

@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @include button-variant($value, $value);
  }
}

@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
    @include button-outline-variant($value);
  }
}


//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: $font-weight-normal;
  color: $link-color;
  background-color: transparent;

  @include hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
    border-color: transparent;
  }

  &:focus,
  &.focus {
    text-decoration: $link-hover-decoration;
    border-color: transparent;
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
  }

  // No need for an active state here
}


//
// Button Sizes
//

.btn-lg {
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $font-size-lg, $btn-line-height-lg, $btn-border-radius-lg);
}

.btn-sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $font-size-sm, $btn-line-height-sm, $btn-border-radius-sm);
}


//
// Block button
//

.btn-block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  + .btn-block {
    margin-top: $btn-block-spacing-y;
  }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

// stylelint-disable selector-no-qualifying-type

.fade {
  opacity: 0;
  @include transition($transition-fade);

  &.show {
    opacity: 1;
  }
}

.collapse {
  display: none;
  &.show {
    display: block;
  }
}

tr {
  &.collapse.show {
    display: table-row;
  }
}

tbody {
  &.collapse.show {
    display: table-row-group;
  }
}

.collapsing {
  position: relative;
  height: 0;
  overflow: hidden;
  @include transition($transition-collapse);
}

// The dropdown wrapper (`<div>`)
.dropup,
.dropdown {
  position: relative;
}

.dropdown-toggle {
  // Generate the caret automatically
  @include caret;
}

// The dropdown menu
.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: $zindex-dropdown;
  display: none; // none by default, but block on "open" of the menu
  float: left;
  min-width: $dropdown-min-width;
  padding: $dropdown-padding-y 0;
  margin: $dropdown-spacer 0 0; // override default ul
  font-size: $font-size-base; // Redeclare because nesting can cause inheritance issues
  color: $body-color;
  text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
  list-style: none;
  background-color: $dropdown-bg;
  background-clip: padding-box;
  border: $dropdown-border-width solid $dropdown-border-color;
  @include border-radius($dropdown-border-radius);
  @include box-shadow($dropdown-box-shadow);
}

// Allow for dropdowns to go bottom up (aka, dropup-menu)
// Just add .dropup after the standard .dropdown class and you're set.
.dropup {
  .dropdown-menu {
    margin-top: 0;
    margin-bottom: $dropdown-spacer;
  }

  .dropdown-toggle {
    @include caret(up);
  }
}

.dropright {
  .dropdown-menu {
    margin-top: 0;
    margin-left: $dropdown-spacer;
  }

  .dropdown-toggle {
    @include caret(right);
    &::after {
      vertical-align: 0;
    }
  }
}

.dropleft {
  .dropdown-menu {
    margin-top: 0;
    margin-right: $dropdown-spacer;
  }

  .dropdown-toggle {
    @include caret(left);
    &::before {
      vertical-align: 0;
    }
  }
}

// Dividers (basically an `<hr>`) within the dropdown
.dropdown-divider {
  @include nav-divider($dropdown-divider-bg);
}

// Links, buttons, and more within the dropdown menu
//
// `<button>`-specific styles are denoted with `// For <button>s`
.dropdown-item {
  display: block;
  width: 100%; // For `<button>`s
  padding: $dropdown-item-padding-y $dropdown-item-padding-x;
  clear: both;
  font-weight: $font-weight-normal;
  color: $dropdown-link-color;
  text-align: inherit; // For `<button>`s
  white-space: nowrap; // prevent links from randomly breaking onto new lines
  background-color: transparent; // For `<button>`s
  border: 0; // For `<button>`s

  @include hover-focus {
    color: $dropdown-link-hover-color;
    text-decoration: none;
    @include gradient-bg($dropdown-link-hover-bg);
  }

  &.active,
  &:active {
    color: $dropdown-link-active-color;
    text-decoration: none;
    @include gradient-bg($dropdown-link-active-bg);
  }

  &.disabled,
  &:disabled {
    color: $dropdown-link-disabled-color;
    background-color: transparent;
    // Remove CSS gradients if they're enabled
    @if $enable-gradients {
      background-image: none;
    }
  }
}

.dropdown-menu.show {
  display: block;
}

// Dropdown section headers
.dropdown-header {
  display: block;
  padding: $dropdown-padding-y $dropdown-item-padding-x;
  margin-bottom: 0; // for use with heading elements
  font-size: $font-size-sm;
  color: $dropdown-header-color;
  white-space: nowrap; // as with > li > a
}

// stylelint-disable selector-no-qualifying-type

// Make the div behave like a button
.btn-group,
.btn-group-vertical {
  position: relative;
  display: inline-flex;
  vertical-align: middle; // match .btn alignment given font-size hack above

  > .btn {
    position: relative;
    flex: 0 1 auto;

    // Bring the hover, focused, and "active" buttons to the front to overlay
    // the borders properly
    @include hover {
      z-index: 1;
    }
    &:focus,
    &:active,
    &.active {
      z-index: 1;
    }
  }

  // Prevent double borders when buttons are next to each other
  .btn + .btn,
  .btn + .btn-group,
  .btn-group + .btn,
  .btn-group + .btn-group {
    margin-left: -$btn-border-width;
  }
}

// Optional: Group multiple button groups together for a toolbar
.btn-toolbar {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;

  .input-group {
    width: auto;
  }
}

.btn-group {
  > .btn:first-child {
    margin-left: 0;
  }

  // Reset rounded corners
  > .btn:not(:last-child):not(.dropdown-toggle),
  > .btn-group:not(:last-child) > .btn {
    @include border-right-radius(0);
  }

  > .btn:not(:first-child),
  > .btn-group:not(:first-child) > .btn {
    @include border-left-radius(0);
  }
}

// Sizing
//
// Remix the default button sizing classes into new ones for easier manipulation.

.btn-group-sm > .btn { @extend .btn-sm; }
.btn-group-lg > .btn { @extend .btn-lg; }


//
// Split button dropdowns
//

.dropdown-toggle-split {
  padding-right: $btn-padding-x * .75;
  padding-left: $btn-padding-x * .75;

  &::after {
    margin-left: 0;
  }
}

.btn-sm + .dropdown-toggle-split {
  padding-right: $btn-padding-x-sm * .75;
  padding-left: $btn-padding-x-sm * .75;
}

.btn-lg + .dropdown-toggle-split {
  padding-right: $btn-padding-x-lg * .75;
  padding-left: $btn-padding-x-lg * .75;
}


// The clickable button for toggling the menu
// Set the same inset shadow as the :active state
.btn-group.show .dropdown-toggle {
  @include box-shadow($btn-active-box-shadow);

  // Show no shadow for `.btn-link` since it has no other button styles.
  &.btn-link {
    @include box-shadow(none);
  }
}


//
// Vertical button groups
//

.btn-group-vertical {
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;

  .btn,
  .btn-group {
    width: 100%;
  }

  > .btn + .btn,
  > .btn + .btn-group,
  > .btn-group + .btn,
  > .btn-group + .btn-group {
    margin-top: -$btn-border-width;
    margin-left: 0;
  }

  // Reset rounded corners
  > .btn:not(:last-child):not(.dropdown-toggle),
  > .btn-group:not(:last-child) > .btn {
    @include border-bottom-radius(0);
  }

  > .btn:not(:first-child),
  > .btn-group:not(:first-child) > .btn {
    @include border-top-radius(0);
  }
}


// Checkbox and radio options
//
// In order to support the browser's form validation feedback, powered by the
// `required` attribute, we have to "hide" the inputs via `clip`. We cannot use
// `display: none;` or `visibility: hidden;` as that also hides the popover.
// Simply visually hiding the inputs via `opacity` would leave them clickable in
// certain cases which is prevented by using `clip` and `pointer-events`.
// This way, we ensure a DOM element is visible to position the popover from.
//
// See https://github.com/twbs/bootstrap/pull/12794 and
// https://github.com/twbs/bootstrap/pull/14559 for more information.

.btn-group-toggle {
  > .btn,
  > .btn-group > .btn {
    margin-bottom: 0; // Override default `<label>` value

    input[type="radio"],
    input[type="checkbox"] {
      position: absolute;
      clip: rect(0, 0, 0, 0);
      pointer-events: none;
    }
  }
}

// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.input-group {
  position: relative;
  display: flex;
  flex-wrap: wrap; // For form validation feedback
  align-items: stretch;
  width: 100%;

  > .form-control,
  > .custom-select,
  > .custom-file {
    position: relative; // For focus state's z-index
    flex: 1 1 auto;
    // Add width 1% and flex-basis auto to ensure that button will not wrap out
    // the column. Applies to IE Edge+ and Firefox. Chrome does not require this.
    width: 1%;
    margin-bottom: 0;

    // Bring the "active" form control to the top of surrounding elements
    &:focus {
      z-index: 3;
    }

    + .form-control,
    + .custom-select,
    + .custom-file {
      margin-left: -$input-border-width;
    }
  }

  > .form-control,
  > .custom-select {
    &:not(:last-child) { @include border-right-radius(0); }
    &:not(:first-child) { @include border-left-radius(0); }
  }

  // Custom file inputs have more complex markup, thus requiring different
  // border-radius overrides.
  > .custom-file {
    display: flex;
    align-items: center;

    &:not(:last-child) .custom-file-label,
    &:not(:last-child) .custom-file-label::before { @include border-right-radius(0); }
    &:not(:first-child) .custom-file-label,
    &:not(:first-child) .custom-file-label::before { @include border-left-radius(0); }
  }
}


// Prepend and append
//
// While it requires one extra layer of HTML for each, dedicated prepend and
// append elements allow us to 1) be less clever, 2) simplify our selectors, and
// 3) support HTML5 form validation.

.input-group-prepend,
.input-group-append {
  display: flex;

  // Ensure buttons are always above inputs for more visually pleasing borders.
  // This isn't needed for `.input-group-text` since it shares the same border-color
  // as our inputs.
  .btn {
    position: relative;
    z-index: 2;
  }

  .btn + .btn,
  .btn + .input-group-text,
  .input-group-text + .input-group-text,
  .input-group-text + .btn {
    margin-left: -$input-border-width;
  }
}

.input-group-prepend { margin-right: -$input-border-width; }
.input-group-append { margin-left: -$input-border-width; }


// Textual addons
//
// Serves as a catch-all element for any text or radio/checkbox input you wish
// to prepend or append to an input.

.input-group-text {
  display: flex;
  align-items: center;
  padding: $input-padding-y $input-padding-x;
  margin-bottom: 0; // Allow use of <label> elements by overriding our default margin-bottom
  font-size: $font-size-base; // Match inputs
  font-weight: $font-weight-normal;
  line-height: $input-line-height;
  color: $input-group-addon-color;
  text-align: center;
  white-space: nowrap;
  background-color: $input-group-addon-bg;
  border: $input-border-width solid $input-group-addon-border-color;
  @include border-radius($input-border-radius);

  // Nuke default margins from checkboxes and radios to vertically center within.
  input[type="radio"],
  input[type="checkbox"] {
    margin-top: 0;
  }
}


// Sizing
//
// Remix the default form control sizing classes into new ones for easier
// manipulation.

.input-group-lg > .form-control,
.input-group-lg > .input-group-prepend > .input-group-text,
.input-group-lg > .input-group-append > .input-group-text,
.input-group-lg > .input-group-prepend > .btn,
.input-group-lg > .input-group-append > .btn {
  @extend .form-control-lg;
}

.input-group-sm > .form-control,
.input-group-sm > .input-group-prepend > .input-group-text,
.input-group-sm > .input-group-append > .input-group-text,
.input-group-sm > .input-group-prepend > .btn,
.input-group-sm > .input-group-append > .btn {
  @extend .form-control-sm;
}


// Prepend and append rounded corners
//
// These rulesets must come after the sizing ones to properly override sm and lg
// border-radius values when extending. They're more specific than we'd like
// with the `.input-group >` part, but without it, we cannot override the sizing.


.input-group > .input-group-prepend > .btn,
.input-group > .input-group-prepend > .input-group-text,
.input-group > .input-group-append:not(:last-child) > .btn,
.input-group > .input-group-append:not(:last-child) > .input-group-text,
.input-group > .input-group-append:last-child > .btn:not(:last-child):not(.dropdown-toggle),
.input-group > .input-group-append:last-child > .input-group-text:not(:last-child) {
  @include border-right-radius(0);
}

.input-group > .input-group-append > .btn,
.input-group > .input-group-append > .input-group-text,
.input-group > .input-group-prepend:not(:first-child) > .btn,
.input-group > .input-group-prepend:not(:first-child) > .input-group-text,
.input-group > .input-group-prepend:first-child > .btn:not(:first-child),
.input-group > .input-group-prepend:first-child > .input-group-text:not(:first-child) {
  @include border-left-radius(0);
}

// Embedded icons from Open Iconic.
// Released under MIT and copyright 2014 Waybury.
// https://useiconic.com/open


// Checkboxes and radios
//
// Base class takes care of all the key behavioral aspects.

.custom-control {
  position: relative;
  display: block;
  min-height: (1rem * $line-height-base);
  padding-left: $custom-control-gutter;
}

.custom-control-inline {
  display: inline-flex;
  margin-right: $custom-control-spacer-x;
}

.custom-control-input {
  position: absolute;
  z-index: -1; // Put the input behind the label so it doesn't overlay text
  opacity: 0;

  &:checked ~ .custom-control-label::before {
    color: $custom-control-indicator-checked-color;
    @include gradient-bg($custom-control-indicator-checked-bg);
    @include box-shadow($custom-control-indicator-checked-box-shadow);
  }

  &:focus ~ .custom-control-label::before {
    // the mixin is not used here to make sure there is feedback
    box-shadow: $custom-control-indicator-focus-box-shadow;
  }

  &:active ~ .custom-control-label::before {
    color: $custom-control-indicator-active-color;
    background-color: $custom-control-indicator-active-bg;
    @include box-shadow($custom-control-indicator-active-box-shadow);
  }

  &:disabled {
    ~ .custom-control-label {
      color: $custom-control-label-disabled-color;

      &::before {
        background-color: $custom-control-indicator-disabled-bg;
      }
    }
  }
}

// Custom control indicators
//
// Build the custom controls out of psuedo-elements.

.custom-control-label {
  margin-bottom: 0;

  // Background-color and (when enabled) gradient
  &::before {
    position: absolute;
    top: (($line-height-base - $custom-control-indicator-size) / 2);
    left: 0;
    display: block;
    width: $custom-control-indicator-size;
    height: $custom-control-indicator-size;
    pointer-events: none;
    content: "";
    user-select: none;
    background-color: $custom-control-indicator-bg;
    @include box-shadow($custom-control-indicator-box-shadow);
  }

  // Foreground (icon)
  &::after {
    position: absolute;
    top: (($line-height-base - $custom-control-indicator-size) / 2);
    left: 0;
    display: block;
    width: $custom-control-indicator-size;
    height: $custom-control-indicator-size;
    content: "";
    background-repeat: no-repeat;
    background-position: center center;
    background-size: $custom-control-indicator-bg-size;
  }
}


// Checkboxes
//
// Tweak just a few things for checkboxes.

.custom-checkbox {
  .custom-control-label::before {
    @include border-radius($custom-checkbox-indicator-border-radius);
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::before {
      @include gradient-bg($custom-control-indicator-checked-bg);
    }
    &::after {
      background-image: $custom-checkbox-indicator-icon-checked;
    }
  }

  .custom-control-input:indeterminate ~ .custom-control-label {
    &::before {
      @include gradient-bg($custom-checkbox-indicator-indeterminate-bg);
      @include box-shadow($custom-checkbox-indicator-indeterminate-box-shadow);
    }
    &::after {
      background-image: $custom-checkbox-indicator-icon-indeterminate;
    }
  }

  .custom-control-input:disabled {
    &:checked ~ .custom-control-label::before {
      background-color: $custom-control-indicator-checked-disabled-bg;
    }
    &:indeterminate ~ .custom-control-label::before {
      background-color: $custom-control-indicator-checked-disabled-bg;
    }
  }
}

// Radios
//
// Tweak just a few things for radios.

.custom-radio {
  .custom-control-label::before {
    border-radius: $custom-radio-indicator-border-radius;
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::before {
      @include gradient-bg($custom-control-indicator-checked-bg);
    }
    &::after {
      background-image: $custom-radio-indicator-icon-checked;
    }
  }

  .custom-control-input:disabled {
    &:checked ~ .custom-control-label::before {
      background-color: $custom-control-indicator-checked-disabled-bg;
    }
  }
}


// Select
//
// Replaces the browser default select with a custom one, mostly pulled from
// http://primercss.io.
//

.custom-select {
  display: inline-block;
  width: 100%;
  height: $custom-select-height;
  padding: $custom-select-padding-y ($custom-select-padding-x + $custom-select-indicator-padding) $custom-select-padding-y $custom-select-padding-x;
  line-height: $custom-select-line-height;
  color: $custom-select-color;
  vertical-align: middle;
  background: $custom-select-bg $custom-select-indicator no-repeat right $custom-select-padding-x center;
  background-size: $custom-select-bg-size;
  border: $custom-select-border-width solid $custom-select-border-color;
  @if $enable-rounded {
    border-radius: $custom-select-border-radius;
  } @else {
    border-radius: 0;
  }
  appearance: none;

  &:focus {
    border-color: $custom-select-focus-border-color;
    outline: 0;
    box-shadow: $custom-select-focus-box-shadow;

    &::-ms-value {
      // For visual consistency with other platforms/browsers,
      // suppress the default white text on blue background highlight given to
      // the selected option text when the (still closed) <select> receives focus
      // in IE and (under certain conditions) Edge.
      // See https://github.com/twbs/bootstrap/issues/19398.
      color: $input-color;
      background-color: $input-bg;
    }
  }

  &[multiple],
  &[size]:not([size="1"]) {
    height: auto;
    padding-right: $custom-select-padding-x;
    background-image: none;
  }

  &:disabled {
    color: $custom-select-disabled-color;
    background-color: $custom-select-disabled-bg;
  }

  // Hides the default caret in IE11
  &::-ms-expand {
    opacity: 0;
  }
}

.custom-select-sm {
  height: $custom-select-height-sm;
  padding-top: $custom-select-padding-y;
  padding-bottom: $custom-select-padding-y;
  font-size: $custom-select-font-size-sm;
}

.custom-select-lg {
  height: $custom-select-height-lg;
  padding-top: $custom-select-padding-y;
  padding-bottom: $custom-select-padding-y;
  font-size: $custom-select-font-size-lg;
}


// File
//
// Custom file input.

.custom-file {
  position: relative;
  display: inline-block;
  width: 100%;
  height: $custom-file-height;
  margin-bottom: 0;
}

.custom-file-input {
  position: relative;
  z-index: 2;
  width: 100%;
  height: $custom-file-height;
  margin: 0;
  opacity: 0;

  &:focus ~ .custom-file-control {
    border-color: $custom-file-focus-border-color;
    box-shadow: $custom-file-focus-box-shadow;

    &::before {
      border-color: $custom-file-focus-border-color;
    }
  }

  @each $lang, $value in $custom-file-text {
    &:lang(#{$lang}) ~ .custom-file-label::after {
      content: $value;
    }
  }
}

.custom-file-label {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  z-index: 1;
  height: $custom-file-height;
  padding: $custom-file-padding-y $custom-file-padding-x;
  line-height: $custom-file-line-height;
  color: $custom-file-color;
  background-color: $custom-file-bg;
  border: $custom-file-border-width solid $custom-file-border-color;
  @include border-radius($custom-file-border-radius);
  @include box-shadow($custom-file-box-shadow);

  &::after {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    z-index: 3;
    display: block;
    height: calc(#{$custom-file-height} - #{$custom-file-border-width} * 2);
    padding: $custom-file-padding-y $custom-file-padding-x;
    line-height: $custom-file-line-height;
    color: $custom-file-button-color;
    content: "Browse";
    @include gradient-bg($custom-file-button-bg);
    border-left: $custom-file-border-width solid $custom-file-border-color;
    @include border-radius(0 $custom-file-border-radius $custom-file-border-radius 0);
  }
}

// Base class
//
// Kickstart any navigation component with a set of style resets. Works with
// `<nav>`s or `<ul>`s.

.nav {
  display: flex;
  flex-wrap: wrap;
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
}

.nav-link {
  display: block;
  padding: $nav-link-padding-y $nav-link-padding-x;

  @include hover-focus {
    text-decoration: none;
  }

  // Disabled state lightens text
  &.disabled {
    color: $nav-link-disabled-color;
  }
}

//
// Tabs
//

.nav-tabs {
  border-bottom: $nav-tabs-border-width solid $nav-tabs-border-color;

  .nav-item {
    margin-bottom: -$nav-tabs-border-width;
  }

  .nav-link {
    border: $nav-tabs-border-width solid transparent;
    @include border-top-radius($nav-tabs-border-radius);

    @include hover-focus {
      border-color: $nav-tabs-link-hover-border-color;
    }

    &.disabled {
      color: $nav-link-disabled-color;
      background-color: transparent;
      border-color: transparent;
    }
  }

  .nav-link.active,
  .nav-item.show .nav-link {
    color: $nav-tabs-link-active-color;
    background-color: $nav-tabs-link-active-bg;
    border-color: $nav-tabs-link-active-border-color;
  }

  .dropdown-menu {
    // Make dropdown border overlap tab border
    margin-top: -$nav-tabs-border-width;
    // Remove the top rounded corners here since there is a hard edge above the menu
    @include border-top-radius(0);
  }
}


//
// Pills
//

.nav-pills {
  .nav-link {
    @include border-radius($nav-pills-border-radius);
  }

  .nav-link.active,
  .show > .nav-link {
    color: $nav-pills-link-active-color;
    background-color: $nav-pills-link-active-bg;
  }
}


//
// Justified variants
//

.nav-fill {
  .nav-item {
    flex: 1 1 auto;
    text-align: center;
  }
}

.nav-justified {
  .nav-item {
    flex-basis: 0;
    flex-grow: 1;
    text-align: center;
  }
}


// Tabbable tabs
//
// Hide tabbable panes to start, show them when `.active`

.tab-content {
  > .tab-pane {
    display: none;
  }
  > .active {
    display: block;
  }
}

// Contents
//
// Navbar
// Navbar brand
// Navbar nav
// Navbar text
// Navbar divider
// Responsive navbar
// Navbar position
// Navbar themes


// Navbar
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.navbar {
  position: relative;
  display: flex;
  flex-wrap: wrap; // allow us to do the line break for collapsing content
  align-items: center;
  justify-content: space-between; // space out brand from logo
  padding: $navbar-padding-y $navbar-padding-x;

  // Because flex properties aren't inherited, we need to redeclare these first
  // few properities so that content nested within behave properly.
  > .container,
  > .container-fluid {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
  }
}


// Navbar brand
//
// Used for brand, project, or site names.

.navbar-brand {
  display: inline-block;
  padding-top: $navbar-brand-padding-y;
  padding-bottom: $navbar-brand-padding-y;
  margin-right: $navbar-padding-x;
  font-size: $navbar-brand-font-size;
  line-height: inherit;
  white-space: nowrap;

  @include hover-focus {
    text-decoration: none;
  }
}


// Navbar nav
//
// Custom navbar navigation (doesn't require `.nav`, but does make use of `.nav-link`).

.navbar-nav {
  display: flex;
  flex-direction: column; // cannot use `inherit` to get the `.navbar`s value
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;

  .nav-link {
    padding-right: 0;
    padding-left: 0;
  }

  .dropdown-menu {
    position: static;
    float: none;
  }
}


// Navbar text
//
//

.navbar-text {
  display: inline-block;
  padding-top: $nav-link-padding-y;
  padding-bottom: $nav-link-padding-y;
}


// Responsive navbar
//
// Custom styles for responsive collapsing and toggling of navbar contents.
// Powered by the collapse Bootstrap JavaScript plugin.

// When collapsed, prevent the toggleable navbar contents from appearing in
// the default flexbox row orienation. Requires the use of `flex-wrap: wrap`
// on the `.navbar` parent.
.navbar-collapse {
  flex-basis: 100%;
  flex-grow: 1;
  // For always expanded or extra full navbars, ensure content aligns itself
  // properly vertically. Can be easily overridden with flex utilities.
  align-items: center;
}

// Button for toggling the navbar when in its collapsed state
.navbar-toggler {
  padding: $navbar-toggler-padding-y $navbar-toggler-padding-x;
  font-size: $navbar-toggler-font-size;
  line-height: 1;
  background-color: transparent; // remove default button style
  border: $border-width solid transparent; // remove default button style
  @include border-radius($navbar-toggler-border-radius);

  @include hover-focus {
    text-decoration: none;
  }

  // Opinionated: add "hand" cursor to non-disabled .navbar-toggler elements
  &:not(:disabled):not(.disabled) {
    cursor: pointer;
  }
}

// Keep as a separate element so folks can easily override it with another icon
// or image file as needed.
.navbar-toggler-icon {
  display: inline-block;
  width: 1.5em;
  height: 1.5em;
  vertical-align: middle;
  content: "";
  background: no-repeat center center;
  background-size: 100% 100%;
}

// Generate series of `.navbar-expand-*` responsive classes for configuring
// where your navbar collapses.
.navbar-expand {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-down($breakpoint) {
        > .container,
        > .container-fluid {
          padding-right: 0;
          padding-left: 0;
        }
      }

      @include media-breakpoint-up($next) {
        flex-flow: row nowrap;
        justify-content: flex-start;

        .navbar-nav {
          flex-direction: row;

          .dropdown-menu {
            position: absolute;
          }

          .dropdown-menu-right {
            right: 0;
            left: auto; // Reset the default from `.dropdown-menu`
          }

          .nav-link {
            padding-right: $navbar-nav-link-padding-x;
            padding-left: $navbar-nav-link-padding-x;
          }
        }

        // For nesting containers, have to redeclare for alignment purposes
        > .container,
        > .container-fluid {
          flex-wrap: nowrap;
        }

        .navbar-collapse {
          display: flex !important;  // stylelint-disable-line declaration-no-important

          // Changes flex-bases to auto because of an IE10 bug
          flex-basis: auto;
        }

        .navbar-toggler {
          display: none;
        }

        .dropup {
          .dropdown-menu {
            top: auto;
            bottom: 100%;
          }
        }
      }
    }
  }
}


// Navbar themes
//
// Styles for switching between navbars with light or dark background.

// Dark links against a light background
.navbar-light {
  .navbar-brand {
    color: $navbar-light-active-color;

    @include hover-focus {
      color: $navbar-light-active-color;
    }
  }

  .navbar-nav {
    .nav-link {
      color: $navbar-light-color;

      @include hover-focus {
        color: $navbar-light-hover-color;
      }

      &.disabled {
        color: $navbar-light-disabled-color;
      }
    }

    .show > .nav-link,
    .active > .nav-link,
    .nav-link.show,
    .nav-link.active {
      color: $navbar-light-active-color;
    }
  }

  .navbar-toggler {
    color: $navbar-light-color;
    border-color: $navbar-light-toggler-border-color;
  }

  .navbar-toggler-icon {
    background-image: $navbar-light-toggler-icon-bg;
  }

  .navbar-text {
    color: $navbar-light-color;
    a {
      color: $navbar-light-active-color;

      @include hover-focus {
        color: $navbar-light-active-color;
      }
    }
  }
}

// White links against a dark background
.navbar-dark {
  .navbar-brand {
    color: $navbar-dark-active-color;

    @include hover-focus {
      color: $navbar-dark-active-color;
    }
  }

  .navbar-nav {
    .nav-link {
      color: $navbar-dark-color;

      @include hover-focus {
        color: $navbar-dark-hover-color;
      }

      &.disabled {
        color: $navbar-dark-disabled-color;
      }
    }

    .show > .nav-link,
    .active > .nav-link,
    .nav-link.show,
    .nav-link.active {
      color: $navbar-dark-active-color;
    }
  }

  .navbar-toggler {
    color: $navbar-dark-color;
    border-color: $navbar-dark-toggler-border-color;
  }

  .navbar-toggler-icon {
    background-image: $navbar-dark-toggler-icon-bg;
  }

  .navbar-text {
    color: $navbar-dark-color;
    a {
      color: $navbar-dark-active-color;

      @include hover-focus {
        color: $navbar-dark-active-color;
      }
    }
  }
}

//
// Base styles
//

.card {
  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0;
  word-wrap: break-word;
  background-color: $card-bg;
  background-clip: border-box;
  border: $card-border-width solid $card-border-color;
  @include border-radius($card-border-radius);

  > hr {
    margin-right: 0;
    margin-left: 0;
  }

  > .list-group:first-child {
    .list-group-item:first-child {
      @include border-top-radius($card-border-radius);
    }
  }

  > .list-group:last-child {
    .list-group-item:last-child {
      @include border-bottom-radius($card-border-radius);
    }
  }
}

.card-body {
  // Enable `flex-grow: 1` for decks and groups so that card blocks take up
  // as much space as possible, ensuring footers are aligned to the bottom.
  flex: 1 1 auto;
  padding: $card-spacer-x;
}

.card-title {
  margin-bottom: $card-spacer-y;
}

.card-subtitle {
  margin-top: -($card-spacer-y / 2);
  margin-bottom: 0;
}

.card-text:last-child {
  margin-bottom: 0;
}

.card-link {
  @include hover {
    text-decoration: none;
  }

  + .card-link {
    margin-left: $card-spacer-x;
  }
}

//
// Optional textual caps
//

.card-header {
  padding: $card-spacer-y $card-spacer-x;
  margin-bottom: 0; // Removes the default margin-bottom of <hN>
  background-color: $card-cap-bg;
  border-bottom: $card-border-width solid $card-border-color;

  &:first-child {
    @include border-radius($card-inner-border-radius $card-inner-border-radius 0 0);
  }

  + .list-group {
    .list-group-item:first-child {
      border-top: 0;
    }
  }
}

.card-footer {
  padding: $card-spacer-y $card-spacer-x;
  background-color: $card-cap-bg;
  border-top: $card-border-width solid $card-border-color;

  &:last-child {
    @include border-radius(0 0 $card-inner-border-radius $card-inner-border-radius);
  }
}


//
// Header navs
//

.card-header-tabs {
  margin-right: -($card-spacer-x / 2);
  margin-bottom: -$card-spacer-y;
  margin-left: -($card-spacer-x / 2);
  border-bottom: 0;
}

.card-header-pills {
  margin-right: -($card-spacer-x / 2);
  margin-left: -($card-spacer-x / 2);
}

// Card image
.card-img-overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  padding: $card-img-overlay-padding;
}

.card-img {
  width: 100%; // Required because we use flexbox and this inherently applies align-self: stretch
  @include border-radius($card-inner-border-radius);
}

// Card image caps
.card-img-top {
  width: 100%; // Required because we use flexbox and this inherently applies align-self: stretch
  @include border-top-radius($card-inner-border-radius);
}

.card-img-bottom {
  width: 100%; // Required because we use flexbox and this inherently applies align-self: stretch
  @include border-bottom-radius($card-inner-border-radius);
}


// Card deck

.card-deck {
  display: flex;
  flex-direction: column;

  .card {
    margin-bottom: $card-deck-margin;
  }

  @include media-breakpoint-up(sm) {
    flex-flow: row wrap;
    margin-right: -$card-deck-margin;
    margin-left: -$card-deck-margin;

    .card {
      display: flex;
      // Flexbugs #4: https://github.com/philipwalton/flexbugs#4-flex-shorthand-declarations-with-unitless-flex-basis-values-are-ignored
      flex: 1 0 0%;
      flex-direction: column;
      margin-right: $card-deck-margin;
      margin-bottom: 0; // Override the default
      margin-left: $card-deck-margin;
    }
  }
}


//
// Card groups
//

.card-group {
  display: flex;
  flex-direction: column;

  // The child selector allows nested `.card` within `.card-group`
  // to display properly.
  > .card {
    margin-bottom: $card-group-margin;
  }

  @include media-breakpoint-up(sm) {
    flex-flow: row wrap;
    // The child selector allows nested `.card` within `.card-group`
    // to display properly.
    > .card {
      // Flexbugs #4: https://github.com/philipwalton/flexbugs#4-flex-shorthand-declarations-with-unitless-flex-basis-values-are-ignored
      flex: 1 0 0%;
      margin-bottom: 0;

      + .card {
        margin-left: 0;
        border-left: 0;
      }

      // Handle rounded corners
      @if $enable-rounded {
        &:first-child {
          @include border-right-radius(0);

          .card-img-top,
          .card-header {
            border-top-right-radius: 0;
          }
          .card-img-bottom,
          .card-footer {
            border-bottom-right-radius: 0;
          }
        }

        &:last-child {
          @include border-left-radius(0);

          .card-img-top,
          .card-header {
            border-top-left-radius: 0;
          }
          .card-img-bottom,
          .card-footer {
            border-bottom-left-radius: 0;
          }
        }

        &:only-child {
          @include border-radius($card-border-radius);

          .card-img-top,
          .card-header {
            @include border-top-radius($card-border-radius);
          }
          .card-img-bottom,
          .card-footer {
            @include border-bottom-radius($card-border-radius);
          }
        }

        &:not(:first-child):not(:last-child):not(:only-child) {
          @include border-radius(0);

          .card-img-top,
          .card-img-bottom,
          .card-header,
          .card-footer {
            @include border-radius(0);
          }
        }
      }
    }
  }
}


//
// Columns
//

.card-columns {
  .card {
    margin-bottom: $card-columns-margin;
  }

  @include media-breakpoint-up(sm) {
    column-count: $card-columns-count;
    column-gap: $card-columns-gap;

    .card {
      display: inline-block; // Don't let them vertically span multiple columns
      width: 100%; // Don't let their width change
    }
  }
}

.breadcrumb {
  display: flex;
  flex-wrap: wrap;
  padding: $breadcrumb-padding-y $breadcrumb-padding-x;
  margin-bottom: $breadcrumb-margin-bottom;
  list-style: none;
  background-color: $breadcrumb-bg;
  @include border-radius($border-radius);
}

.breadcrumb-item {
  // The separator between breadcrumbs (by default, a forward-slash: "/")
  + .breadcrumb-item::before {
    display: inline-block; // Suppress underlining of the separator in modern browsers
    padding-right: $breadcrumb-item-padding;
    padding-left: $breadcrumb-item-padding;
    color: $breadcrumb-divider-color;
    content: "#{$breadcrumb-divider}";
  }

  // IE9-11 hack to properly handle hyperlink underlines for breadcrumbs built
  // without `<ul>`s. The `::before` pseudo-element generates an element
  // *within* the .breadcrumb-item and thereby inherits the `text-decoration`.
  //
  // To trick IE into suppressing the underline, we give the pseudo-element an
  // underline and then immediately remove it.
  + .breadcrumb-item:hover::before {
    text-decoration: underline;
  }
  // stylelint-disable-next-line no-duplicate-selectors
  + .breadcrumb-item:hover::before {
    text-decoration: none;
  }

  &.active {
    color: $breadcrumb-active-color;
  }
}

.pagination {
  display: flex;
  @include list-unstyled();
  @include border-radius();
}

.page-link {
  position: relative;
  display: block;
  padding: $pagination-padding-y $pagination-padding-x;
  margin-left: -$pagination-border-width;
  line-height: $pagination-line-height;
  color: $pagination-color;
  background-color: $pagination-bg;
  border: $pagination-border-width solid $pagination-border-color;

  &:hover {
    color: $pagination-hover-color;
    text-decoration: none;
    background-color: $pagination-hover-bg;
    border-color: $pagination-hover-border-color;
  }

  &:focus {
    z-index: 2;
    outline: 0;
    box-shadow: $pagination-focus-box-shadow;
  }

  // Opinionated: add "hand" cursor to non-disabled .page-link elements
  &:not(:disabled):not(.disabled) {
    cursor: pointer;
  }
}

.page-item {
  &:first-child {
    .page-link {
      margin-left: 0;
      @include border-left-radius($border-radius);
    }
  }
  &:last-child {
    .page-link {
      @include border-right-radius($border-radius);
    }
  }

  &.active .page-link {
    z-index: 1;
    color: $pagination-active-color;
    background-color: $pagination-active-bg;
    border-color: $pagination-active-border-color;
  }

  &.disabled .page-link {
    color: $pagination-disabled-color;
    pointer-events: none;
    // Opinionated: remove the "hand" cursor set previously for .page-link
    cursor: auto;
    background-color: $pagination-disabled-bg;
    border-color: $pagination-disabled-border-color;
  }
}


//
// Sizing
//

.pagination-lg {
  @include pagination-size($pagination-padding-y-lg, $pagination-padding-x-lg, $font-size-lg, $line-height-lg, $border-radius-lg);
}

.pagination-sm {
  @include pagination-size($pagination-padding-y-sm, $pagination-padding-x-sm, $font-size-sm, $line-height-sm, $border-radius-sm);
}

// Base class
//
// Requires one of the contextual, color modifier classes for `color` and
// `background-color`.

.badge {
  display: inline-block;
  padding: $badge-padding-y $badge-padding-x;
  font-size: $badge-font-size;
  font-weight: $badge-font-weight;
  line-height: 1;
  text-align: center;
  white-space: nowrap;
  vertical-align: baseline;
  @include border-radius($badge-border-radius);

  // Empty badges collapse automatically
  &:empty {
    display: none;
  }
}

// Quick fix for badges in buttons
.btn .badge {
  position: relative;
  top: -1px;
}

// Pill badges
//
// Make them extra rounded with a modifier to replace v3's badges.

.badge-pill {
  padding-right: $badge-pill-padding-x;
  padding-left: $badge-pill-padding-x;
  @include border-radius($badge-pill-border-radius);
}

// Colors
//
// Contextual variations (linked badges get darker on :hover).

@each $color, $value in $theme-colors {
  .badge-#{$color} {
    @include badge-variant($value);
  }
}

.jumbotron {
  padding: $jumbotron-padding ($jumbotron-padding / 2);
  margin-bottom: $jumbotron-padding;
  background-color: $jumbotron-bg;
  @include border-radius($border-radius-lg);

  @include media-breakpoint-up(sm) {
    padding: ($jumbotron-padding * 2) $jumbotron-padding;
  }
}

.jumbotron-fluid {
  padding-right: 0;
  padding-left: 0;
  @include border-radius(0);
}

//
// Base styles
//

.alert {
  position: relative;
  padding: $alert-padding-y $alert-padding-x;
  margin-bottom: $alert-margin-bottom;
  border: $alert-border-width solid transparent;
  @include border-radius($alert-border-radius);
}

// Headings for larger alerts
.alert-heading {
  // Specified to prevent conflicts of changing $headings-color
  color: inherit;
}

// Provide class for links that match alerts
.alert-link {
  font-weight: $alert-link-font-weight;
}


// Dismissible alerts
//
// Expand the right padding and account for the close button's positioning.

.alert-dismissible {
  padding-right: ($close-font-size + $alert-padding-x * 2);

  // Adjust close link position
  .close {
    position: absolute;
    top: 0;
    right: 0;
    padding: $alert-padding-y $alert-padding-x;
    color: inherit;
  }
}


// Alternate styles
//
// Generate contextual modifier classes for colorizing the alert.

@each $color, $value in $theme-colors {
  .alert-#{$color} {
    @include alert-variant(theme-color-level($color, $alert-bg-level), theme-color-level($color, $alert-border-level), theme-color-level($color, $alert-color-level));
  }
}

@keyframes progress-bar-stripes {
  from { background-position: $progress-height 0; }
  to { background-position: 0 0; }
}

.progress {
  display: flex;
  height: $progress-height;
  overflow: hidden; // force rounded corners by cropping it
  font-size: $progress-font-size;
  background-color: $progress-bg;
  @include border-radius($progress-border-radius);
  @include box-shadow($progress-box-shadow);
}

.progress-bar {
  display: flex;
  flex-direction: column;
  justify-content: center;
  color: $progress-bar-color;
  text-align: center;
  background-color: $progress-bar-bg;
  @include transition($progress-bar-transition);
}

.progress-bar-striped {
  @include gradient-striped();
  background-size: $progress-height $progress-height;
}

.progress-bar-animated {
  animation: progress-bar-stripes $progress-bar-animation-timing;
}

.media {
  display: flex;
  align-items: flex-start;
}

.media-body {
  flex: 1;
}

// Base class
//
// Easily usable on <ul>, <ol>, or <div>.

.list-group {
  display: flex;
  flex-direction: column;

  // No need to set list-style: none; since .list-group-item is block level
  padding-left: 0; // reset padding because ul and ol
  margin-bottom: 0;
}


// Interactive list items
//
// Use anchor or button elements instead of `li`s or `div`s to create interactive
// list items. Includes an extra `.active` modifier class for selected items.

.list-group-item-action {
  width: 100%; // For `<button>`s (anchors become 100% by default though)
  color: $list-group-action-color;
  text-align: inherit; // For `<button>`s (anchors inherit)

  // Hover state
  @include hover-focus {
    color: $list-group-action-hover-color;
    text-decoration: none;
    background-color: $list-group-hover-bg;
  }

  &:active {
    color: $list-group-action-active-color;
    background-color: $list-group-action-active-bg;
  }
}


// Individual list items
//
// Use on `li`s or `div`s within the `.list-group` parent.

.list-group-item {
  position: relative;
  display: block;
  padding: $list-group-item-padding-y $list-group-item-padding-x;
  // Place the border on the list items and negative margin up for better styling
  margin-bottom: -$list-group-border-width;
  background-color: $list-group-bg;
  border: $list-group-border-width solid $list-group-border-color;

  &:first-child {
    @include border-top-radius($list-group-border-radius);
  }

  &:last-child {
    margin-bottom: 0;
    @include border-bottom-radius($list-group-border-radius);
  }

  @include hover-focus {
    z-index: 1; // Place hover/active items above their siblings for proper border styling
    text-decoration: none;
  }

  &.disabled,
  &:disabled {
    color: $list-group-disabled-color;
    background-color: $list-group-disabled-bg;
  }

  // Include both here for `<a>`s and `<button>`s
  &.active {
    z-index: 2; // Place active items above their siblings for proper border styling
    color: $list-group-active-color;
    background-color: $list-group-active-bg;
    border-color: $list-group-active-border-color;
  }
}


// Flush list items
//
// Remove borders and border-radius to keep list group items edge-to-edge. Most
// useful within other components (e.g., cards).

.list-group-flush {
  .list-group-item {
    border-right: 0;
    border-left: 0;
    @include border-radius(0);
  }

  &:first-child {
    .list-group-item:first-child {
      border-top: 0;
    }
  }

  &:last-child {
    .list-group-item:last-child {
      border-bottom: 0;
    }
  }
}


// Contextual variants
//
// Add modifier classes to change text and background color on individual items.
// Organizationally, this must come after the `:hover` states.

@each $color, $value in $theme-colors {
  @include list-group-item-variant($color, theme-color-level($color, -9), theme-color-level($color, 6));
}

.close {
  float: right;
  font-size: $close-font-size;
  font-weight: $close-font-weight;
  line-height: 1;
  color: $close-color;
  text-shadow: $close-text-shadow;
  opacity: .5;

  @include hover-focus {
    color: $close-color;
    text-decoration: none;
    opacity: .75;
  }

  // Opinionated: add "hand" cursor to non-disabled .close elements
  &:not(:disabled):not(.disabled) {
    cursor: pointer;
  }
}

// Additional properties for button version
// iOS requires the button element instead of an anchor tag.
// If you want the anchor version, it requires `href="#"`.
// See https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile

// stylelint-disable property-no-vendor-prefix, selector-no-qualifying-type
button.close {
  padding: 0;
  background-color: transparent;
  border: 0;
  -webkit-appearance: none;
}
// stylelint-enable

// .modal-open      - body class for killing the scroll
// .modal           - container to scroll within
// .modal-dialog    - positioning shell for the actual modal
// .modal-content   - actual modal w/ bg and corners and stuff


// Kill the scroll on the body
.modal-open {
  overflow: hidden;
}

// Container that the modal scrolls within
.modal {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: $zindex-modal;
  display: none;
  overflow: hidden;
  // Prevent Chrome on Windows from adding a focus outline. For details, see
  // https://github.com/twbs/bootstrap/pull/10951.
  outline: 0;
  // We deliberately don't use `-webkit-overflow-scrolling: touch;` due to a
  // gnarly iOS Safari bug: https://bugs.webkit.org/show_bug.cgi?id=158342
  // See also https://github.com/twbs/bootstrap/issues/17695

  .modal-open & {
    overflow-x: hidden;
    overflow-y: auto;
  }
}

// Shell div to position the modal with bottom padding
.modal-dialog {
  position: relative;
  width: auto;
  margin: $modal-dialog-margin;
  // allow clicks to pass through for custom click handling to close modal
  pointer-events: none;

  // When fading in the modal, animate it to slide down
  .modal.fade & {
    @include transition($modal-transition);
    transform: translate(0, -25%);
  }
  .modal.show & {
    transform: translate(0, 0);
  }
}

.modal-dialog-centered {
  display: flex;
  align-items: center;
  min-height: calc(100% - (#{$modal-dialog-margin} * 2));
}

// Actual modal
.modal-content {
  position: relative;
  display: flex;
  flex-direction: column;
  width: 100%; // Ensure `.modal-content` extends the full width of the parent `.modal-dialog`
  // counteract the pointer-events: none; in the .modal-dialog
  pointer-events: auto;
  background-color: $modal-content-bg;
  background-clip: padding-box;
  border: $modal-content-border-width solid $modal-content-border-color;
  @include border-radius($border-radius-lg);
  @include box-shadow($modal-content-box-shadow-xs);
  // Remove focus outline from opened modal
  outline: 0;
}

// Modal background
.modal-backdrop {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: $zindex-modal-backdrop;
  background-color: $modal-backdrop-bg;

  // Fade for backdrop
  &.fade { opacity: 0; }
  &.show { opacity: $modal-backdrop-opacity; }
}

// Modal header
// Top section of the modal w/ title and dismiss
.modal-header {
  display: flex;
  align-items: flex-start; // so the close btn always stays on the upper right corner
  justify-content: space-between; // Put modal header elements (title and dismiss) on opposite ends
  padding: $modal-header-padding;
  border-bottom: $modal-header-border-width solid $modal-header-border-color;
  @include border-top-radius($border-radius-lg);

  .close {
    padding: $modal-header-padding;
    // auto on the left force icon to the right even when there is no .modal-title
    margin: (-$modal-header-padding) (-$modal-header-padding) (-$modal-header-padding) auto;
  }
}

// Title text within header
.modal-title {
  margin-bottom: 0;
  line-height: $modal-title-line-height;
}

// Modal body
// Where all modal content resides (sibling of .modal-header and .modal-footer)
.modal-body {
  position: relative;
  // Enable `flex-grow: 1` so that the body take up as much space as possible
  // when should there be a fixed height on `.modal-dialog`.
  flex: 1 1 auto;
  padding: $modal-inner-padding;
}

// Footer (for actions)
.modal-footer {
  display: flex;
  align-items: center; // vertically center
  justify-content: flex-end; // Right align buttons with flex property because text-align doesn't work on flex items
  padding: $modal-inner-padding;
  border-top: $modal-footer-border-width solid $modal-footer-border-color;

  // Easily place margin between footer elements
  > :not(:first-child) { margin-left: .25rem; }
  > :not(:last-child) { margin-right: .25rem; }
}

// Measure scrollbar width for padding body during modal show/hide
.modal-scrollbar-measure {
  position: absolute;
  top: -9999px;
  width: 50px;
  height: 50px;
  overflow: scroll;
}

// Scale up the modal
@include media-breakpoint-up(sm) {
  // Automatically set modal's width for larger viewports
  .modal-dialog {
    max-width: $modal-md;
    margin: $modal-dialog-margin-y-sm-up auto;
  }

  .modal-dialog-centered {
    min-height: calc(100% - (#{$modal-dialog-margin-y-sm-up} * 2));
  }

  .modal-content {
    @include box-shadow($modal-content-box-shadow-sm-up);
  }

  .modal-sm { max-width: $modal-sm; }

}

@include media-breakpoint-up(lg) {
  .modal-lg { max-width: $modal-lg; }
}

// Base class
.tooltip {
  position: absolute;
  z-index: $zindex-tooltip;
  display: block;
  margin: $tooltip-margin;
  // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.
  // So reset our font and text properties to avoid inheriting weird values.
  @include reset-text();
  font-size: $tooltip-font-size;
  // Allow breaking very long words so they don't overflow the tooltip's bounds
  word-wrap: break-word;
  opacity: 0;

  &.show { opacity: $tooltip-opacity; }

  .arrow {
    position: absolute;
    display: block;
    width: $tooltip-arrow-width;
    height: $tooltip-arrow-height;

    &::before {
      position: absolute;
      content: "";
      border-color: transparent;
      border-style: solid;
    }
  }
}

.bs-tooltip-top {
  padding: $tooltip-arrow-height 0;

  .arrow {
    bottom: 0;

    &::before {
      top: 0;
      border-width: $tooltip-arrow-height ($tooltip-arrow-width / 2) 0;
      border-top-color: $tooltip-arrow-color;
    }
  }
}

.bs-tooltip-right {
  padding: 0 $tooltip-arrow-height;

  .arrow {
    left: 0;
    width: $tooltip-arrow-height;
    height: $tooltip-arrow-width;

    &::before {
      right: 0;
      border-width: ($tooltip-arrow-width / 2) $tooltip-arrow-height ($tooltip-arrow-width / 2) 0;
      border-right-color: $tooltip-arrow-color;
    }
  }
}

.bs-tooltip-bottom {
  padding: $tooltip-arrow-height 0;

  .arrow {
    top: 0;

    &::before {
      bottom: 0;
      border-width: 0 ($tooltip-arrow-width / 2) $tooltip-arrow-height;
      border-bottom-color: $tooltip-arrow-color;
    }
  }
}

.bs-tooltip-left {
  padding: 0 $tooltip-arrow-height;

  .arrow {
    right: 0;
    width: $tooltip-arrow-height;
    height: $tooltip-arrow-width;

    &::before {
      left: 0;
      border-width: ($tooltip-arrow-width / 2) 0 ($tooltip-arrow-width / 2) $tooltip-arrow-height;
      border-left-color: $tooltip-arrow-color;
    }
  }
}

.bs-tooltip-auto {
  &[x-placement^="top"] {
    @extend .bs-tooltip-top;
  }
  &[x-placement^="right"] {
    @extend .bs-tooltip-right;
  }
  &[x-placement^="bottom"] {
    @extend .bs-tooltip-bottom;
  }
  &[x-placement^="left"] {
    @extend .bs-tooltip-left;
  }
}

// Wrapper for the tooltip content
.tooltip-inner {
  max-width: $tooltip-max-width;
  padding: $tooltip-padding-y $tooltip-padding-x;
  color: $tooltip-color;
  text-align: center;
  background-color: $tooltip-bg;
  @include border-radius($tooltip-border-radius);
}

.popover {
  position: absolute;
  top: 0;
  left: 0;
  z-index: $zindex-popover;
  display: block;
  max-width: $popover-max-width;
  // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.
  // So reset our font and text properties to avoid inheriting weird values.
  @include reset-text();
  font-size: $popover-font-size;
  // Allow breaking very long words so they don't overflow the popover's bounds
  word-wrap: break-word;
  background-color: $popover-bg;
  background-clip: padding-box;
  border: $popover-border-width solid $popover-border-color;
  @include border-radius($popover-border-radius);
  @include box-shadow($popover-box-shadow);

  .arrow {
    position: absolute;
    display: block;
    width: $popover-arrow-width;
    height: $popover-arrow-height;
    margin: 0 $border-radius-lg;

    &::before,
    &::after {
      position: absolute;
      display: block;
      content: "";
      border-color: transparent;
      border-style: solid;
    }
  }
}

.bs-popover-top {
  margin-bottom: $popover-arrow-height;

  .arrow {
    bottom: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);
  }

  .arrow::before,
  .arrow::after {
    border-width: $popover-arrow-height ($popover-arrow-width / 2) 0;
  }

  .arrow::before {
    bottom: 0;
    border-top-color: $popover-arrow-outer-color;
  }

  .arrow::after {
    bottom: $popover-border-width;
    border-top-color: $popover-arrow-color;
  }
}

.bs-popover-right {
  margin-left: $popover-arrow-height;

  .arrow {
    left: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);
    width: $popover-arrow-height;
    height: $popover-arrow-width;
    margin: $border-radius-lg 0; // make sure the arrow does not touch the popover's rounded corners
  }

  .arrow::before,
  .arrow::after {
    border-width: ($popover-arrow-width / 2) $popover-arrow-height ($popover-arrow-width / 2) 0;
  }

  .arrow::before {
    left: 0;
    border-right-color: $popover-arrow-outer-color;
  }

  .arrow::after {
    left: $popover-border-width;
    border-right-color: $popover-arrow-color;
  }
}

.bs-popover-bottom {
  margin-top: $popover-arrow-height;

  .arrow {
    top: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);
  }

  .arrow::before,
  .arrow::after {
    border-width: 0 ($popover-arrow-width / 2) $popover-arrow-height ($popover-arrow-width / 2);
  }

  .arrow::before {
    top: 0;
    border-bottom-color: $popover-arrow-outer-color;
  }

  .arrow::after {
    top: $popover-border-width;
    border-bottom-color: $popover-arrow-color;
  }

  // This will remove the popover-header's border just below the arrow
  .popover-header::before {
    position: absolute;
    top: 0;
    left: 50%;
    display: block;
    width: $popover-arrow-width;
    margin-left: ($popover-arrow-width / -2);
    content: "";
    border-bottom: $popover-border-width solid $popover-header-bg;
  }
}

.bs-popover-left {
  margin-right: $popover-arrow-height;

  .arrow {
    right: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);
    width: $popover-arrow-height;
    height: $popover-arrow-width;
    margin: $border-radius-lg 0; // make sure the arrow does not touch the popover's rounded corners
  }

  .arrow::before,
  .arrow::after {
    border-width: ($popover-arrow-width / 2) 0 ($popover-arrow-width / 2) $popover-arrow-height;
  }

  .arrow::before {
    right: 0;
    border-left-color: $popover-arrow-outer-color;
  }

  .arrow::after {
    right: $popover-border-width;
    border-left-color: $popover-arrow-color;
  }
}

.bs-popover-auto {
  &[x-placement^="top"] {
    @extend .bs-popover-top;
  }
  &[x-placement^="right"] {
    @extend .bs-popover-right;
  }
  &[x-placement^="bottom"] {
    @extend .bs-popover-bottom;
  }
  &[x-placement^="left"] {
    @extend .bs-popover-left;
  }
}


// Offset the popover to account for the popover arrow
.popover-header {
  padding: $popover-header-padding-y $popover-header-padding-x;
  margin-bottom: 0; // Reset the default from Reboot
  font-size: $font-size-base;
  color: $popover-header-color;
  background-color: $popover-header-bg;
  border-bottom: $popover-border-width solid darken($popover-header-bg, 5%);
  $offset-border-width: calc(#{$border-radius-lg} - #{$popover-border-width});
  @include border-top-radius($offset-border-width);

  &:empty {
    display: none;
  }
}

.popover-body {
  padding: $popover-body-padding-y $popover-body-padding-x;
  color: $popover-body-color;
}

// Wrapper for the slide container and indicators
.carousel {
  position: relative;
}

.carousel-inner {
  position: relative;
  width: 100%;
  overflow: hidden;
}

.carousel-item {
  position: relative;
  display: none;
  align-items: center;
  width: 100%;
  @include transition($carousel-transition);
  backface-visibility: hidden;
  perspective: 1000px;
}

.carousel-item.active,
.carousel-item-next,
.carousel-item-prev {
  display: block;
}

.carousel-item-next,
.carousel-item-prev {
  position: absolute;
  top: 0;
}

// CSS3 transforms when supported by the browser
.carousel-item-next.carousel-item-left,
.carousel-item-prev.carousel-item-right {
  transform: translateX(0);

  @supports (transform-style: preserve-3d) {
    transform: translate3d(0, 0, 0);
  }
}

.carousel-item-next,
.active.carousel-item-right {
  transform: translateX(100%);

  @supports (transform-style: preserve-3d) {
    transform: translate3d(100%, 0, 0);
  }
}

.carousel-item-prev,
.active.carousel-item-left {
  transform: translateX(-100%);

  @supports (transform-style: preserve-3d) {
    transform: translate3d(-100%, 0, 0);
  }
}


//
// Left/right controls for nav
//

.carousel-control-prev,
.carousel-control-next {
  position: absolute;
  top: 0;
  bottom: 0;
  // Use flex for alignment (1-3)
  display: flex; // 1. allow flex styles
  align-items: center; // 2. vertically center contents
  justify-content: center; // 3. horizontally center contents
  width: $carousel-control-width;
  color: $carousel-control-color;
  text-align: center;
  opacity: $carousel-control-opacity;
  // We can't have a transition here because WebKit cancels the carousel
  // animation if you trip this while in the middle of another animation.

  // Hover/focus state
  @include hover-focus {
    color: $carousel-control-color;
    text-decoration: none;
    outline: 0;
    opacity: .9;
  }
}
.carousel-control-prev {
  left: 0;
  @if $enable-gradients {
    background: linear-gradient(90deg, rgba(0, 0, 0, .25), rgba(0, 0, 0, .001));
  }
}
.carousel-control-next {
  right: 0;
  @if $enable-gradients {
    background: linear-gradient(270deg, rgba(0, 0, 0, .25), rgba(0, 0, 0, .001));
  }
}

// Icons for within
.carousel-control-prev-icon,
.carousel-control-next-icon {
  display: inline-block;
  width: $carousel-control-icon-width;
  height: $carousel-control-icon-width;
  background: transparent no-repeat center center;
  background-size: 100% 100%;
}
.carousel-control-prev-icon {
  background-image: $carousel-control-prev-icon-bg;
}
.carousel-control-next-icon {
  background-image: $carousel-control-next-icon-bg;
}


// Optional indicator pips
//
// Add an ordered list with the following class and add a list item for each
// slide your carousel holds.

.carousel-indicators {
  position: absolute;
  right: 0;
  bottom: 10px;
  left: 0;
  z-index: 15;
  display: flex;
  justify-content: center;
  padding-left: 0; // override <ol> default
  // Use the .carousel-control's width as margin so we don't overlay those
  margin-right: $carousel-control-width;
  margin-left: $carousel-control-width;
  list-style: none;

  li {
    position: relative;
    flex: 0 1 auto;
    width: $carousel-indicator-width;
    height: $carousel-indicator-height;
    margin-right: $carousel-indicator-spacer;
    margin-left: $carousel-indicator-spacer;
    text-indent: -999px;
    background-color: rgba($carousel-indicator-active-bg, .5);

    // Use pseudo classes to increase the hit area by 10px on top and bottom.
    &::before {
      position: absolute;
      top: -10px;
      left: 0;
      display: inline-block;
      width: 100%;
      height: 10px;
      content: "";
    }
    &::after {
      position: absolute;
      bottom: -10px;
      left: 0;
      display: inline-block;
      width: 100%;
      height: 10px;
      content: "";
    }
  }

  .active {
    background-color: $carousel-indicator-active-bg;
  }
}


// Optional captions
//
//

.carousel-caption {
  position: absolute;
  right: ((100% - $carousel-caption-width) / 2);
  bottom: 20px;
  left: ((100% - $carousel-caption-width) / 2);
  z-index: 10;
  padding-top: 20px;
  padding-bottom: 20px;
  color: $carousel-caption-color;
  text-align: center;
}

// stylelint-disable declaration-no-important

.align-baseline    { vertical-align: baseline !important; } // Browser default
.align-top         { vertical-align: top !important; }
.align-middle      { vertical-align: middle !important; }
.align-bottom      { vertical-align: bottom !important; }
.align-text-bottom { vertical-align: text-bottom !important; }
.align-text-top    { vertical-align: text-top !important; }

// stylelint-disable declaration-no-important

@each $color, $value in $theme-colors {
  @include bg-variant(".bg-#{$color}", $value);
}

@if $enable-gradients {
  @each $color, $value in $theme-colors {
    @include bg-gradient-variant(".bg-gradient-#{$color}", $value);
  }
}

.bg-white {
  background-color: $white !important;
}

.bg-transparent {
  background-color: transparent !important;
}

// stylelint-disable declaration-no-important

//
// Border
//

.border         { border: $border-width solid $border-color !important; }
.border-top     { border-top: $border-width solid $border-color !important; }
.border-right   { border-right: $border-width solid $border-color !important; }
.border-bottom  { border-bottom: $border-width solid $border-color !important; }
.border-left    { border-left: $border-width solid $border-color !important; }

.border-0        { border: 0 !important; }
.border-top-0    { border-top: 0 !important; }
.border-right-0  { border-right: 0 !important; }
.border-bottom-0 { border-bottom: 0 !important; }
.border-left-0   { border-left: 0 !important; }

@each $color, $value in $theme-colors {
  .border-#{$color} {
    border-color: $value !important;
  }
}

.border-white {
  border-color: $white !important;
}

//
// Border-radius
//

.rounded {
  border-radius: $border-radius !important;
}
.rounded-top {
  border-top-left-radius: $border-radius !important;
  border-top-right-radius: $border-radius !important;
}
.rounded-right {
  border-top-right-radius: $border-radius !important;
  border-bottom-right-radius: $border-radius !important;
}
.rounded-bottom {
  border-bottom-right-radius: $border-radius !important;
  border-bottom-left-radius: $border-radius !important;
}
.rounded-left {
  border-top-left-radius: $border-radius !important;
  border-bottom-left-radius: $border-radius !important;
}

.rounded-circle {
  border-radius: 50% !important;
}

.rounded-0 {
  border-radius: 0 !important;
}

.clearfix {
  @include clearfix();
}

// stylelint-disable declaration-no-important

//
// Utilities for common `display` values
//

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .d#{$infix}-none         { display: none !important; }
    .d#{$infix}-inline       { display: inline !important; }
    .d#{$infix}-inline-block { display: inline-block !important; }
    .d#{$infix}-block        { display: block !important; }
    .d#{$infix}-table        { display: table !important; }
    .d#{$infix}-table-row    { display: table-row !important; }
    .d#{$infix}-table-cell   { display: table-cell !important; }
    .d#{$infix}-flex         { display: flex !important; }
    .d#{$infix}-inline-flex  { display: inline-flex !important; }
  }
}


//
// Utilities for toggling `display` in print
//

@media print {
  .d-print-none         { display: none !important; }
  .d-print-inline       { display: inline !important; }
  .d-print-inline-block { display: inline-block !important; }
  .d-print-block        { display: block !important; }
  .d-print-table        { display: table !important; }
  .d-print-table-row    { display: table-row !important; }
  .d-print-table-cell   { display: table-cell !important; }
  .d-print-flex         { display: flex !important; }
  .d-print-inline-flex  { display: inline-flex !important; }
}

// Credit: Nicolas Gallagher and SUIT CSS.

.embed-responsive {
  position: relative;
  display: block;
  width: 100%;
  padding: 0;
  overflow: hidden;

  &::before {
    display: block;
    content: "";
  }

  .embed-responsive-item,
  iframe,
  embed,
  object,
  video {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 0;
  }
}

.embed-responsive-21by9 {
  &::before {
    padding-top: percentage(9 / 21);
  }
}

.embed-responsive-16by9 {
  &::before {
    padding-top: percentage(9 / 16);
  }
}

.embed-responsive-4by3 {
  &::before {
    padding-top: percentage(3 / 4);
  }
}

.embed-responsive-1by1 {
  &::before {
    padding-top: percentage(1 / 1);
  }
}

// stylelint-disable declaration-no-important

// Flex variation
//
// Custom styles for additional flex alignment options.

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .flex#{$infix}-row            { flex-direction: row !important; }
    .flex#{$infix}-column         { flex-direction: column !important; }
    .flex#{$infix}-row-reverse    { flex-direction: row-reverse !important; }
    .flex#{$infix}-column-reverse { flex-direction: column-reverse !important; }

    .flex#{$infix}-wrap         { flex-wrap: wrap !important; }
    .flex#{$infix}-nowrap       { flex-wrap: nowrap !important; }
    .flex#{$infix}-wrap-reverse { flex-wrap: wrap-reverse !important; }

    .justify-content#{$infix}-start   { justify-content: flex-start !important; }
    .justify-content#{$infix}-end     { justify-content: flex-end !important; }
    .justify-content#{$infix}-center  { justify-content: center !important; }
    .justify-content#{$infix}-between { justify-content: space-between !important; }
    .justify-content#{$infix}-around  { justify-content: space-around !important; }

    .align-items#{$infix}-start    { align-items: flex-start !important; }
    .align-items#{$infix}-end      { align-items: flex-end !important; }
    .align-items#{$infix}-center   { align-items: center !important; }
    .align-items#{$infix}-baseline { align-items: baseline !important; }
    .align-items#{$infix}-stretch  { align-items: stretch !important; }

    .align-content#{$infix}-start   { align-content: flex-start !important; }
    .align-content#{$infix}-end     { align-content: flex-end !important; }
    .align-content#{$infix}-center  { align-content: center !important; }
    .align-content#{$infix}-between { align-content: space-between !important; }
    .align-content#{$infix}-around  { align-content: space-around !important; }
    .align-content#{$infix}-stretch { align-content: stretch !important; }

    .align-self#{$infix}-auto     { align-self: auto !important; }
    .align-self#{$infix}-start    { align-self: flex-start !important; }
    .align-self#{$infix}-end      { align-self: flex-end !important; }
    .align-self#{$infix}-center   { align-self: center !important; }
    .align-self#{$infix}-baseline { align-self: baseline !important; }
    .align-self#{$infix}-stretch  { align-self: stretch !important; }
  }
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .float#{$infix}-left  { @include float-left; }
    .float#{$infix}-right { @include float-right; }
    .float#{$infix}-none  { @include float-none; }
  }
}

// stylelint-disable declaration-no-important

// Common values

// Sass list not in variables since it's not intended for customization.
$positions: static, relative, absolute, fixed, sticky;

@each $position in $positions {
  .position-#{$position} { position: $position !important; }
}

// Shorthand

.fixed-top {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: $zindex-fixed;
}

.fixed-bottom {
  position: fixed;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: $zindex-fixed;
}

.sticky-top {
  @supports (position: sticky) {
    position: sticky;
    top: 0;
    z-index: $zindex-sticky;
  }
}

//
// Screenreaders
//

.sr-only {
  @include sr-only();
}

.sr-only-focusable {
  @include sr-only-focusable();
}

// stylelint-disable declaration-no-important

// Width and height

@each $prop, $abbrev in (width: w, height: h) {
  @each $size, $length in $sizes {
    .#{$abbrev}-#{$size} { #{$prop}: $length !important; }
  }
}

.mw-100 { max-width: 100% !important; }
.mh-100 { max-height: 100% !important; }

// stylelint-disable declaration-no-important

// Margin and Padding

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $prop, $abbrev in (margin: m, padding: p) {
      @each $size, $length in $spacers {

        .#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }
        .#{$abbrev}t#{$infix}-#{$size},
        .#{$abbrev}y#{$infix}-#{$size} {
          #{$prop}-top: $length !important;
        }
        .#{$abbrev}r#{$infix}-#{$size},
        .#{$abbrev}x#{$infix}-#{$size} {
          #{$prop}-right: $length !important;
        }
        .#{$abbrev}b#{$infix}-#{$size},
        .#{$abbrev}y#{$infix}-#{$size} {
          #{$prop}-bottom: $length !important;
        }
        .#{$abbrev}l#{$infix}-#{$size},
        .#{$abbrev}x#{$infix}-#{$size} {
          #{$prop}-left: $length !important;
        }
      }
    }

    // Some special margin utils
    .m#{$infix}-auto { margin: auto !important; }
    .mt#{$infix}-auto,
    .my#{$infix}-auto {
      margin-top: auto !important;
    }
    .mr#{$infix}-auto,
    .mx#{$infix}-auto {
      margin-right: auto !important;
    }
    .mb#{$infix}-auto,
    .my#{$infix}-auto {
      margin-bottom: auto !important;
    }
    .ml#{$infix}-auto,
    .mx#{$infix}-auto {
      margin-left: auto !important;
    }
  }
}

// stylelint-disable declaration-no-important

//
// Text
//

// Alignment

.text-justify  { text-align: justify !important; }
.text-nowrap   { white-space: nowrap !important; }
.text-truncate { @include text-truncate; }

// Responsive alignment

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .text#{$infix}-left   { text-align: left !important; }
    .text#{$infix}-right  { text-align: right !important; }
    .text#{$infix}-center { text-align: center !important; }
  }
}

// Transformation

.text-lowercase  { text-transform: lowercase !important; }
.text-uppercase  { text-transform: uppercase !important; }
.text-capitalize { text-transform: capitalize !important; }

// Weight and italics

.font-weight-light  { font-weight: $font-weight-light !important; }
.font-weight-normal { font-weight: $font-weight-normal !important; }
.font-weight-bold   { font-weight: $font-weight-bold !important; }
.font-italic        { font-style: italic !important; }

// Contextual colors

.text-white { color: #fff !important; }

@each $color, $value in $theme-colors {
  @include text-emphasis-variant(".text-#{$color}", $value);
}

.text-muted { color: $text-muted !important; }

// Misc

.text-hide {
  @include text-hide();
}

//
// Visibility utilities
//

.visible {
  @include invisible(visible);
}

.invisible {
  @include invisible(hidden);
}

// stylelint-disable declaration-no-important, selector-no-qualifying-type

// Source: https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css

// ==========================================================================
// Print styles.
// Inlined to avoid the additional HTTP request:
// http://www.phpied.com/delay-loading-your-print-css/
// ==========================================================================

@if $enable-print-styles {
  @media print {
    *,
    *::before,
    *::after {
      // Bootstrap specific; comment out `color` and `background`
      //color: #000 !important; // Black prints faster: http://www.sanbeiji.com/archives/953
      text-shadow: none !important;
      //background: transparent !important;
      box-shadow: none !important;
    }

    a {
      &:not(.btn) {
        text-decoration: underline;
      }
    }

    // Bootstrap specific; comment the following selector out
    //a[href]::after {
    //  content: " (" attr(href) ")";
    //}

    abbr[title]::after {
      content: " (" attr(title) ")";
    }

    // Bootstrap specific; comment the following selector out
    //
    // Don't show links that are fragment identifiers,
    // or use the `javascript:` pseudo protocol
    //

    //a[href^="#"]::after,
    //a[href^="javascript:"]::after {
    // content: "";
    //}

    pre {
      white-space: pre-wrap !important;
    }
    pre,
    blockquote {
      border: $border-width solid #999;   // Bootstrap custom code; using `$border-width` instead of 1px
      page-break-inside: avoid;
    }

    //
    // Printing Tables:
    // http://css-discuss.incutio.com/wiki/Printing_Tables
    //

    thead {
      display: table-header-group;
    }

    tr,
    img {
      page-break-inside: avoid;
    }

    p,
    h2,
    h3 {
      orphans: 3;
      widows: 3;
    }

    h2,
    h3 {
      page-break-after: avoid;
    }

    // Bootstrap specific changes start

    // Specify a size and min-width to make printing closer across browsers.
    // We don't set margin here because it breaks `size` in Chrome. We also
    // don't use `!important` on `size` as it breaks in Chrome.
    @page {
      size: $print-page-size;
    }
    body {
      min-width: $print-body-min-width !important;
    }
    .container {
      min-width: $print-body-min-width !important;
    }

    // Bootstrap components
    .navbar {
      display: none;
    }
    .badge {
      border: $border-width solid #000;
    }

    .table {
      border-collapse: collapse !important;

      td,
      th {
        background-color: #fff !important;
      }
    }
    .table-bordered {
      th,
      td {
        border: 1px solid #ddd !important;
      }
    }

    // Bootstrap specific changes end
  }
}

$clay-unset: !default;
$clay-unset-placeholder: clay-unset-placeholder !default;

$enable-scaling-components: false !default;
$scaling-breakpoint-down: sm !default;

$rounded-border-radius: $border-radius !default;
$rounded-circle-border-radius: 5000px !default;
$rounded-0-border-radius: 0 !default;

// Cursors

$link-cursor: pointer !default;
$disabled-cursor: not-allowed !default;

// Containers

$container-form-lg: () !default;
$container-form-lg: map-merge((
	breakpoint-up: lg,
	padding-bottom: 3rem,
	padding-top: 3rem,
	padding-bottom-mobile: 1rem,
	padding-top-mobile: 1rem
), $container-form-lg);

$container-view: () !default;
$container-view: map-merge((
	padding-bottom: 1.5rem,
	padding-top: 1.5rem
), $container-view);

// Fonts

$moz-osx-font-smoothing: null !default;
$webkit-font-smoothing: null !default;

$font-import-url: null !default;

$font-family-serif: Georgia, "Times New Roman", Times, serif !default;

$font-size-base-mobile: $font-size-base !default;
$font-size-lg-mobile: $font-size-lg !default;

$font-weight-semi-bold: 500 !default;
$font-weight-bolder: 900 !default;

$h1-font-size-mobile: null !default;
$h2-font-size-mobile: null !default;
$h3-font-size-mobile: null !default;
$h4-font-size-mobile: null !default;
$h5-font-size-mobile: null !default;
$h6-font-size-mobile: null !default;

$body-moz-osx-font-smoothing: $moz-osx-font-smoothing !default;
$body-webkit-font-smoothing: $webkit-font-smoothing !default;

// Z-Index Variables

$zindex-alert-notifications: 5000 !default;
$zindex-input-group-hover: 3 !default;
$zindex-input-group-focus: $zindex-input-group-hover + 1 !default; // 4
$zindex-navbar-collapse-absolute: 500 !default;
$zindex-navbar-overlay: 450 !default;
$zindex-navbar-toggler-focus: 525 !default;
$zindex-sidenav: $zindex-fixed + 5 !default;
$alert-border-style: solid !default;

$alert-close-font-size: 0.875rem !default; // 14px
$alert-close-height: 2rem !default; // 32px
$alert-close-line-height: null !default;
$alert-close-opacity: null !default;
$alert-close-margin-left: null !default;
$alert-close-padding-bottom: 0 !default;
$alert-close-padding-left: 0 !default;
$alert-close-padding-right: 0 !default;
$alert-close-padding-top: 0 !default;
$alert-close-position-right: 0.5rem !default; // 8px
$alert-close-position-top: 0.75rem !default; // 12px
$alert-close-width: $alert-close-height !default;

$alert-font-size: null !default;

$alert-lead-font-size: null !default;
$alert-lead-font-weight: null !default;
$alert-lead-spacer-x: 0.3125rem !default; // 5px

$alert-link-decoration: null !default;
$alert-link-hover-decoration: underline !default;

$alert-indicator-font-size: 1.25rem !default;

$alert-title: () !default;

$alert-subtitle: () !default;

// Alert Dismissible

$alert-dismissible-padding-bottom: null !default;
$alert-dismissible-padding-left: null !default;
$alert-dismissible-padding-right: 2.5rem !default; // 40px
$alert-dismissible-padding-top: null !default;

// Alert Fluid

$alert-fluid-border-bottom-width: 1px !default;
$alert-fluid-border-left-width: 0 !default;
$alert-fluid-border-right-width: 0 !default;
$alert-fluid-border-top-width: 0 !default;

$alert-fluid-border-width: $alert-fluid-border-top-width $alert-fluid-border-right-width $alert-fluid-border-bottom-width $alert-fluid-border-left-width !default;
$alert-fluid-margin-bottom: 0 !default;

// Alert Notification

$alert-notifications-absolute-bottom: null !default;
$alert-notifications-absolute-left: null !default;
$alert-notifications-absolute-right: 0.5rem !default; // 8px
$alert-notifications-absolute-top: 4.75rem !default; // 76px

$alert-notifications-absolute-bottom-mobile: null !default;
$alert-notifications-absolute-left-mobile: 0.5rem !default; // 8px
$alert-notifications-absolute-right-mobile: 0.5rem !default; // 8px
$alert-notifications-absolute-top-mobile: 4.25rem!default; // 68px

$alert-notifications-fixed-bottom: 1.25rem !default; // 20px
$alert-notifications-fixed-left: 1.25rem !default; // 20px
$alert-notifications-fixed-right: null !default;
$alert-notifications-fixed-top: null !default;

$alert-notifications-fixed-bottom-mobile: 1rem !default; // 16px
$alert-notifications-fixed-left-mobile: ($grid-gutter-width / 2) !default;
$alert-notifications-fixed-right-mobile: ($grid-gutter-width / 2) !default;
$alert-notifications-fixed-top-mobile: null !default; // 68px

$alert-notifications-box-shadow: null !default;
$alert-notifications-max-width: 22.5rem !default; // 360px

// Alert Variants

$alert-primary-bg: null !default;
$alert-primary-border-color: null !default;
$alert-primary-color: null !default;
$alert-primary-close-color: null !default;
$alert-primary-close-hover-color: null !default;
$alert-primary-lead-color: null !default;
$alert-primary-link-color: null !default;
$alert-primary-link-hover-color: null !default;

$alert-secondary-bg: null !default;
$alert-secondary-border-color: null !default;
$alert-secondary-color: null !default;
$alert-secondary-close-color: null !default;
$alert-secondary-close-hover-color: null !default;
$alert-secondary-lead-color: null !default;
$alert-secondary-link-color: null !default;
$alert-secondary-link-hover-color: null !default;

$alert-success-bg: null !default;
$alert-success-border-color: null !default;
$alert-success-color: null !default;
$alert-success-close-color: null !default;
$alert-success-close-hover-color: null !default;
$alert-success-lead-color: null !default;
$alert-success-link-color: null !default;
$alert-success-link-hover-color: null !default;

$alert-info-bg: null !default;
$alert-info-border-color: null !default;
$alert-info-color: null !default;
$alert-info-close-color: null !default;
$alert-info-close-hover-color: null !default;
$alert-info-lead-color: null !default;
$alert-info-link-color: null !default;
$alert-info-link-hover-color: null !default;

$alert-warning-bg: null !default;
$alert-warning-border-color: null !default;
$alert-warning-color: null !default;
$alert-warning-close-color: null !default;
$alert-warning-close-hover-color: null !default;
$alert-warning-lead-color: null !default;
$alert-warning-link-color: null !default;
$alert-warning-link-hover-color: null !default;

$alert-danger-bg: null !default;
$alert-danger-border-color: null !default;
$alert-danger-color: null !default;
$alert-danger-close-color: null !default;
$alert-danger-close-hover-color: null !default;
$alert-danger-lead-color: null !default;
$alert-danger-link-color: null !default;
$alert-danger-link-hover-color: null !default;

$alert-light-bg: null !default;
$alert-light-border-color: null !default;
$alert-light-color: null !default;
$alert-light-close-color: null !default;
$alert-light-close-hover-color: null !default;
$alert-light-lead-color: null !default;
$alert-light-link-color: null !default;
$alert-light-link-hover-color: null !default;

$alert-dark-bg: null !default;
$alert-dark-border-color: null !default;
$alert-dark-color: null !default;
$alert-dark-close-color: null !default;
$alert-dark-close-hover-color: null !default;
$alert-dark-lead-color: null !default;
$alert-dark-link-color: null !default;
$alert-dark-link-hover-color: null !default;

$alert-palette: () !default;
$alert-palette: map-merge((
	primary: (
		bg: $alert-primary-bg,
		border-color: $alert-primary-border-color,
		color: $alert-primary-color,
		close-color: $alert-primary-close-color,
		close-hover-color: $alert-primary-close-hover-color,
		lead-color: $alert-primary-lead-color,
		link-color: $alert-primary-link-color,
		link-hover-color: $alert-primary-link-hover-color
	),
	secondary: (
		bg: $alert-secondary-bg,
		border-color: $alert-secondary-border-color,
		color: $alert-secondary-color,
		close-color: $alert-secondary-close-color,
		close-hover-color: $alert-secondary-close-hover-color,
		lead-color: $alert-secondary-lead-color,
		link-color: $alert-secondary-link-color,
		link-hover-color: $alert-secondary-link-hover-color
	),
	success: (
		bg: $alert-success-bg,
		border-color: $alert-success-border-color,
		color: $alert-success-color,
		close-color: $alert-success-close-color,
		close-hover-color: $alert-success-close-hover-color,
		lead-color: $alert-success-lead-color,
		link-color: $alert-success-link-color,
		link-hover-color: $alert-success-link-hover-color
	),
	info: (
		bg: $alert-info-bg,
		border-color: $alert-info-border-color,
		color: $alert-info-color,
		close-color: $alert-info-close-color,
		close-hover-color: $alert-info-close-hover-color,
		lead-color: $alert-info-lead-color,
		link-color: $alert-info-link-color,
		link-hover-color: $alert-info-link-hover-color
	),
	warning: (
		bg: $alert-warning-bg,
		border-color: $alert-warning-border-color,
		color: $alert-warning-color,
		close-color: $alert-warning-close-color,
		close-hover-color: $alert-warning-close-hover-color,
		lead-color: $alert-warning-lead-color,
		link-color: $alert-warning-link-color,
		link-hover-color: $alert-warning-link-hover-color
	),
	danger: (
		bg: $alert-danger-bg,
		border-color: $alert-danger-border-color,
		color: $alert-danger-color,
		close-color: $alert-danger-close-color,
		close-hover-color: $alert-danger-close-hover-color,
		lead-color: $alert-danger-lead-color,
		link-color: $alert-danger-link-color,
		link-hover-color: $alert-danger-link-hover-color
	),
	light: (
		bg: $alert-light-bg,
		border-color: $alert-light-border-color,
		color: $alert-light-color,
		close-color: $alert-light-close-color,
		close-hover-color: $alert-light-close-hover-color,
		lead-color: $alert-light-lead-color,
		link-color: $alert-light-link-color,
		link-hover-color: $alert-light-link-hover-color
	),
	dark: (
		bg: $alert-dark-bg,
		border-color: $alert-dark-border-color,
		color: $alert-dark-color,
		close-color: $alert-dark-close-color,
		close-hover-color: $alert-dark-close-hover-color,
		lead-color: $alert-dark-lead-color,
		link-color: $alert-dark-link-color,
		link-hover-color: $alert-dark-link-hover-color
	),
), $alert-palette);
$badge-border-color: transparent !default;
$badge-border-style: solid !default;
$badge-border-width: 1px !default;
$badge-line-height: null !default;

$badge-spacer-x: 0.25rem !default; // 4px
$badge-spacer-y: 0.125rem !default; // 2px

$badge-lexicon-icon-height: 0.875em !default;
$badge-lexicon-icon-margin-top: 0 !default;
$badge-lexicon-icon-width: 0.875em !default;

$badge-item-expand-min-width: 0.375rem !default;
$badge-item-spacer-x: 0.5em !default;

$badge-link-color: #FFF !default;
$badge-link-hover-color: null !default;
$badge-link-text-decoration: underline !default;
$badge-link-hover-text-decoration: none !default;

$badge-close: () !default;
$badge-close: map-merge((
	color: inherit,
	opacity: 1,
	hover-color: inherit,
	hover-opacity: 1,
	focus-opacity: 1,
	border-radius: 1px,
	display: inline-flex,
	font-size: inherit,
	height: auto,
	width: auto
), $badge-close);

// Badge Variants

$badge-primary-bg: null !default;
$badge-primary-hover-bg: null !default;
$badge-primary-border-color: null !default;
$badge-primary-hover-border-color: null !default;
$badge-primary-color: null !default;
$badge-primary-hover-color: null !default;
$badge-primary-link-color: null !default;
$badge-primary-link-hover-color: null !default;

$badge-secondary-bg: null !default;
$badge-secondary-hover-bg: null !default;
$badge-secondary-border-color: null !default;
$badge-secondary-hover-border-color: null !default;
$badge-secondary-color: null !default;
$badge-secondary-hover-color: null !default;
$badge-secondary-link-color: null !default;
$badge-secondary-link-hover-color: null !default;

$badge-success-bg: null !default;
$badge-success-hover-bg: null !default;
$badge-success-border-color: null !default;
$badge-success-hover-border-color: null !default;
$badge-success-color: null !default;
$badge-success-hover-color: null !default;
$badge-success-link-color: null !default;
$badge-success-link-hover-color: null !default;

$badge-info-bg: null !default;
$badge-info-hover-bg: null !default;
$badge-info-border-color: null !default;
$badge-info-hover-border-color: null !default;
$badge-info-color: null !default;
$badge-info-hover-color: null !default;
$badge-info-link-color: null !default;
$badge-info-link-hover-color: null !default;

$badge-warning-bg: null !default;
$badge-warning-hover-bg: null !default;
$badge-warning-border-color: null !default;
$badge-warning-hover-border-color: null !default;
$badge-warning-color: null !default;
$badge-warning-hover-color: null !default;
$badge-warning-link-color: null !default;
$badge-warning-link-hover-color: null !default;

$badge-danger-bg: null !default;
$badge-danger-hover-bg: null !default;
$badge-danger-border-color: null !default;
$badge-danger-hover-border-color: null !default;
$badge-danger-color: null !default;
$badge-danger-hover-color: null !default;
$badge-danger-link-color: null !default;
$badge-danger-link-hover-color: null !default;

$badge-light-bg: null !default;
$badge-light-hover-bg: null !default;
$badge-light-border-color: null !default;
$badge-light-hover-border-color: null !default;
$badge-light-color: null !default;
$badge-light-hover-color: null !default;
$badge-light-link-color: null !default;
$badge-light-link-hover-color: null !default;

$badge-dark-bg: null !default;
$badge-dark-hover-bg: null !default;
$badge-dark-border-color: null !default;
$badge-dark-hover-border-color: null !default;
$badge-dark-color: null !default;
$badge-dark-hover-color: null !default;
$badge-dark-link-color: null !default;
$badge-dark-link-hover-color: null !default;

$badge-palette: () !default;
$badge-palette: map-merge((
	primary: (
		bg: $badge-primary-bg,
		hover-bg: $badge-primary-hover-bg,
		border-color: $badge-primary-border-color,
		hover-border-color: $badge-primary-hover-border-color,
		color: $badge-primary-color,
		hover-color: $badge-primary-hover-color,
		link-color: $badge-primary-link-color,
		link-hover-color: $badge-primary-link-hover-color
	),
	secondary: (
		bg: $badge-secondary-bg,
		hover-bg: $badge-secondary-hover-bg,
		border-color: $badge-secondary-border-color,
		hover-border-color: $badge-secondary-hover-border-color,
		color: $badge-secondary-color,
		hover-color: $badge-secondary-hover-color,
		link-color: $badge-secondary-link-color,
		link-hover-color: $badge-secondary-link-hover-color
	),
	success: (
		bg: $badge-success-bg,
		hover-bg: $badge-success-hover-bg,
		border-color: $badge-success-border-color,
		hover-border-color: $badge-success-hover-border-color,
		color: $badge-success-color,
		hover-color: $badge-success-hover-color,
		link-color: $badge-success-link-color,
		link-hover-color: $badge-success-link-hover-color
	),
	info: (
		bg: $badge-info-bg,
		hover-bg: $badge-info-hover-bg,
		border-color: $badge-info-border-color,
		hover-border-color: $badge-info-hover-border-color,
		color: $badge-info-color,
		hover-color: $badge-info-hover-color,
		link-color: $badge-info-link-color,
		link-hover-color: $badge-info-link-hover-color
	),
	warning: (
		bg: $badge-warning-bg,
		hover-bg: $badge-warning-hover-bg,
		border-color: $badge-warning-border-color,
		hover-border-color: $badge-warning-hover-border-color,
		color: $badge-warning-color,
		hover-color: $badge-warning-hover-color,
		link-color: $badge-warning-link-color,
		link-hover-color: $badge-warning-link-hover-color
	),
	danger: (
		bg: $badge-danger-bg,
		hover-bg: $badge-danger-hover-bg,
		border-color: $badge-danger-border-color,
		hover-border-color: $badge-danger-hover-border-color,
		color: $badge-danger-color,
		hover-color: $badge-danger-hover-color,
		link-color: $badge-danger-link-color,
		link-hover-color: $badge-danger-link-hover-color
	),
	light: (
		bg: $badge-light-bg,
		hover-bg: $badge-light-hover-bg,
		border-color: $badge-light-border-color,
		hover-border-color: $badge-light-hover-border-color,
		color: $badge-light-color,
		hover-color: $badge-light-hover-color,
		link-color: $badge-light-link-color,
		link-hover-color: $badge-light-link-hover-color
	),
	dark: (
		bg: $badge-dark-bg,
		hover-bg: $badge-dark-hover-bg,
		border-color: $badge-dark-border-color,
		hover-border-color: $badge-dark-hover-border-color,
		color: $badge-dark-color,
		hover-color: $badge-dark-hover-color,
		link-color: $badge-dark-link-color,
		link-hover-color: $badge-dark-link-hover-color
	)
), $badge-palette);
$breadcrumb-border-radius: null !default;
$breadcrumb-font-size: null !default;
$breadcrumb-font-weight: null !default;
$breadcrumb-text-transform: null !default;

$breadcrumb-active-font-weight: null !default;

$breadcrumb-text-truncate-icon-spacer-x: 0.875rem !default; // 14px
$breadcrumb-text-truncate-max-width: 18.75rem - $breadcrumb-text-truncate-icon-spacer-x !default; // 300px
$breadcrumb-text-truncate-max-width-mobile: 9.375rem - $breadcrumb-text-truncate-icon-spacer-x !default; // 150px

$breadcrumb-link-color: $link-color !default;
$breadcrumb-link-text-decoration: $link-decoration !default;

$breadcrumb-link-hover-color: $link-hover-color !default;
$breadcrumb-link-hover-text-decoration: $link-hover-decoration !default;

$breadcrumb-divider-color: $breadcrumb-active-color !default;
$breadcrumb-divider-font-family: null !default;
$breadcrumb-divider-font-weight: null !default;

$breadcrumb-divider-svg-icon: clay-icon(angle-right, $breadcrumb-divider-color) !default;
$breadcrumb-divider-svg-icon-height: 0.75em !default;
$breadcrumb-divider-svg-icon-width: $breadcrumb-divider-svg-icon-height !default;
$btn-cursor: $link-cursor !default;
$btn-font-size: $font-size-base !default;
$btn-font-size-mobile: null !default;
$btn-padding-x-mobile: null !default;
$btn-padding-y-mobile: null !default;

$btn-disabled-cursor: $disabled-cursor !default;

$btn-inline-item-font-size: null !default;

$btn-section-font-size: 0.6875rem !default; // 11px
$btn-section-font-weight: $font-weight-normal !default;
$btn-section-line-height: 1 !default;

// Button Sizes

$btn-font-size-lg: $font-size-lg !default;
$btn-font-size-lg-mobile: null !default;
$btn-padding-x-lg-mobile: null !default;
$btn-padding-y-lg-mobile: null !default;
$btn-inline-item-font-size-lg: null !default;
$btn-section-font-size-lg: 0.8125rem !default; // 13px

$btn-font-size-sm: $font-size-sm !default;
$btn-font-size-sm-mobile: null !default;
$btn-padding-x-sm-mobile: null !default;
$btn-padding-y-sm-mobile: null !default;
$btn-inline-item-font-size-sm: null !default;
$btn-section-font-size-sm: 0.5625rem !default; // 9px

// Button Monospaced

$btn-monospaced-padding-x: 0 !default;
$btn-monospaced-padding-y: 0.1875rem !default; // 3px
$btn-monospaced-size: 2.375rem !default; // 38px

$btn-monospaced-padding-x-lg: 0 !default;
$btn-monospaced-padding-y-lg: 0.3125rem !default; // 5px
$btn-monospaced-size-lg: 3rem !default; // 48px

$btn-monospaced-padding-x-sm: 0 !default;
$btn-monospaced-padding-y-sm: 0.125rem !default; // 2px
$btn-monospaced-size-sm: 1.9375rem !default; // 31px

$btn-monospaced-size-mobile: null !default;
$btn-monospaced-size-lg-mobile: null !default;
$btn-monospaced-size-sm-mobile: null !default;

// Button Group

$btn-group-item-margin-right: map-get($spacers, 2) !default;

// Button Toolbar

$btn-toolbar-spacer-x: 0.5rem !default; // 8px
$btn-toolbar-spacer-y: 0.125rem !default; // 2px

// Button Variants

$btn-primary: () !default;
$btn-primary: map-merge((
	loading-animation: 'loading-animation-light'
), $btn-primary);

$btn-secondary: () !default;
$btn-secondary: map-merge((
	loading-animation: 'loading-animation-light'
), $btn-secondary);

$btn-success: () !default;
$btn-success: map-merge((
	loading-animation: 'loading-animation-light'
), $btn-success);

$btn-info: () !default;
$btn-info: map-merge((
	loading-animation: 'loading-animation-light'
), $btn-info);

$btn-warning: () !default;
$btn-warning: map-merge((), $btn-warning);

$btn-danger: () !default;
$btn-danger: map-merge((
	loading-animation: 'loading-animation-light'
), $btn-danger);

$btn-light: () !default;
$btn-light: map-merge((), $btn-light);

$btn-dark: () !default;
$btn-dark: map-merge((
	loading-animation: 'loading-animation-light'
), $btn-dark);

$btn-palette: () !default;
$btn-palette: map-merge((
	primary: $btn-primary,
	secondary: $btn-secondary,
	success: $btn-success,
	info: $btn-info,
	warning: $btn-warning,
	danger: $btn-danger,
	light: $btn-light,
	dark: $btn-dark
), $btn-palette);

// Button Outline Variants

$btn-outline-primary: () !default;
$btn-outline-secondary: () !default;
$btn-outline-success: () !default;
$btn-outline-info: () !default;
$btn-outline-warning: () !default;
$btn-outline-danger: () !default;
$btn-outline-light: () !default;
$btn-outline-dark: () !default;

$btn-outline-palette: () !default;
$btn-outline-palette: map-merge((
	primary: $btn-outline-primary,
	secondary: $btn-outline-secondary,
	success: $btn-outline-success,
	info: $btn-outline-info,
	warning: $btn-outline-warning,
	danger: $btn-outline-danger,
	light: $btn-outline-light,
	dark: $btn-outline-dark
), $btn-outline-palette);
$label-color: null !default;
$label-link-hover-color: #FFF !default;

$label-font-size: 75% !default;
$label-font-weight: $font-weight-bold !default;
$label-height: null !default;
$label-line-height: 1 !default;
$label-padding-x: 0.4375rem !default; // 7px
$label-padding-y: 0.1875rem !default; // 3px
$label-spacer-x: 0.25rem !default; // 4px
$label-spacer-y: 0.125rem !default; // 2px
$label-text-transform: null !default;

$label-lexicon-icon-height: 0.875em !default;
$label-lexicon-icon-margin-top: 0 !default;
$label-lexicon-icon-width: 0.875em !default;

$label-dismissible-text-transform: null !default;

$label-item-spacer-x: 0.5em !default;

$label-anchor-text-decoration: none !default;
$label-anchor-hover-text-decoration: null !default;

$label-link-text-decoration: underline !default;
$label-link-hover-text-decoration: none !default;

$label-border-color: $body-color !default;
$label-border-radius: $border-radius !default;
$label-border-style: solid !default;
$label-border-width: 0.0625rem !default;

// Label Close

$label-close: () !default;
$label-close: map-merge((
	color: inherit,
	opacity: 1,
	hover-color: inherit,
	hover-opacity: 1,
	focus-opacity: 1,
	disabled-opacity: $btn-disabled-opacity,
	border-radius: 1px,
	display: inline-flex,
	font-size: inherit,
	height: auto,
	width: auto
), $label-close);

// Label Sizes

$label-lg: () !default;
$label-lg: map-merge((
	font-size: 0.875rem, // 14px
	padding-x: 1rem, // 16px
	padding-y: 0.375rem, // 6px
	text-transform: none
), $label-lg);

// Label Variants

$label-primary-color: $primary !default;
$label-primary-hover-color: darken($label-primary-color, 10%) !default;
$label-primary-bg: #FFF !default;
$label-primary-hover-bg: null !default;
$label-primary-border-color: $label-primary-color !default;
$label-primary-hover-border-color: $label-primary-hover-color !default;
$label-primary-link-color: $label-primary-color !default;
$label-primary-link-hover-color: $label-primary-hover-color !default;

$label-secondary-color: $secondary !default;
$label-secondary-hover-color: darken($label-secondary-color, 10%) !default;
$label-secondary-bg: #FFF !default;
$label-secondary-hover-bg: null !default;
$label-secondary-border-color: $label-secondary-color !default;
$label-secondary-hover-border-color: $label-secondary-hover-color !default;
$label-secondary-link-color: $label-secondary-color !default;
$label-secondary-link-hover-color: $label-secondary-hover-color !default;

$label-success-color: $success !default;
$label-success-hover-color: darken($label-success-color, 10%) !default;
$label-success-bg: #FFF !default;
$label-success-hover-bg: null !default;
$label-success-border-color: $label-success-color !default;
$label-success-hover-border-color: $label-success-hover-color !default;
$label-success-link-color: $label-success-color !default;
$label-success-link-hover-color: $label-success-hover-color !default;

$label-info-color: $info !default;
$label-info-hover-color: darken($label-info-color, 10%) !default;
$label-info-bg: #FFF !default;
$label-info-hover-bg: null !default;
$label-info-border-color: $label-info-color !default;
$label-info-hover-border-color: $label-info-hover-color !default;
$label-info-link-color: $label-info-color !default;
$label-info-link-hover-color: $label-info-hover-color !default;

$label-warning-color: $warning !default;
$label-warning-hover-color: darken($label-warning-color, 10%) !default;
$label-warning-bg: #FFF !default;
$label-warning-hover-bg: null !default;
$label-warning-border-color: $label-warning-color !default;
$label-warning-hover-border-color: $label-warning-hover-color !default;
$label-warning-link-color: $label-warning-color !default;
$label-warning-link-hover-color: $label-warning-hover-color !default;

$label-danger-color: $danger !default;
$label-danger-hover-color: darken($label-danger-color, 10%) !default;
$label-danger-bg: #FFF !default;
$label-danger-hover-bg: null !default;
$label-danger-border-color: $label-danger-color !default;
$label-danger-hover-border-color: $label-danger-hover-color !default;
$label-danger-link-color: $label-danger-color !default;
$label-danger-link-hover-color: $label-danger-hover-color !default;

$label-light-color: $light !default;
$label-light-hover-color: darken($label-light-color, 10%) !default;
$label-light-bg: null !default;
$label-light-hover-bg: null !default;
$label-light-border-color: $label-light-color !default;
$label-light-hover-border-color: $label-light-hover-color !default;
$label-light-link-color: $label-light-color !default;
$label-light-link-hover-color: $label-light-hover-color !default;

$label-dark-color: $dark !default;
$label-dark-hover-color: darken($label-dark-color, 10%) !default;
$label-dark-bg: #FFF !default;
$label-dark-hover-bg: null !default;
$label-dark-border-color: $label-dark-color !default;
$label-dark-hover-border-color: $label-dark-hover-color !default;
$label-dark-link-color: $label-dark-color !default;
$label-dark-link-hover-color: $label-dark-hover-color !default;

$label-palette: () !default;
$label-palette: map-merge((
	primary: (
		bg: $label-primary-bg,
		hover-bg: $label-primary-hover-bg,
		border-color: $label-primary-border-color,
		hover-border-color: $label-primary-hover-border-color,
		color: $label-primary-color,
		hover-color: $label-primary-hover-color,
		link-color: $label-primary-link-color,
		link-hover-color: $label-primary-link-hover-color
	),
	secondary: (
		bg: $label-secondary-bg,
		hover-bg: $label-secondary-hover-bg,
		border-color: $label-secondary-border-color,
		hover-border-color: $label-secondary-hover-border-color,
		color: $label-secondary-color,
		hover-color: $label-secondary-hover-color,
		link-color: $label-secondary-link-color,
		link-hover-color: $label-secondary-link-hover-color
	),
	success: (
		bg: $label-success-bg,
		hover-bg: $label-success-hover-bg,
		border-color: $label-success-border-color,
		hover-border-color: $label-success-hover-border-color,
		color: $label-success-color,
		hover-color: $label-success-hover-color,
		link-color: $label-success-link-color,
		link-hover-color: $label-success-link-hover-color
	),
	info: (
		bg: $label-info-bg,
		hover-bg: $label-info-hover-bg,
		border-color: $label-info-border-color,
		hover-border-color: $label-info-hover-border-color,
		color: $label-info-color,
		hover-color: $label-info-hover-color,
		link-color: $label-info-link-color,
		link-hover-color: $label-info-link-hover-color
	),
	warning: (
		bg: $label-warning-bg,
		hover-bg: $label-warning-hover-bg,
		border-color: $label-warning-border-color,
		hover-border-color: $label-warning-hover-border-color,
		color: $label-warning-color,
		hover-color: $label-warning-hover-color,
		link-color: $label-warning-link-color,
		link-hover-color: $label-warning-link-hover-color
	),
	danger: (
		bg: $label-danger-bg,
		hover-bg: $label-danger-hover-bg,
		border-color: $label-danger-border-color,
		hover-border-color: $label-danger-hover-border-color,
		color: $label-danger-color,
		hover-color: $label-danger-hover-color,
		link-color: $label-danger-link-color,
		link-hover-color: $label-danger-link-hover-color
	),
	dark: (
		bg: $label-dark-bg,
		hover-bg: $label-dark-hover-bg,
		border-color: $label-dark-border-color,
		hover-border-color: $label-dark-hover-border-color,
		color: $label-dark-color,
		hover-color: $label-dark-hover-color,
		link-color: $label-dark-link-color,
		link-hover-color: $label-dark-link-hover-color
	),
	light: (
		bg: $label-light-bg,
		hover-bg: $label-light-hover-bg,
		border-color: $label-light-border-color,
		hover-border-color: $label-light-hover-border-color,
		color: $label-light-color,
		hover-color: $label-light-hover-color,
		link-color: $label-light-link-color,
		link-hover-color: $label-light-link-hover-color
	)
), $label-palette);
$sticker-border-color: null !default;
$sticker-border-radius: $border-radius !default;
$sticker-border-style: null !default;
$sticker-border-width: null !default;
$sticker-color: $label-color !default;
$sticker-font-size: 0.875rem !default; // 14px
$sticker-font-weight: $font-weight-semi-bold !default;
$sticker-size: 2rem !default; // 32px

$sticker-inline-item-font-size: null !default;

// Sticker Sizes

$sticker-sm: () !default;
$sticker-sm: map-merge((
	font-size: 0.75rem,
	size: 1.5rem
), $sticker-sm);

$sticker-lg: () !default;
$sticker-lg: map-merge((
	font-size: 1.125rem,
	size: 2.5rem
), $sticker-lg);

$sticker-xl: () !default;
$sticker-xl: map-merge((
	font-size: 1.25rem,
	size: 3rem
), $sticker-xl);

// Sticker Positions

$sticker-inside-offset: $grid-gutter-width / 2 !default;
$sticker-outside-offset: -($sticker-size / 2) !default;

// Sticker Circle

$sticker-circle-border-radius: $rounded-circle-border-radius !default;

// Sticker Variants

$sticker-primary-bg: $primary !default;
$sticker-primary-border-color: null !default;
$sticker-primary-color: color-yiq($sticker-primary-bg) !default;

$sticker-secondary-bg: $secondary !default;
$sticker-secondary-border-color: null !default;
$sticker-secondary-color: color-yiq($sticker-secondary-bg) !default;

$sticker-info-bg: $info !default;
$sticker-info-border-color: null !default;
$sticker-info-color: color-yiq($sticker-info-bg) !default;

$sticker-success-bg: $success !default;
$sticker-success-border-color: null !default;
$sticker-success-color: color-yiq($sticker-success-bg) !default;

$sticker-warning-bg: $warning !default;
$sticker-warning-border-color: null !default;
$sticker-warning-color: color-yiq($sticker-warning-bg) !default;

$sticker-danger-bg: $danger !default;
$sticker-danger-border-color: null !default;
$sticker-danger-color: color-yiq($sticker-danger-bg) !default;

$sticker-light-bg: $light !default;
$sticker-light-border-color: null !default;
$sticker-light-color: color-yiq($sticker-light-bg) !default;

$sticker-dark-bg: $dark !default;
$sticker-dark-border-color: null !default;
$sticker-dark-color: color-yiq($sticker-dark-bg) !default;

$sticker-palette: () !default;
$sticker-palette: map-merge((
	primary: (
		bg: $sticker-primary-bg,
		border-color: $sticker-primary-border-color,
		color: $sticker-primary-color
	),
	secondary: (
		bg: $sticker-secondary-bg,
		border-color: $sticker-secondary-border-color,
		color: $sticker-secondary-color
	),
	success: (
		bg: $sticker-success-bg,
		border-color: $sticker-success-border-color,
		color: $sticker-success-color
	),
	info: (
		bg: $sticker-info-bg,
		border-color: $sticker-info-border-color,
		color: $sticker-info-color
	),
	warning: (
		bg: $sticker-warning-bg,
		border-color: $sticker-warning-border-color,
		color: $sticker-warning-color
	),
	danger: (
		bg: $sticker-danger-bg,
		border-color: $sticker-danger-border-color,
		color: $sticker-danger-color
	),
	light: (
		bg: $sticker-light-bg,
		border-color: $sticker-light-border-color,
		color: $sticker-light-color
	),
	dark: (
		bg: $sticker-dark-bg,
		border-color: $sticker-dark-border-color,
		color: $sticker-dark-color
	)
), $sticker-palette);
$card-border-style: solid !default;
$card-box-shadow: null !default;
$card-margin-bottom: 1.25rem !default;

$card-body-padding-bottom: null !default;
$card-body-padding-left: null !default;
$card-body-padding-right: null !default;
$card-body-padding-top: null !default;

$card-section-header-color: $secondary !default;
$card-section-header-font-size: 0.75rem !default;
$card-section-header-font-weight: $font-weight-semi-bold !default;
$card-section-header-line-height: 2.5 !default;
$card-section-header-margin-bottom: 1.5rem !default;
$card-section-header-padding: 0 ($grid-gutter-width / 2) !default;
$card-section-header-text-transform: uppercase !default;

// Card Title

$card-title: () !default;
$card-title: map-merge((
	font-size: 1rem,
	font-weight: $font-weight-semi-bold,
	line-height: $line-height-base,
	margin-bottom: 0
), $card-title);

$card-title-link: () !default;
$card-title-link: map-merge((
	color: map-get($card-title, color)
), $card-title-link);

// Card Subtitle

$card-subtitle: () !default;
$card-subtitle: map-merge((
	color: $secondary,
	font-size: 0.875rem, // 14px
	font-weight: $font-weight-semi-bold,
	margin-bottom: 0,
	margin-top: 0
), $card-subtitle);

$card-subtitle-link: () !default;
$card-subtitle-link: map-merge((
	color: map-get($card-subtitle, color),
	hover-color: darken($secondary, 15%)
), $card-subtitle-link);

// Card Link

$card-link: () !default;
$card-link: map-merge((
	color: $link-color,
	hover-color: $link-hover-color
), $card-link);

// Card Divider

$card-divider-bg: $card-border-color !default;
$card-divider-height: 1px !default;
$card-divider-spacer-x: null !default;
$card-divider-spacer-y: 10px !default;

$card-rounded-inner-border-radius: if($card-border-width > 0, calc(#{$rounded-border-radius} - #{$card-border-width}), $rounded-border-radius) !default;
$card-rounded-0-inner-border-radius: if($rounded-0-border-radius > $card-border-width, calc(#{$rounded-0-border-radius} - #{$card-border-width}), 0) !default;
$card-rounded-circle-inner-border-radius: if($card-border-width > 0, calc(#{$rounded-circle-border-radius} - #{$card-border-width}), $rounded-circle-border-radius) !default;

$checkbox-left-card-padding: 40px !default;
$checkbox-right-card-padding: $checkbox-left-card-padding !default;

$checkbox-position: 1rem !default;

$form-check-card-checked-box-shadow: $input-btn-focus-box-shadow !default;

// Card Type Asset

$card-type-asset: () !default;

$image-card: () !default;

$file-card: () !default;
$file-card: map-merge((
	asset-icon-color: $gray-600
), $file-card);

$user-card: () !default;
$user-card: map-merge((
	asset-icon-min-width: 2.5rem,
	asset-icon-width: 26%
), $user-card);

$card-page-item-asset: () !default;
$card-page-item-asset: map-merge((
	base: (
		min-width: 200px,
		padding-left: $grid-gutter-width / 2,
		padding-right: $grid-gutter-width / 2
	),
	sm: (
		breakpoint: map-get($grid-breakpoints, sm), // 576px
		flex-basis: 50%,
		max-width: 50%
	),
	md: (
		breakpoint: map-get($grid-breakpoints, md), // 768px
		flex-basis: 200px,
		max-width: 33.3333%
	),
	lg: (
		breakpoint: map-get($grid-breakpoints, lg), // 992px
		max-width: 25%
	)
), $card-page-item-asset);

// Card Type Directory

$card-type-directory: () !default;
$card-type-directory: map-merge((
	sticker-font-size: 1.125rem // 18px
), $card-type-directory);

$card-page-item-directory: () !default;
$card-page-item-directory: map-merge((
	$card-page-item-asset
), $card-page-item-directory);
$dropdown-border-style: null !default;

$dropdown-full-wide-header-spacer-y: 20px !default;

$dropdown-wide-width: 500px !default;

$dropdown-font-size: null !default;
$dropdown-font-size-mobile: null !default;

$dropdown-header-font-size: null !default;
$dropdown-header-font-size-mobile: null !default;
$dropdown-header-margin-bottom: null !default;
$dropdown-header-margin-top: null !default;
$dropdown-header-padding-x: $dropdown-item-padding-x !default;
$dropdown-header-padding-y: $dropdown-padding-y !default;
$dropdown-header-text-transform: null !default;

$dropdown-subheader-color: $dropdown-header-color !default;
$dropdown-subheader-font-size: 0.75rem !default; // 12px
$dropdown-subheader-font-weight: $font-weight-semi-bold !default;
$dropdown-subheader-margin-bottom: null !default;
$dropdown-subheader-margin-top: null !default;
$dropdown-subheader-padding-x: $dropdown-header-padding-x !default;
$dropdown-subheader-padding-y: $dropdown-header-padding-y !default;
$dropdown-subheader-text-transform: uppercase !default;

$dropdown-caption-color: $dropdown-header-color !default;
$dropdown-caption-font-size: 0.875rem !default; // 14px
$dropdown-caption-font-weight: null !default;

$dropdown-link-font-weight: null !default;
$dropdown-link-active-font-weight: null !default;

$dropdown-max-height: 500px !default;
$dropdown-max-height-mobile: 295px !default;
$dropdown-min-height: null !default;

$dropdown-max-width: 260px !default;
$dropdown-max-width-mobile: 230px !default;

$dropdown-inline-scroller-max-height: 200px !default;
$dropdown-inline-scroller-max-height-mobile: none !default;

$dropdown-item-disabled-cursor: $disabled-cursor !default;
$dropdown-item-indicator-size: 1rem !default;
$dropdown-item-indicator-spacer-x: 1rem !default;

// Dropdown Action

$dropdown-action-toggle-border-radius: $border-radius !default;
$dropdown-action-toggle-font-size: null !default;
$dropdown-action-toggle-size: $btn-monospaced-size-sm !default;

$dropdown-action-toggle-disabled-cursor: $disabled-cursor !default;
$dropdown-action-toggle-disabled-opacity: 0.65 !default;

// Alert inside Dropdowns

$dropdown-alert-font-size: null !default;
$dropdown-alert-line-height: normal !default;
$dropdown-alert-margin: ($spacer / 2) !default;
$dropdown-alert-padding-x: $dropdown-header-padding-x !default;
$dropdown-alert-padding-y: $dropdown-header-padding-y !default;
$input-border-top-width: 0.0625rem !default; // 1px
$input-border-right-width: 0.0625rem !default; // 1px
$input-border-bottom-width: 0.0625rem !default; // 1px
$input-border-left-width: 0.0625rem !default; // 1px

$input-border-style: null !default;

$input-font-size: $font-size-base !default;
$input-font-size-mobile: null !default;
$input-height-mobile: null !default;
$input-height-inner-mobile: null !default;

$input-font-size-lg: $font-size-lg !default;
$input-font-size-lg-mobile: null !default;
$input-height-lg-mobile: null !default;
$input-height-inner-lg-mobile: null !default;

$input-font-size-sm: $font-size-sm !default;
$input-font-size-sm-mobile: null !default;
$input-height-sm-mobile: null !default;
$input-height-inner-sm-mobile: null !default;

$input-disabled-border-color: null !default;
$input-disabled-color: null !default;
$input-disabled-cursor: $disabled-cursor !default;
$input-disabled-opacity: null !default;
$input-placeholder-disabled-color: null !default;

$input-placeholder-focus-color: null !default;

$input-label-color: null !default;
$input-label-focus-color: null !default;
$input-label-font-size: null !default;
$input-label-font-size-mobile: null !default;
$input-label-font-weight: null !default;
$input-label-margin-bottom: null !default;

$input-label-for-cursor: $link-cursor !default;

$input-label-disabled-color: $text-muted !default;
$input-label-disabled-cursor: $disabled-cursor !default;

$input-label-reference-mark-color: $warning !default;
$input-label-reference-mark-font-size: null !default;
$input-label-reference-mark-spacer: null !default;
$input-label-reference-mark-vertical-align: null !default;

$input-readonly-bg: null !default;
$input-readonly-focus-bg: null !default;
$input-readonly-border-color: null !default;
$input-readonly-focus-border-color: null !default;
$input-readonly-color: null !default;
$input-readonly-focus-color: null !default;
$input-readonly-cursor: null !default;

$input-textarea-height: 150px !default;

// Form Control Label (Labels inside Form Control Tag Group)

$form-control-label-size: () !default;
$form-control-label-size: map-merge((
	border-width: 0.0625rem, // 1px
	height: 1.25rem // 20px
), $form-control-label-size);

// Form Control Tag Group

$form-control-tag-group-padding-y: ($input-height-inner - map-get($form-control-label-size, height) - ($label-spacer-y * 2)) / 2 !default;

// Form Control Inset

$form-control-inset-min-height: $input-font-size * $input-line-height !default;
$form-control-inset-margin-y: ($input-height-inner - ($form-control-tag-group-padding-y * 2) - $form-control-inset-min-height) / 2 !default;

// Form Group

$form-group-margin-bottom-mobile: null !default;

$form-group-autofit-margin-bottom: $form-group-margin-bottom !default;

// Form Control File

$input-file-cursor: $link-cursor !default;

// Form Check

$form-check-input-cursor: $link-cursor !default;
$form-check-input-disabled-cursor: $disabled-cursor !default;

$form-check-label-cursor: $input-label-for-cursor !default;

$form-check-label-text-margin-left: -0.3125rem !default; // 5px
$form-check-label-text-padding-left: 0.5rem !default; // 8px
$form-check-label-text-disabled-cursor: $disabled-cursor !default;

// Input Variants

$form-feedback-warning-color: $warning !default;

$input-danger-bg: null !default;
$input-danger-focus-bg: null !default;
$input-danger-border-color: $form-feedback-invalid-color !default;
$input-danger-focus-border-color: null !default;
$input-danger-box-shadow: null !default;
$input-danger-focus-box-shadow: 0 0 0 0.2rem rgba($form-feedback-invalid-color, 0.25) !default;
$input-danger-color: null !default;
$input-danger-focus-color: null !default;

$input-danger-checkbox-label-color: $form-feedback-invalid-color !default;
$input-danger-label-color: null !default;
$input-danger-select-icon-color: $input-danger-border-color !default;
$input-danger-select-icon: clay-str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='#{$input-danger-select-icon-color}' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E"), "#", "%23") !default;

$input-success-bg: null !default;
$input-success-focus-bg: null !default;
$input-success-border-color: $form-feedback-valid-color !default;
$input-success-focus-border-color: null !default;
$input-success-box-shadow: null !default;
$input-success-focus-box-shadow: 0 0 0 0.2rem rgba($form-feedback-valid-color, 0.25) !default;
$input-success-color: null !default;
$input-success-focus-color: null !default;

$input-success-checkbox-label-color: $form-feedback-valid-color !default;
$input-success-label-color: null !default;
$input-success-select-icon-color: $input-success-border-color !default;
$input-success-select-icon: clay-str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='#{$input-success-select-icon-color}' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E"), "#", "%23") !default;

$input-warning-bg: null !default;
$input-warning-focus-bg: null !default;
$input-warning-border-color: $form-feedback-warning-color !default;
$input-warning-focus-border-color: null !default;
$input-warning-box-shadow: null !default;
$input-warning-focus-box-shadow: 0 0 0 0.2rem rgba($form-feedback-warning-color, 0.25) !default;
$input-warning-color: null !default;
$input-warning-focus-color: null !default;

$input-warning-checkbox-label-color: $form-feedback-warning-color !default;
$input-warning-label-color: null !default;
$input-warning-select-icon-color: $input-warning-border-color !default;
$input-warning-select-icon: clay-str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='#{$input-warning-select-icon-color}' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E"), "#", "%23") !default;

// Select Element

$input-select-bg: null !default;
$input-select-focus-bg: null !default;

$input-select-bg-position: right $input-btn-padding-x center !default;
$input-select-bg-size: $custom-select-bg-size !default;
$input-select-cursor: $link-cursor !default;
$input-select-padding-bottom: null !default;
$input-select-padding-left: null !default;
$input-select-padding-right: $custom-select-indicator-padding + $input-btn-padding-x !default;
$input-select-padding-top: null !default;

$input-select-icon-color: $input-color !default;
$input-select-icon: $custom-select-indicator !default;

$input-select-icon-focus-color: null !default;
$input-select-icon-focus: null !default;

$input-select-icon-disabled-color: null !default;
$input-select-icon-disabled: null !default;

// Form Feedback

$form-feedback-font-weight: null !default;
$form-feedback-margin-top: 0.25rem !default;

$form-feedback-indicator-margin-x: 0.3125rem !default;

$form-text-color: $text-muted !default;
$form-text-font-size: 0.875rem !default; // 14px
$form-text-font-weight: null !default;

// Form Group Autofit

$form-group-item-label-max-width: 12.5rem !default; // 200px
$form-group-item-label-spacer: 2rem !default; // 32px

// Input Group

$input-group-addon-color: null !default;
$input-group-addon-font-weight: null !default;
$input-group-addon-min-width: 2.375rem !default; // 38px
$input-group-addon-padding-x: null !default;
$input-group-addon-padding-y: null !default;

// Input Group Sizes

$input-group-addon-min-width-lg: 3rem !default; // 48px
$input-group-addon-padding-x-lg: $input-padding-x-lg !default;
$input-group-addon-padding-y-lg: null !default;

$input-group-addon-min-width-sm: 1.9375rem !default; // 31px
$input-group-addon-padding-x-sm: $input-padding-x-sm !default;
$input-group-addon-padding-y-sm: null !default;

// Input Group Secondary

$input-group-secondary-addon-bg: $secondary !default;
$input-group-secondary-addon-border-color: $secondary !default;
$input-group-secondary-addon-border-width: 0.0625rem !default; // 1px
$input-group-secondary-addon-color: $white !default;

// Input Group Inset

$input-group-inset-item-color: $input-group-addon-color !default;

// Input Group Stacked

$input-group-stacked-sm-down: () !default;
$input-group-stacked-sm-down: map-merge((
	breakpoint: sm,
	item-margin-bottom: 0.5rem,
	item-margin-left: 0,
	shrink-margin-right: 0.5rem
), $input-group-stacked-sm-down);
$single-link-font-weight: $font-weight-semi-bold !default;

$component-link: () !default;
$component-link: map-merge((
	color: $secondary,
	hover-color: darken($secondary, 15%)
), $component-link);

$link-primary: () !default;
$link-primary: map-merge((
	color: $primary,
	hover-color: darken($primary, 15%)
), $link-primary);

$link-secondary: () !default;
$link-secondary: map-merge((
	color: $secondary,
	hover-color: darken($secondary, 15%)
), $link-secondary);

// Component Title

$component-title: () !default;
$component-title: map-merge((
	color: $body-color,
	font-size: 1.125rem,
	font-weight: $headings-font-weight,
	line-height: $headings-line-height,
	margin-bottom: calc((#{$dropdown-action-toggle-size} - (1em * #{$headings-line-height})) / 2),
	margin-top: calc((#{$dropdown-action-toggle-size} - (1em * #{$headings-line-height})) / 2)
), $component-title);

$component-title-link: () !default;
$component-title-link: map-merge((
	color: $body-color,
	hover-color: darken($body-color, 15%)
), $component-title-link);

// Component Subtitle

$component-subtitle: () !default;
$component-subtitle: map-merge((
	color: $secondary,
	margin-bottom: 0
), $component-subtitle);

$component-subtitle-link: () !default;
$component-subtitle-link: map-merge((
	color: $secondary,
	hover-color: darken($secondary, 15%)
), $component-subtitle-link);

// Component Action

$component-action: () !default;
$component-action: map-merge((
	bg: transparent,
	border-color: transparent,
	border-radius: $border-radius,
	color: $secondary,
	hover-bg: $secondary,
	hover-color: #FFF,
	btn-focus-box-shadow: 0 0 0 $btn-focus-width rgba($secondary, 0.5),
	btn-focus-outline: 0,
	active-bg: $secondary,
	active-color: #FFF,
	disabled-bg: transparent,
	disabled-color: $secondary,
	disabled-cursor: $disabled-cursor,
	disabled-opacity: $btn-disabled-opacity,
	transition: $btn-transition
), $component-action);

// Link Outline

$link-outline-border-radius: $btn-border-radius !default;
$link-outline-border-width: $btn-border-width !default;
$link-outline-font-size: $btn-font-size-sm !default;
$link-outline-font-weight: $font-weight-semi-bold !default;
$link-outline-line-height: $btn-line-height-sm !default;
$link-outline-padding-x: $btn-padding-x-sm !default;
$link-outline-padding-y: $btn-padding-y-sm !default;
$link-outline-transition: $btn-transition !default;

$link-outline-primary: () !default;
$link-outline-primary: map-merge((
	border-color: $primary,
	color: $primary,
	hover-bg: $primary,
	hover-color: #FFF,
	btn-focus-box-shadow: 0 0 0 $btn-focus-width rgba($primary, 0.5),
	btn-focus-outline: 0,
	disabled-bg: transparent,
	disabled-color: $primary,
	disabled-cursor: $btn-disabled-cursor,
	disabled-opacity: $btn-disabled-opacity,
	active-bg: $primary,
	active-color: #FFF
), $link-outline-primary);

$link-outline-secondary: () !default;
$link-outline-secondary: map-merge((
	border-color: $secondary,
	color: $secondary,
	hover-bg: $secondary,
	hover-color: #FFF,
	btn-focus-box-shadow: 0 0 0 $btn-focus-width rgba($secondary, 0.5),
	btn-focus-outline: 0,
	disabled-bg: transparent,
	disabled-color: $secondary,
	disabled-cursor: $btn-disabled-cursor,
	disabled-opacity: $btn-disabled-opacity,
	active-bg: $secondary,
	active-color: #FFF
), $link-outline-secondary);

// Link Monospaced

$link-monospaced-size: $btn-monospaced-size-sm !default;
$custom-control-indicator-border-color: null !default;
$custom-control-indicator-border-style: null !default;
$custom-control-indicator-border-width: null !default;

$custom-control-indicator-active-border-color: null !default;

$custom-control-indicator-disabled-border-color: null !default;
$custom-control-indicator-disabled-cursor: $disabled-cursor !default;

// Custom Control Indicator Checked

// $custom-control-indicator-active-checked-bg is deprecated as of v2.2.1
$custom-control-indicator-active-checked-bg: null !default;
$custom-control-indicator-checked-active-bg: $custom-control-indicator-active-checked-bg !default;

// $custom-control-indicator-active-checked-border-color is deprecated as of v2.2.1
$custom-control-indicator-active-checked-border-color: null !default;
$custom-control-indicator-checked-active-border-color: $custom-control-indicator-active-checked-border-color !default;

$custom-control-indicator-checked-border-color: null !default;

// $custom-control-indicator-disabled-checked-bg is deprecated as of v2.2.1
$custom-control-indicator-disabled-checked-bg: null !default;
$custom-control-indicator-checked-disabled-bg: $custom-control-indicator-disabled-checked-bg !default;

// $custom-control-indicator-disabled-checked-border-color is deprecated as of v2.2.1
$custom-control-indicator-disabled-checked-border-color: null !default;
$custom-control-indicator-checked-disabled-border-color: $custom-control-indicator-disabled-checked-border-color !default;

// Custom Control Indicator Indeterminate

$custom-control-indicator-indeterminate-border-color: null !default;

// Custom Description

$custom-control-description-cursor: $form-check-label-cursor !default;
$custom-control-description-font-size: null !default;
$custom-control-description-line-height: $custom-control-indicator-size !default;
$custom-control-description-padding-left: 0.5rem !default; // 8px
$custom-control-description-disabled-cursor: $disabled-cursor !default;

// Custom Checkbox

$custom-checkbox-indicator-icon-checked-bg-size: null !default;
$custom-checkbox-indicator-icon-indeterminate-bg-size: null !default;

// Custom Radio

$custom-radio-indicator-icon-checked-bg-size: null !default;

$custom-radio-indicator-disabled-border-color: null !default;

// $custom-radio-indicator-disabled-checked-border-color is deprecated as of v2.2.1
$custom-radio-indicator-disabled-checked-border-color: null !default;
$custom-radio-indicator-checked-disabled-border-color: $custom-radio-indicator-disabled-checked-border-color !default;
$list-group-box-shadow: null !default;
$list-group-color: null !default;
$list-group-font-size: null !default;

$list-group-margin-bottom: 1.5rem !default;
$list-group-margin-top: null !default;

// Use values flex-start, flex-end, or center
$list-group-item-flex-align-items: flex-start !default;

$list-group-item-flex-checkbox-offset-top: 0.1875rem !default; // 3px
$list-group-item-flex-offset-top: 0.0625rem !default; // 1px
$list-group-item-flex-list-group-title-offset-top: -0.25rem !default; // -4px

// List Group Header

$list-group-header-bg: $list-group-bg !default;
$list-group-header-padding-x: $list-group-item-padding-x !default;
$list-group-header-padding-y: $list-group-item-padding-y !default;

$list-group-header-title: () !default;
$list-group-header-title: map-merge((
	font-size: 1rem,
	font-weight: $font-weight-semi-bold,
	line-height: $headings-line-height,
	margin-bottom: 0
), $list-group-header-title);

// List Group Title

$list-group-title-link: () !default;
$list-group-title-link: map-merge((
	color: $body-color,
	hover-color: darken($body-color, 15%)
), $list-group-title-link);

$list-group-title: () !default;
$list-group-title: map-merge((
	font-size: 1.125rem, // 18px
	font-weight: $font-weight-semi-bold,
	margin-bottom: 0,
	margin-top: $list-group-item-flex-list-group-title-offset-top,
	clay-link: $list-group-title-link
), $list-group-title);

$list-group-title-active-color: $list-group-active-color !default;

// List Group Subtitle

$list-group-subtitle-link: () !default;
$list-group-subtitle-link: map-merge((
	color: $secondary,
	hover-color: darken($secondary, 15%)
), $list-group-subtitle-link);

$list-group-subtitle: () !default;
$list-group-subtitle: map-merge((
	color: $secondary,
	margin-bottom: 0,
	clay-link: $list-group-subtitle-link
), $list-group-subtitle);

// List Group Text

$list-group-text-link: () !default;
$list-group-text-link: map-merge((
	color: $body-color,
	hover-color: darken($body-color, 15%)
), $list-group-text-link);

$list-group-text: () !default;
$list-group-text: map-merge((
	color: $body-color,
	margin-bottom: 0,
	clay-link: $list-group-text-link
), $list-group-text);

$list-group-text-active-color: $list-group-active-color !default;

// List Group Subtext

$list-group-subtext-link: () !default;
$list-group-subtext-link: map-merge((
	color: $secondary,
	hover-color: darken($secondary, 15%)
), $list-group-subtext-link);

$list-group-subtext: () !default;
$list-group-subtext: map-merge((
	color: $secondary,
	margin-bottom: 0,
	clay-link: $list-group-subtext-link
), $list-group-subtext);

$list-group-subtext-active-color: $list-group-active-color !default;

// List Group Detail

$list-group-detail-margin-bottom: null !default;
$list-group-detail-margin-top: null !default;

$list-group-link-color: null !default;
$list-group-link-hover-color: null !default;
$list-group-link-active-color: $white !default;

// List Group Notification

$list-group-notification-item-border-bottom-color: $list-group-border-color !default;
$list-group-notification-item-border-left-color: $list-group-border-color !default;
$list-group-notification-item-border-right-color: $list-group-border-color !default;
$list-group-notification-item-border-top-color: $list-group-border-color !default;

$list-group-notification-item-active-border-bottom-color: $list-group-active-border-color !default;
$list-group-notification-item-active-border-left-color: $list-group-active-border-color !default;
$list-group-notification-item-active-border-right-color: $list-group-active-border-color !default;
$list-group-notification-item-active-border-top-color: $list-group-active-border-color !default;

$list-group-notification-item-border-bottom-width: 0.0625rem !default;
$list-group-notification-item-border-left-width: 0.0625rem !default;
$list-group-notification-item-border-right-width: 0.0625rem !default;
$list-group-notification-item-border-top-width: 0.0625rem !default;

$list-group-notification-item: () !default;

$list-group-notification-item-primary: () !default;
$list-group-notification-item-primary: map-merge((
	border-left-color: theme-color-level(primary, -9),
	border-left-width: 0.5rem,
	border-bottom-left-radius: 0,
	border-top-left-radius: 0,
	active-border-left-color: theme-color-level(primary, -9)
), $list-group-notification-item-primary);
$loading-icon-font-size: 2.5rem !default; // 40px

$loading-icon-font-size-sm: 1.25rem !default; // 20px

// Loading Icon Dotted

$loading-animation: () !default;
$loading-animation: map-merge((
	animation-name: loading-animation,
	color: $body-color
), $loading-animation);

$loading-animation-light: () !default;
$loading-animation-light: map-merge((
	animation-name: loading-animation-light,
	color: #FFF
), $loading-animation-light);
$modal-content-border-radius: $border-radius-lg !default;

$modal-header-bg: null !default;
$modal-header-color: null !default;
$modal-header-height: 4rem !default; // 64px
$modal-header-height-mobile: null !default;

$modal-body-bg: null !default;
$modal-body-color: null !default;

$modal-footer-bg: null !default;
$modal-footer-box-shadow: null !default;
$modal-footer-color: null !default;
$modal-footer-height: null !default;
$modal-footer-padding-x: null !default;
$modal-footer-padding-y: 0.75rem !default; // 12px
$modal-footer-height-mobile: null !default;

$modal-item-padding-x: null !default;
$modal-item-padding-y: 0.25rem !default; // 4px

$modal-title-font-size: 1.25rem !default; // 20px
$modal-title-font-weight: $font-weight-semi-bold !default;
$modal-title-text-align: null !default;
$modal-title-font-size-mobile: null !default;

$modal-title-indicator-font-size: 0.875rem !default; // 14px
$modal-title-indicator-spacer-x: 0.5rem !default; // 8px

// Modal Close

$modal-close-spacer-x: 0.3125rem !default; // 5px

// Modal Success

$modal-success: () !default;
$modal-success: map-merge((
	header-bg: theme-color-level(success, -10),
	header-border-color: theme-color-level(success, -9),
	header-color: theme-color-level(success, 6),
	header-close: (
		color: theme-color-level(success, 6),
		hover-color: inherit,
		focus-color: inherit,
		disabled-color: inherit
	)
), $modal-success);

// Modal Info

$modal-info: () !default;
$modal-info: map-merge((
	header-bg: theme-color-level(info, -10),
	header-border-color: theme-color-level(info, -9),
	header-color: theme-color-level(info, 6),
	header-close: (
		color: theme-color-level(info, 6),
		hover-color: inherit,
		focus-color: inherit,
		disabled-color: inherit
	)
), $modal-info);

// Modal Warning

$modal-warning: () !default;
$modal-warning: map-merge((
	header-bg: theme-color-level(warning, -10),
	header-border-color: theme-color-level(warning, -9),
	header-color: theme-color-level(warning, 6),
	header-close: (
		color: theme-color-level(warning, 6),
		hover-color: inherit,
		focus-color: inherit,
		disabled-color: inherit
	)
), $modal-warning);

// Modal Danger

$modal-danger: () !default;
$modal-danger: map-merge((
	header-bg: theme-color-level(danger, -10),
	header-border-color: theme-color-level(danger, -9),
	header-color: theme-color-level(danger, 6),
	header-close: (
		color: theme-color-level(danger, 6),
		hover-color: inherit,
		focus-color: inherit,
		disabled-color: inherit
	)
), $modal-danger);

$modal-palette: () !default;
$modal-palette: map-merge((
	success: $modal-success,
	info: $modal-info,
	warning: $modal-warning,
	danger: $modal-danger
), $modal-palette);
$multi-step-nav-margin-bottom: 15px !default;
$multi-step-nav-padding-x: 15px !default;
$multi-step-nav-padding-y: 0 !default;

$multi-step-icon-bg: $gray-200 !default;
$multi-step-icon-color: rgba($black, 0.5) !default;
$multi-step-icon-border-radius: $border-radius !default;
$multi-step-icon-font-size: $font-size-base !default;
$multi-step-icon-font-weight: null !default;
$multi-step-icon-size: 2rem !default;

$multi-step-icon-hover-bg: $multi-step-icon-bg !default;
$multi-step-icon-hover-color: rgba($black, 0.7) !default;
$multi-step-icon-hover-text-decoration: none !default;

$multi-step-divider-bg: $gray-200 !default;
$multi-step-divider-height: 0.25rem !default;
$multi-step-divider-spacer-x: 0 !default;
$multi-step-divider-top: ($multi-step-divider-height / 2) + ($multi-step-icon-size / 2) !default;

$multi-step-indicator-width: $multi-step-icon-size + ($multi-step-divider-spacer-x * 2) !default;

$multi-step-indicator-label-color: null !default;
$multi-step-indicator-label-font-size: $font-size-base !default;
$multi-step-indicator-label-font-weight: null !default;
$multi-step-indicator-label-max-width: 100px !default;

$multi-step-title-color: null !default;
$multi-step-title-font-size: $font-size-base !default;
$multi-step-title-font-weight: null !default;
$multi-step-title-margin-bottom: 0.625rem !default; // 10px
$multi-step-title-max-width: 100px !default;

$multi-step-item-margin-bottom: 10px !default;
$multi-step-item-width: 75px !default;
$multi-step-item-fixed-width: 150px !default;

$multi-step-icon-complete-color: #FFF !default;
$multi-step-icon-complete-bg: $secondary !default;
$multi-step-icon-complete-bg-image: clay-icon(check, $multi-step-icon-complete-color) !default;
$multi-step-icon-complete-bg-position: center !default;
$multi-step-icon-complete-bg-size: $multi-step-icon-font-size !default;
$multi-step-divider-complete-bg: $multi-step-icon-complete-bg !default;
$multi-step-dropdown-indicator-complete-icon: clay-icon(check, $dropdown-link-active-color) !default;
$multi-step-dropdown-indicator-complete-width: 0.875rem !default;

$multi-step-icon-active-color: $component-active-color !default;
$multi-step-icon-active-bg: $component-active-bg !default;
$multi-step-icon-active-bg-image: null !default;
$multi-step-icon-active-bg-position: center !default;
$multi-step-icon-active-bg-size: $multi-step-icon-font-size !default;
$multi-step-divider-active-bg: $multi-step-divider-bg !default;

$multi-step-icon-disabled-bg: $gray-100 !default;
$multi-step-icon-disabled-bg-image: null !default;
$multi-step-icon-disabled-bg-position: null !default;
$multi-step-icon-disabled-bg-size: null !default;
$multi-step-icon-disabled-color: $gray-400 !default;
$multi-step-icon-disabled-cursor: $disabled-cursor !default;
$multi-step-divider-disabled-bg: $multi-step-icon-disabled-bg !default;
$multi-step-title-disabled-color: $multi-step-icon-disabled-color !default;
$multi-step-indicator-label-disabled-color: $multi-step-title-disabled-color !default;
$nav-font-size: null !default;

$nav-link-disabled-cursor: $disabled-cursor !default;

$nav-item-monospaced-size: 2rem !default; // 32px

$nav-btn-margin-x: 0.25rem !default; // 4px
$nav-btn-margin-y: (($line-height-base * $font-size-base) + ($nav-link-padding-y * 2) - $nav-item-monospaced-size) / 2 !default;
$nav-btn-padding-x: $btn-padding-x-sm !default;
$nav-btn-padding-y: 0 !default;

$nav-form-padding-bottom: 0 !default;
$nav-form-padding-left: $nav-link-padding-x !default;
$nav-form-padding-right: $nav-link-padding-x !default;
$nav-form-padding-top: 0 !default;

// Nav Stacked

$nav-stacked-nav-form-padding-bottom: $nav-link-padding-y !default;
$nav-stacked-nav-form-padding-left: 0.5rem !default;
$nav-stacked-nav-form-padding-right: 0.5rem !default;
$nav-stacked-nav-form-padding-top: $nav-link-padding-y !default;

// Nav Nested

$nav-nested-margins-spacer-x: $nav-link-padding-x !default;
$nav-nested-spacer-x: $nav-link-padding-x !default;

// Nav Tabs

$nav-tabs-font-size: null !default;
$nav-tabs-link-color: null !default;
$nav-tabs-link-padding-x: null !default;
$nav-tabs-link-padding-y: null !default;

$nav-tabs-link-show-color: null !default;
$nav-tabs-link-show-bg: null !default;
$nav-tabs-link-show-border-color: null !default;

$nav-tabs-tab-pane-bg: null !default;
$nav-tabs-tab-pane-border-radius: null !default;
$nav-tabs-tab-pane-padding: null !default;

// Nav Underline

$nav-underline-font-size: null !default;

$nav-underline-link-highlight-palette: null !default;

$nav-underline-link-color: null !default;
$nav-underline-link-padding-x: null !default;
$nav-underline-link-padding-y: null !default;
$nav-underline-link-hover-color: null !default;
$nav-underline-link-highlight-content: null !default;
$nav-underline-link-highlight-height: null !default;
$nav-underline-link-highlight-bottom: 0 !default;
$nav-underline-link-highlight-left: $nav-link-padding-x / 2 !default;
$nav-underline-link-highlight-right: $nav-link-padding-x / 2 !default;
$nav-underline-link-highlight-top: null !default;

$nav-underline-link-disabled-color: null !default;
$nav-underline-link-disabled-highlight: null !default;

$nav-underline-link-active-color: null !default;
$nav-underline-link-active-highlight: $component-active-bg !default;
$nav-underline-link-active-content: '' !default;
$nav-underline-link-active-highlight-height: 0.1875rem !default;
$collapse-icon-padding-left: null !default;
$collapse-icon-padding-right: 2.28125rem !default; // 45px

$collapse-icon-position-bottom: null !default;
$collapse-icon-position-left: null !default;
$collapse-icon-position-right: 0.9375rem !default; // 15px
$collapse-icon-position-top: clay-collapse-icon-align($nav-link-padding-y, 0.0625rem, $font-size-base) !default;

$lexicon-icon-size: 1em !default; // 16px

$lexicon-icon-sm-font-size: 0.5rem !default; // 8px
$lexicon-icon-lg-font-size: 2rem !default; // 32px
$lexicon-icon-xl-font-size: 8rem !default; // 128px

$order-arrow-down-active-color: rgba($black, 0.9) !default;
$order-arrow-up-active-color: $order-arrow-down-active-color !default;
// Menubar Vertical MD

$menubar-vertical-expand-md: () !default;
$menubar-vertical-expand-md: map-merge((
	margin-bottom-mobile: 1.5rem,
	margin-left-mobile: -($grid-gutter-width / 2),
	margin-right-mobile: -($grid-gutter-width / 2),
	collapse-z-index-mobile: $zindex-navbar-collapse-absolute - 1
), $menubar-vertical-expand-md);

$menubar-vertical-transparent-md: () !default;
$menubar-vertical-transparent-md: map-merge((
	bg-mobile: $light
), $menubar-vertical-transparent-md);

// Menubar Vertical LG

$menubar-vertical-expand-lg: () !default;
$menubar-vertical-expand-lg: map-merge((
	breakpoint-up: lg,
	margin-bottom-mobile: 1.5rem,
	margin-left-mobile: -($grid-gutter-width / 2),
	margin-right-mobile: -($grid-gutter-width / 2),
	collapse-z-index-mobile: $zindex-navbar-collapse-absolute - 1
), $menubar-vertical-expand-lg);

$menubar-vertical-transparent-lg: () !default;
$menubar-vertical-transparent-lg: map-merge((
	breakpoint-up: lg,
	bg-mobile: $light
), $menubar-vertical-transparent-lg);
$enable-scaling-navbar: $enable-scaling-components !default;

$navbar-border-radius: null !default;
$navbar-font-size: null !default;

$navbar-underline-active-bg: $component-active-bg !default;

$navbar-title-font-size: 1.25rem !default; // 20px
$navbar-title-font-weight: $font-weight-semi-bold !default;
$navbar-title-margin-bottom: 0 !default;
$navbar-title-text-transform: null !default;

$navbar-text-truncate-spacer-right: 1.5625rem !default; // 25px
$navbar-text-truncate-max-width: 12.5rem !default; // 200px

$navbar-toggler-cursor: null !default;
$application-bar-size: () !default;
$application-bar-size: map-merge((
	scaling-navbar: true,
	font-size: $navbar-font-size,
	height: 3.5rem,
	height-mobile: 3rem,
	btn-monospaced-font-size: 1rem,
	link-height: 2rem,
	link-height-mobile: 2rem,
	link-margin-x: 0.5rem,
	link-padding-x: 0.25rem,
	padding-x: 0,
	padding-y: 0
), $application-bar-size);

$application-bar-dark: () !default;
$application-bar-dark: map-merge((
	bg: $dark,
	color: $navbar-dark-color,
	link-color: $navbar-dark-color,
	link-hover-color: $navbar-dark-hover-color,
	link-active-color: $navbar-dark-active-color,
	link-disabled-color: $navbar-dark-disabled-color,
	link-disabled-opacity: 1
), $application-bar-dark);
$management-bar-size: () !default;
$management-bar-size: map-merge((
	scaling-navbar: true,
	font-size: $navbar-font-size,
	height: 4rem,
	height-mobile: 3rem,
	border-bottom-width: 0.0625rem,
	padding-x: 0,
	padding-y: 0,
	btn-monospaced-font-size: 1rem,
	link-height: 2rem,
	link-height-mobile: 2rem,
	link-margin-x: 0.5rem,
	link-margin-x-mobile: 0.25rem,
	link-padding-x-mobile: 0.25rem,
	form-control-height-mobile: 2rem,
	toggler-margin-x: 0.875rem,
	active-border-bottom-width: 0.25rem,
	nav-item-dropdown-margin-top: 0
), $management-bar-size);

$management-bar-light: () !default;
$management-bar-light: map-merge((
	bg: $light,
	link-color: $navbar-light-color,
	link-hover-color: $navbar-light-hover-color,
	link-active-color: $navbar-light-active-color,
	link-disabled-color: $navbar-light-disabled-color,
	link-disabled-opacity: 1
), $management-bar-light);

$management-bar-primary: () !default;
$management-bar-primary: map-merge((
	bg: lighten($primary, 44.90),
	border-color: $primary,
	color: $navbar-light-color,
	link-color: $navbar-light-color,
	link-hover-color: $navbar-light-hover-color,
	link-active-color: $navbar-light-active-color,
	link-disabled-color: $navbar-light-disabled-color,
	link-disabled-opacity: 1
), $management-bar-primary);
$navigation-bar-size: () !default;
$navigation-bar-size: map-merge((
	scaling-navbar: false,
	border-bottom-width: 0.0625rem,
	font-size: $navbar-font-size,
	height: 3rem,
	padding-x: 0,
	padding-y: 0,
	link-padding-x: 1rem,
	collapse-dropdown-item-padding-x-mobile: 1rem,
	collapse-dropdown-item-padding-y-mobile: 0.71875rem,
	nav-item-dropdown-margin-top: 0,
	active-border-bottom-width: 0.25rem
), $navigation-bar-size);

$navigation-bar-light: () !default;
$navigation-bar-light: map-merge((
	bg: $light,
	link-color: $navbar-light-color,
	link-hover-color: $navbar-light-hover-color,
	link-active-color: $navbar-light-active-color,
	link-disabled-color: $navbar-light-disabled-color,
	link-disabled-opacity: 1
), $navigation-bar-light);

$navigation-bar-secondary: () !default;
$navigation-bar-secondary: map-merge((
	bg: $secondary,
	color: #FFF,
	link-color: rgba(255, 255, 255, 0.65),
	link-hover-color: rgba(255, 255, 255, 0.9),
	link-active-color: rgba(255, 255, 255, 0.9),
	link-disabled-color: rgba(255, 255, 255, 0.25),
	link-disabled-opacity: 1,
	brand-color: rgba(255, 255, 255, 0.9),
	brand-hover-color: rgba(255, 255, 255, 0.9)
), $navigation-bar-secondary);
$pagination-font-size: null !default;

$pagination-item-margin-x: null !default;
$pagination-item-margin-y: null !default;

$pagination-link-border-radius: null !default;
$pagination-link-cursor: null !default;

$pagination-margin-bottom: 0.5rem !default;

$pagination-disabled-cursor: $disabled-cursor !default;
$pagination-disabled-opacity: null !default;
$pagination-disabled-pointer-events: auto !default;

$pagination-dropdown-menu-spacer-y: null !default;

$pagination-items-per-page-bg: null !default;
$pagination-items-per-page-border-color: $pagination-border-color !default;
$pagination-items-per-page-border-radius: $border-radius !default;
$pagination-items-per-page-color: $pagination-color !default;
$pagination-items-per-page-font-size: $pagination-font-size !default;

$pagination-items-per-page-hover-bg: $pagination-hover-bg !default;
$pagination-items-per-page-hover-border-color: $pagination-hover-border-color !default;
$pagination-items-per-page-hover-color: $pagination-hover-color !default;

$pagination-results-color: null !default;

// Sizes

$pagination-font-size-sm: $font-size-sm !default;
$pagination-line-height-sm: $line-height-sm !default;
$pagination-link-border-radius-sm: null !default;

$pagination-font-size-lg: $font-size-lg !default;
$pagination-line-height-lg: $line-height-lg !default;
$pagination-link-border-radius-lg: null !default;
$panel-bg: #FFF !default;
$panel-border-color: transparent !default;
$panel-border-style: solid !default;

$panel-border-bottom-width: 1px !default;
$panel-border-left-width: 1px !default;
$panel-border-right-width: 1px !default;
$panel-border-top-width: 1px !default;
$panel-border-width: $panel-border-top-width $panel-border-right-width $panel-border-bottom-width $panel-border-left-width !default;

$panel-border-radius: $border-radius !default;
$panel-box-shadow: null !default;
$panel-margin-bottom: $spacer !default;

// Panel Header

$panel-header-border-bottom-width: 1px !default;
$panel-header-offset-border-radius: if($panel-border-top-width > 0, calc(#{$panel-border-radius} - #{$panel-border-top-width}), $panel-border-radius) !default;
$panel-header-font-size: $font-size-base !default;
$panel-header-line-height: $headings-line-height !default;
$panel-header-padding-x: 1.25rem !default;
$panel-header-padding-y: 0.75rem !default;

$panel-header-collapse-icon-font-size: 0.875rem !default; // 14px
$panel-header-collapse-icon-bottom: null !default;
$panel-header-collapse-icon-left: null !default;
$panel-header-collapse-icon-right: null !default;
$panel-header-collapse-icon-top: clay-collapse-icon-align($panel-header-padding-y, 0, $panel-header-font-size, $panel-header-line-height) !default;

$panel-header-collapse-icon-padding-left: null !default;
$panel-header-collapse-icon-padding-right: null !default;

$panel-header-link-text-decoration: null !default;
$panel-header-link-hover-text-decoration: null !default;

// Panel Body

$panel-body-padding-x: 1.25rem !default;
$panel-body-padding-y: 0.75rem !default;

// Panel Footer

$panel-footer-border-top-width: 1px !default;
$panel-footer-offset-border-radius: if($panel-border-bottom-width > 0, calc(#{$panel-border-radius} - #{$panel-border-bottom-width}), $panel-border-radius) !default;
$panel-footer-padding-x: $panel-header-padding-x !default;
$panel-footer-padding-y: $panel-header-padding-y !default;

// Panel Title

$panel-title-font-size: null !default;
$panel-title-font-weight: $font-weight-semi-bold !default;
$panel-title-text-transform: null !default;

// Panel Group

$panel-group-panel-margin-bottom: -$panel-border-bottom-width !default;

// Panel Group Flush

$panel-group-flush-body-margin-bottom: 1.5rem !default;
$panel-group-flush-body-padding: 0 !default;

$panel-group-flush-collapse-icon-left: null !default;
$panel-group-flush-collapse-icon-right: 0 !default;
$panel-group-flush-collapse-icon-padding-left: null !default;
$panel-group-flush-collapse-icon-padding-right: 1.5rem !default;

// Panel Variants

$panel-secondary: () !default;
$panel-secondary: map-merge((
	border-color: rgba($black, 0.125),
	header-bg: $gray-100,
	header-border-color: rgba($black, 0.125),
	footer-bg: $gray-100,
	footer-border-color: rgba($black, 0.125)
), $panel-secondary);
$popover-inline-scroller-max-height: 14.75rem !default; // 236px

$popover-arrow-offset: 0.375rem !default; // 6px

$popover-bottom-arrow-color: $popover-header-bg !default;
$popover-bottom-left-arrow-color: $popover-header-bg !default;
$popover-bottom-right-arrow-color: $popover-header-bg !default;
$popover-left-arrow-color: null !default;
$popover-left-bottom-arrow-color: null !default;
$popover-left-top-arrow-color: $popover-header-bg !default;
$popover-right-arrow-color: null !default;
$popover-right-bottom-arrow-color: null !default;
$popover-right-top-arrow-color: $popover-header-bg !default;
$popover-top-arrow-color: null !default;
$popover-top-left-arrow-color: null !default;
$popover-top-right-arrow-color: null !default;

$popover-header-border-color: null !default;
$popover-header-font-size: $font-size-base !default;
$popover-header-font-weight: $font-weight-semi-bold !default;
$popover-header-margin-x: null !default;
$popover-header-margin-y: null !default;

$popover-offset-border-width: calc(#{$popover-border-radius} - #{$popover-border-width}) !default;
$progress-min-width: 6.25rem !default; // 100px

$progress-bar-box-shadow: null !default;

// Progress Sizes

$progress-border-radius-lg: $border-radius !default;
$progress-font-size-lg: $font-size-lg !default;
$progress-height-lg: $progress-height * 2 !default;

// Progress Group

$progress-group-subtitle: () !default;

$progress-group-addon-font-size: null !default;
$progress-group-addon-font-weight: null !default;
$progress-group-addon-spacer-x: 1rem !default;

$progress-group-stacked-progress-margin-bottom: 0.25rem !default; // 4px
$progress-group-stacked-progress-margin-top: 0.25rem !default; // 4px

// Progress Variants

$progress-group-feedback-color: $primary !default;

$progress-bar-danger-bg: $danger !default;
$progress-group-feedback-danger-color: $progress-bar-danger-bg !default;

$progress-bar-info-bg: $info !default;
$progress-group-feedback-info-color: $progress-bar-info-bg !default;

$progress-bar-success-bg: $success !default;
$progress-group-feedback-success-color: $progress-bar-success-bg !default;

$progress-bar-warning-bg: $warning !default;
$progress-group-feedback-warning-color: $progress-bar-warning-bg !default;

$progress-palette: () !default;
$progress-palette: map-merge((
	success: (
		bar-bg: $progress-bar-success-bg,
		group-feedback-color: $progress-group-feedback-success-color
	),
	info: (
		bar-bg: $progress-bar-info-bg,
		group-feedback-color: $progress-group-feedback-info-color
	),
	warning: (
		bar-bg: $progress-bar-warning-bg,
		group-feedback-color: $progress-group-feedback-warning-color
	),
	danger: (
		bar-bg: $progress-bar-danger-bg,
		group-feedback-color: $progress-group-feedback-danger-color
	)
), $progress-palette);
$quick-action-font-size: null !default;
$quick-action-padding-x: null !default;
$quick-action-padding-y: null !default;

$quick-action-item-margin-x: 0.5rem !default; // 8px
$quick-action-item-margin-y: null !default;
$quick-action-item-padding-x: null !default; // 8px
$quick-action-item-padding-y: null !default; // 8px

$quick-action-item-min-height: 2rem !default; // 32px
$quick-action-item-min-width: 2rem !default; // 32px

$quick-action-item-border-radius: $border-radius !default;

$quick-action-item-disabled-cursor: $disabled-cursor !default;
$quick-action-item-disabled-opacity: 0.65 !default;
$sheet-bg: $white !default;
$sheet-border-color: rgba($black, 0.125) !default;
$sheet-border-style: solid !default;
$sheet-border-width: 0.0625rem !default; // 1px

$sheet-border-radius: $border-radius !default;

$sheet-padding-bottom: 0.0625rem !default; // 1px
$sheet-padding-left: 1.5rem !default; // 24px
$sheet-padding-right: 1.5rem !default; // 24px
$sheet-padding-top: 1.5rem !default; // 24px

$sheet-padding-bottom-mobile: null !default;
$sheet-padding-left-mobile: null !default;
$sheet-padding-right-mobile: null !default;
$sheet-padding-top-mobile: null !default;

// Sheet Header

$sheet-header-margin-bottom: 3rem !default; // 48px
$sheet-header-margin-bottom-mobile: null !default;

// Sheet Section

$sheet-section-margin-bottom: 3rem !default; // 48px
$sheet-section-margin-bottom-mobile: null !default;

$sheet-panel-group-margin-bottom: 1.5rem !default; // 24px
$sheet-panel-group-margin-bottom-mobile: null !default;

// Sheet Footer

$sheet-footer-margin-bottom: 1.5rem !default; // 24px
$sheet-footer-margin-left: null !default;
$sheet-footer-margin-right: null !default;
$sheet-footer-margin-top: 1.5rem !default; // 24px

$sheet-footer-margin-bottom-mobile: null !default;
$sheet-footer-margin-left-mobile: null !default;
$sheet-footer-margin-right-mobile: null !default;
$sheet-footer-margin-top-mobile: null !default;

$sheet-footer-btn-block-sm-down: () !default;
$sheet-footer-btn-block-sm-down: map-merge((
	breakpoint-down: sm,
	btn-margin-bottom-mobile: 1rem
), $sheet-footer-btn-block-sm-down);

// Sheet Sizes

$sheet-lg-max-width: ceil(map-get($container-max-widths, lg) * 0.83333) !default; // 800px

// Sheet Title

$sheet-title-color: null !default;
$sheet-title-font-size: 1.5rem !default; // 24px
$sheet-title-font-weight: $font-weight-semi-bold !default;
$sheet-title-line-height: $headings-line-height !default; // 1.2
$sheet-title-margin-bottom: 1.5rem !default; // 24px

$sheet-title-font-size-mobile: 1.25rem !default; // 20px
$sheet-title-margin-bottom-mobile: null !default;

// Sheet Subtitle

$sheet-subtitle-border-color: null !default;
$sheet-subtitle-border-style: solid !default;
$sheet-subtitle-border-width: 0 0 1px 0 !default;
$sheet-subtitle-color: null !default;
$sheet-subtitle-font-size: 0.875rem !default; // 14px
$sheet-subtitle-font-weight: $font-weight-semi-bold !default;
$sheet-subtitle-line-height: $headings-line-height !default; // 1.2
$sheet-subtitle-margin-bottom: 1.5rem !default; // 24px
$sheet-subtitle-padding-x: null !default;
$sheet-subtitle-padding-y: 0.3125rem !default; // 5px
$sheet-subtitle-text-transform: uppercase !default;

$sheet-subtitle-font-size-mobile: null !default;
$sheet-subtitle-margin-bottom-mobile: null !default;

$sheet-subtitle-heading-text-margin-bottom: 0 !default;
$sheet-subtitle-heading-text-margin-top: null !default;

// Sheet Subtitle as Panel Header

$sheet-subtitle-link-color: $sheet-subtitle-color !default;
$sheet-subtitle-link-text-decoration: null !default;
$sheet-subtitle-link-hover-color: null !default;
$sheet-subtitle-link-hover-text-decoration: none !default;

$sheet-subtitle-collapse-icon-bottom: null !default;
$sheet-subtitle-collapse-icon-left: null !default;
$sheet-subtitle-collapse-icon-right: null !default;
$sheet-subtitle-collapse-icon-top: clay-collapse-icon-align($sheet-subtitle-padding-y, 0, $sheet-subtitle-font-size, $sheet-subtitle-line-height) !default;

$sheet-subtitle-collapse-icon-padding-left: null !default;
$sheet-subtitle-collapse-icon-padding-right: null !default;

// Sheet Tertiary Title

$sheet-tertiary-title-color: $sheet-subtitle-color !default;
$sheet-tertiary-title-font-size: $sheet-subtitle-font-size !default;
$sheet-tertiary-title-font-weight: $sheet-subtitle-font-weight !default;
$sheet-tertiary-title-line-height: $sheet-subtitle-line-height !default;
$sheet-tertiary-title-margin-bottom: $sheet-subtitle-margin-bottom !default;
$sheet-tertiary-title-padding-x: $sheet-subtitle-padding-x !default;
$sheet-tertiary-title-padding-y: $sheet-subtitle-padding-y !default;
$sheet-tertiary-title-text-transform: $sheet-subtitle-text-transform !default;

$sheet-tertiary-title-font-size-mobile: null !default;
$sheet-tertiary-title-margin-bottom-mobile: null !default;

// Sheet Text

$sheet-text-color: null !default;
$sheet-text-font-size: null !default;
$sheet-text-font-weight: null !default;
$sheet-text-margin-bottom: 1.5rem !default; // 24px

$sheet-text-font-size-mobile: null !default;
$sheet-text-margin-bottom-mobile: null !default;
$sidenav-transition: all 0.5s ease !default;
$sidenav-width: 320px !default;
$sidebar-padding-bottom: 1.5rem !default; // 24px
$sidebar-padding-left: 1.5rem !default; // 24px
$sidebar-padding-right: 1.5rem !default; // 24px
$sidebar-padding-top: 1.5rem !default; // 24px

// Sidebar Header Title

$sidebar-header-component-title: () !default;
$sidebar-header-component-title: map-merge((
	font-size: 1.5rem, // 24px,
	font-weight: $font-weight-semi-bold,
	clay-link: (
		color: $body-color
	)
), $sidebar-header-component-title);

// Sidebar Header Subtitle

$sidebar-header-component-subtitle: () !default;
$sidebar-header-component-subtitle: map-merge((
	font-size: 1.125rem, // 18px
	font-weight: $font-weight-semi-bold,
	margin-bottom: 0
), $sidebar-header-component-subtitle);

// Sidebar DT

$sidebar-dt: () !default;
$sidebar-dt: map-merge((
	font-size: 0.875rem, // 14px
	font-weight: $font-weight-semi-bold,
	margin-bottom: 0.25rem, // 4px
	text-transform: uppercase
), $sidebar-dt);

// Sidebar DD

$sidebar-dd: () !default;
$sidebar-dd: map-merge((
	font-size: 0.875rem, // 14px
	margin-bottom: 0.75rem // 12px
), $sidebar-dd);

// Sidebar Panel

$sidebar-panel-margin-bottom: 1rem !default; // 16px

// Sidebar List Group

$sidebar-list-group-bg: transparent !default;
$sidebar-list-group-border-color: $gray-300 !default;
$sidebar-list-group-font-size: 0.875rem !default; // 14px
$sidebar-list-group-type: list-group-flush !default;

$sidebar-list-group-item-padding: 0 !default;

$sidebar-list-group-autofit-col-padding-x: 0.5rem !default; // 8px
$sidebar-list-group-autofit-col-padding-y: 1rem !default; // 16px

$sidebar-list-group-sticker-size: () !default;
$sidebar-list-group-sticker-size: map-merge($sticker-sm, $sidebar-list-group-sticker-size);

// Sidebar Light

$sidebar-light: () !default;
$sidebar-light: map-merge((
	bg: $light,
	border-color: $gray-300,
	border-left-width: 1px,
	color: $body-color,
	dd: (
		clay-link: (
			color: $body-color
		)
	),
	panel-bg: $gray-200,
	sidebar-list-group-title: (
		font-size: 1rem,
		clay-link: (
			color: $body-color
		)
	)
), $sidebar-light);

$sidebar-light-navigation-bar: () !default;
$sidebar-light-navigation-bar: map-merge((
	bg: $light,
	border-color: $gray-300,
	link-color: $navbar-light-color,
	link-hover-color: $navbar-light-hover-color,
	link-active-color: $navbar-light-active-color,
	link-disabled-color: $navbar-light-disabled-color
), $sidebar-light-navigation-bar);
$table-responsive-margin-bottom: 1.5rem !default;

// Table

$table-font-size: null !default;
$table-margin-bottom: 0 !default;

$table-cell-gutters: $grid-gutter-width / 2 !default; // 15px

$table-disabled-bg: #FFF !default;
$table-disabled-color: #ACACAC !default;
$table-disabled-cursor: $disabled-cursor !default;
$table-disabled-pointer-events: none !default;

$table-head-border-bottom-width: null !default;
$table-head-border-top-width: 0 !default;
$table-head-font-size: null !default;
$table-head-font-weight: null !default;
$table-head-height: 36px !default;

$table-head-link: () !default;

$table-head-title-inline-item-spacer-x: 0.25rem !default; // 4px
$table-head-title-text-truncate-max-width: calc(100% - 1em - #{$table-head-title-inline-item-spacer-x}) !default;

$table-data-border-bottom-width: $table-border-width !default;
$table-data-border-left-width: 0 !default;
$table-data-border-right-width: 0 !default;
$table-data-border-top-width: $table-border-width !default;

$table-data-border-color: $table-border-color !default;
$table-data-border-style: solid !default;
$table-data-vertical-align: middle !default;

$table-divider-bg: #FFF !default;
$table-divider-color: null !default;
$table-divider-font-weight: null !default;
$table-divider-font-size: null !default;
$table-divider-padding: $table-cell-padding !default;
$table-divider-text-transform: null !default;

$table-quick-action-menu-align-items: flex-start !default;
$table-quick-action-menu-bg: if($table-bg == transparent, $body-bg, $table-bg) !default;
$table-quick-action-menu-accent-bg: $table-accent-bg !default;
$table-quick-action-menu-accent-active-bg: $table-accent-bg !default;
$table-quick-action-menu-active-bg: $table-active-bg !default;
$table-quick-action-menu-hover-bg: $table-hover-bg !default;

$table-cell-expand-min-width: 12.5rem !default; // 200px

$table-cell-expand-small-max-width: 12.5rem !default; // 200px
$table-cell-expand-small-width: 25% !default;

$table-cell-expand-smaller-max-width: 12.5rem !default; // 200px
$table-cell-expand-smaller-width: 15% !default;

$table-cell-expand-smallest-max-width: 12.5rem !default; // 200px
$table-cell-expand-smallest-width: 10% !default;

// Table Bordered

$table-bordered-border-width: $table-border-width !default;

// Table Title

$table-title: () !default;
$table-title: map-merge((
	font-size: $font-size-base, // 16px
	font-weight: $font-weight-semi-bold,
	line-height: $line-height-base,
	margin-bottom: 0
), $table-title);

$table-title-link: () !default;
$table-title-link: map-merge((
	color: $body-color,
	hover-color: $body-color
), $table-title-link);

// Table Link

$table-link: () !default;
$table-link: map-merge((
	color: $gray-700,
	hover-color: darken($gray-700, 15%)
), $table-link);

// Table Action Link

$table-action-link: () !default;
$table-action-link: map-merge((
	align-items: center,
	border-radius: $btn-border-radius,
	display: inline-flex,
	height: 2rem,
	justify-content: center,
	vertical-align: middle,
	width: 2rem,
	hover-text-decoration: none,
	lexicon-icon-margin-top: 0
), $table-action-link);

// Table List

$table-list-bg: #FFF !default;
$table-list-color: null !default;
$table-list-accent-bg: #F2F2F2 !default;
$table-list-hover-bg: #ECECEC !default;
$table-list-active-bg: #DADADA !default;

$table-list-disabled-bg: #FFF !default;
$table-list-disabled-color: #ACACAC !default;
$table-list-disabled-cursor: $disabled-cursor !default;
$table-list-disabled-pointer-events: none !default;

$table-list-border-color: $table-border-color !default;

$table-list-border-x-width: 0.0625rem !default; // 1px
$table-list-border-y-width: 0.0625rem !default; // 1px

$table-list-border-width: $table-list-border-y-width $table-list-border-x-width !default;

$table-list-border-radius: $border-radius !default;
$table-list-font-size: null !default;
$table-list-margin-bottom: $table-list-border-y-width !default;
$table-list-margin-top: null !default;

$table-list-head-bg: null !default;
$table-list-head-font-size: null !default;
$table-list-head-font-weight: null !default;
$table-list-head-height: null !default;
$table-list-head-vertical-alignment: null !default;

$table-list-head-link: () !default;

$table-list-divider-padding-x: 0.75rem !default; // 12px
$table-list-divider-padding-y: 0.75rem !default; // 12px

$table-list-quick-action-menu-align-items: center !default;
$table-list-quick-action-menu-bg: $table-list-bg !default;
$table-list-quick-action-menu-accent-bg: $table-list-accent-bg !default;
$table-list-quick-action-menu-accent-active-bg: $table-list-active-bg !default;
$table-list-quick-action-menu-active-bg: $table-list-active-bg !default;
$table-list-quick-action-menu-hover-bg: $table-list-hover-bg !default;

// Table List Title

$table-list-title: () !default;
$table-list-title: map-merge((
	font-size: $font-size-base, // 16px
	font-weight: $font-weight-semi-bold,
	line-height: $headings-line-height,
	margin-bottom: 0
), $table-list-title);

$table-list-title-link: () !default;
$table-list-title-link: map-merge((
	color: $body-color,
	hover-color: $body-color
), $table-list-title-link);

// Table List Link

$table-list-link: () !default;
$table-list-link: map-merge((
	color: $gray-700,
	hover-color: darken($gray-700, 15%)
), $table-list-link);

// Table List Action Link

$table-list-action-link: () !default;
$table-list-action-link: map-merge((
	align-items: center,
	display: inline-flex,
	height: 2rem,
	justify-content: center,
	vertical-align: middle,
	width: 2rem,
	hover-text-decoration: none,
	lexicon-icon-margin-top: 0
), $table-list-action-link);

// Table Valign

$table-valign-top-body-cell-padding-top: 1rem !default;

$table-valign-bottom-body-cell-padding-bottom: 1rem !default;
$tbar-item-padding-x: 0.25rem !default;
$tbar-item-padding-y: null !default;

// Tbar Inline {xs|sm|md|lg|xl} Down

$tbar-inline-xs-down: () !default;
$tbar-inline-xs-down: map-merge((
	breakpoint-down: nth(map-keys($grid-breakpoints), 1),
	item-padding-left: 0
), $tbar-inline-xs-down);

$tbar-inline-sm-down: () !default;
$tbar-inline-sm-down: map-merge((
	breakpoint-down: nth(map-keys($grid-breakpoints), 2),
	item-padding-left: 0
), $tbar-inline-sm-down);

$tbar-inline-md-down: () !default;
$tbar-inline-md-down: map-merge((
	breakpoint-down: nth(map-keys($grid-breakpoints), 3),
	item-padding-left: 0
), $tbar-inline-md-down);

$tbar-inline-lg-down: () !default;
$tbar-inline-lg-down: map-merge((
	breakpoint-down: nth(map-keys($grid-breakpoints), 4),
	item-padding-left: 0
), $tbar-inline-lg-down);

$tbar-inline-xl-down: () !default;
$tbar-inline-xl-down: map-merge((
	breakpoint-down: nth(map-keys($grid-breakpoints), 5),
	item-padding-left: 0
), $tbar-inline-xl-down);

// Component Tbar

$component-tbar: () !default;
$component-tbar: map-merge((
	border-color: $gray-300,
	border-style: solid,
	border-width: 0 0 0.0625rem 0,
	height: 3.5rem
), $component-tbar);

// Subnav Tbar

$subnav-tbar-component-title: () !default;
$subnav-tbar-component-title: map-merge((
	display: inline-block,
	font-size: 0.875rem,
	font-weight: $font-weight-semi-bold,
	line-height: 1.45,
	margin-bottom: 0.25rem,
	margin-top: 0.25rem,
	max-width: 100%
), $subnav-tbar-component-title);

$subnav-tbar-component-link: () !default;
$subnav-tbar-component-link: map-merge((
	color: $link-color,
	hover-color: $link-hover-color,
	font-weight: $font-weight-semi-bold
), $subnav-tbar-component-link);

$subnav-tbar-component-text: () !default;
$subnav-tbar-component-text: map-merge((
	display: inline-block,
	line-height: 1.45,
	margin-bottom: 0.25rem,
	margin-top: 0.25rem,
	max-width: 100%
), $subnav-tbar-component-text);

$subnav-tbar: () !default;
$subnav-tbar: map-merge((
	font-size: 0.875rem,
	section-text-align: left,
	strong-font-weight: $font-weight-semi-bold,
	item-padding-x: 0.5rem,
	btn-height: 1.5rem,
	btn-line-height: 1,
	btn-margin-y: 0.125rem,
	btn-padding-y: 0,
	btn-monospaced-margin-y: 0.125rem,
	btn-monospaced-padding: 0.25rem,
	component-link: $subnav-tbar-component-link,
	component-title: $subnav-tbar-component-title,
	component-text: $subnav-tbar-component-text,
	link-margin-y: 0.125rem,
	link-padding-x: 0.25rem,
	link-padding-y: 0.09375rem,
	link-monospaced-margin-y: 0.125rem,
	link-monospaced-size: 1.5rem
), $subnav-tbar);

// Subnav Tbar Variants

$subnav-tbar-light: () !default;
$subnav-tbar-light: map-merge((
	bg-color: $light,
	color: $navbar-light-color,
	padding-y: 0.125rem
), $subnav-tbar-light);

// Subnav Tbar Primary

$subnav-tbar-primary-component-link: () !default;
$subnav-tbar-primary-component-link: map-merge((
	color: $body-color,
	hover-color: $body-color,
	disabled-color: $secondary,
	disabled-cursor: $disabled-cursor,
	disabled-opacity: $btn-disabled-opacity,
	disabled-text-decoration: none
), $subnav-tbar-primary-component-link);

$subnav-tbar-primary-component-label-close: () !default;
$subnav-tbar-primary-component-label-close: map-merge((
	focus-color: inherit,
	disabled-color: $secondary,
	disabled-opacity: $btn-disabled-opacity
), $subnav-tbar-primary-component-label-close);

$subnav-tbar-primary-component-label: () !default;
$subnav-tbar-primary-component-label: map-merge((
	close: $subnav-tbar-primary-component-label-close
), $subnav-tbar-primary-component-label);

$subnav-tbar-primary-tbar-label-size: () !default;
$subnav-tbar-primary-tbar-label-size: map-merge((
	font-size: 0.75rem,
	margin-right: 0,
	padding-x: 0.625rem,
	padding-y: 0.3125rem,
	text-transform: none
), $subnav-tbar-primary-tbar-label-size);

$subnav-tbar-primary: () !default;
$subnav-tbar-primary: map-merge((
	bg-color: lighten($primary, 32.94),
	padding-x: 0.25rem,
	padding-y: 0.625rem,
	item-justify-content: flex-start,
	item-padding-x: 0.25rem,
	link-monospaced-border-radius: 0,
	link-monospaced-border-width: 0,
	link-monospaced-margin-y: -0.625rem,
	link-monospaced-size: 3rem,
	component-link: $subnav-tbar-primary-component-link,
	component-label: $subnav-tbar-primary-component-label,
	tbar-label-size: $subnav-tbar-primary-tbar-label-size
), $subnav-tbar-primary);

// Subnav Tbar Primary Disabled

$subnav-tbar-primary-disabled-component-label: () !default;
$subnav-tbar-primary-disabled-component-label: map-merge((
	border-color: #6C757D
), $subnav-tbar-primary-disabled-component-label);

$subnav-tbar-primary-disabled: () !default;
$subnav-tbar-primary-disabled: map-merge((
	bg-color: lighten(desaturate($primary, 27.03), 37.06),
	color: #6C757D,
	component-label: $subnav-tbar-primary-disabled-component-label
), $subnav-tbar-primary-disabled);
$timeline-border-color: #DDD !default;
$timeline-border-width: 2px !default;

$timeline-border-modifier: ceil($timeline-border-width / 2);

$timeline-icon-active-bg: $component-active-bg !default;
$timeline-icon-active-border-color: $timeline-icon-active-bg !default;

$timeline-icon-bg: $body-bg !default;
$timeline-icon-border-color: $timeline-border-color !default;
$timeline-icon-border-radius: 50% !default;
$timeline-icon-border-width: 2px !default;
$timeline-icon-size: 10px !default;

$timeline-increment-bg: $body-bg !default;

$timeline-item-label-color: $body-color !default;

// Sizes

$timeline-inner-spacing: 40px !default;
$timeline-outer-spacing: 25px !default;

$timeline-item-padding-bottom: 5px !default;
$timeline-item-padding-top: 5px !default;

$timeline-inner-spacing-xl: 50px !default;
$timeline-outer-spacing-xl: 25px !default;
$timeline-item-padding-y-xl: 15px !default;
$toggle-switch-transition: background-color 100ms ease-in, border-color 100ms ease-in, color 100ms ease-in, left 100ms ease-in, right 100ms ease-in !default;

// must all be same units--start
$toggle-switch-bar-padding: 0 !default; // space between button and bar, can be negative value
$toggle-switch-bar-padding-mobile: $toggle-switch-bar-padding !default;
$toggle-switch-button-width: 25px !default;
$toggle-switch-button-width-mobile: $toggle-switch-button-width !default;

$toggle-switch-bar-height: ($toggle-switch-bar-padding * 2) + $toggle-switch-button-width !default;
$toggle-switch-bar-height-mobile: $toggle-switch-bar-height !default;
$toggle-switch-bar-width: 50px !default; // width of switch bar
$toggle-switch-bar-width-mobile: $toggle-switch-bar-width !default;
// must all be same units--end

$toggle-switch-bar-bg: $input-group-addon-bg !default;
$toggle-switch-bar-border-color: $input-group-addon-border-color !default;
$toggle-switch-bar-border-radius: 3px !default;
$toggle-switch-bar-border-width: 1px !default;
$toggle-switch-bar-focus-box-shadow: 0 0 3px 2px #66AFE6 !default;
$toggle-switch-bar-font-size: 12px !default;
$toggle-switch-bar-font-size-mobile: $toggle-switch-bar-font-size !default;
$toggle-switch-bar-icon-color: $input-color !default;

$toggle-switch-button-bg: $input-bg !default;
$toggle-switch-button-border-color: $input-group-addon-border-color !default;
$toggle-switch-button-border-radius: 3px 0 0 3px !default;
$toggle-switch-button-border-width: 1px !default;
$toggle-switch-button-font-size: $toggle-switch-bar-font-size !default;
$toggle-switch-button-font-size-mobile: $toggle-switch-button-font-size !default; // null
$toggle-switch-button-icon-color: $input-color !default;

// Toggle Switch On
$toggle-switch-bar-on-bg: $component-active-bg !default;
$toggle-switch-bar-on-border-color: $toggle-switch-bar-on-bg !default;
$toggle-switch-bar-on-icon-color: $component-active-color !default;

$toggle-switch-button-on-bg: #FFF !default;
$toggle-switch-button-on-border-color: $toggle-switch-bar-on-bg !default;
$toggle-switch-button-on-border-radius: 0 3px 3px 0 !default;
$toggle-switch-button-on-icon-color: $toggle-switch-bar-on-bg !default;

// Toggle Switch Disabled

$toggle-switch-disabled-cursor: $disabled-cursor !default;
$toggle-switch-disabled-opacity: 0.4 !default;
$tooltip-box-shadow: null !default;

$tooltip-arrow-offset: 0.25rem !default; // 4px
$b-font-weight: null !default;

$strong-font-weight: null !default;

$reference-mark-font-size: 0.75rem !default;
$reference-mark-vertical-align: super !default;

$mark-color: null !default;
$bg-checkered-fg: $gray-200 !default;
$inline-scroller-max-height: 125px !default;

// Autofit Row

$autofit-col-expand-min-width: 3.125rem !default; // 50px

$autofit-padded-col-padding-x: 0.5rem !default; // 8px
$autofit-padded-col-padding-y: 0.25rem !default; // 4px

// Close

$close: () !default;
$close: map-merge((
	color: $black,
	opacity: 0.5,
	hover-opacity: 0.75,
	focus-opacity: 0.75,
	disabled-opacity: 0.25,
	btn-focus-box-shadow: 0 0 0 $btn-focus-width $input-btn-focus-color,
	btn-focus-outline: 0,
	align-items: center,
	border-radius: $btn-border-radius-sm,
	display: inline-flex,
	font-size: 1rem,
	justify-content: center,
	height: 2rem,
	text-align: center,
	width: 2rem,
	transition: $btn-transition,
	lexicon-icon-margin-top: 0
), $close);

// Heading

$heading-spacer-x: 1rem; // 16px

$heading-text-margin-bottom: auto;
$heading-text-margin-top: auto;

// Inline Item

$inline-item-lexicon-icon-margin-top: -0.21429em !default;
$inline-item-spacer-x: 0.5rem !default; // 8px

$page-header-bg: $gray-200 !default;
// Calculates and sets aspect ratio
// @param $width - width
// @param $height - height

@mixin clay-aspect-ratio($width: 1, $height: 1) {
	padding-bottom: percentage($height / $width);
}
// Creates a checkered background
// @param $fg-color - foreground color to use
// @param $bg-color - background color to use

@mixin clay-bg-checkered($fg-color: $gray-200, $bg-color: null) {
	background-color: $bg-color;
	background-image: linear-gradient(45deg, $fg-color 25%, transparent 25%), linear-gradient(-45deg, $fg-color 25%, transparent 25%), linear-gradient(45deg, transparent 75%, $fg-color 75%), linear-gradient(-45deg, transparent 75%, $fg-color 75%);
	background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
	background-size: 20px 20px;
}

// Replace any *-indicator with another icon via background-image, e.g. 
// .modal-title-indicator

@mixin clay-indicator-bg($map) {
	$indicator: map-get($map, indicator);
	$indicator-bg-position: setter(map-get($map, indicator-bg-position), top 0.125rem left);
	$indicator-bg-size: setter(map-get($map, indicator-bg-size), 100%);
	$indicator-display: setter(map-get($map, indicator-display), inline-block);
	$indicator-height: setter(map-get($map, indicator-height), #{$line-height-base}em);
	$indicator-text-indent: map-get($map, indicator-text-indent);
	$indicator-vertical-align: setter(map-get($map, indicator-vertical-align), middle);
	$indicator-width: setter(map-get($map, indicator-width), 1em);

	background-image: $indicator;
	background-position: $indicator-bg-position;
	background-repeat: no-repeat;
	background-size: $indicator-bg-size;
	display: $indicator-display;
	height: $indicator-height;
	margin-top: 0;
	text-indent: $indicator-text-indent;
	vertical-align: $indicator-vertical-align;
	width: $indicator-width;

	.lexicon-icon {
		display: none;
	}
}
@mixin clay-badge-size($map) {
	$border-width: setter(map-get($map, border-width), $badge-border-width);
	$font-size: map-get($map, font-size);
	$height: map-get($map, height);
	$padding-x: map-get($map, padding-x);
	$padding-y: setter(map-get($map, padding-y), 0);

	$lexicon-icon-height: setter(map-get($map, lexicon-icon-height), map-get($map, lexicon-icon-width));
	$lexicon-icon-margin-top: map-get($map, lexicon-icon-margin-top);
	$lexicon-icon-width: map-get($map, lexicon-icon-width);

	border-width: $border-width;
	font-size: $font-size;

	@if ($height) {
		line-height: $height - ($border-width * 2);
	}

	padding-bottom: $padding-y;
	padding-left: $padding-x;
	padding-right: $padding-x;
	padding-top: $padding-y;

	.inline-item {
		a,
		.btn-unstyled,
		.close {
			margin-top: $lexicon-icon-margin-top;

			.lexicon-icon {
				margin-top: 0;
			}
		}

		.lexicon-icon {
			height: $lexicon-icon-height;
			margin-top: $lexicon-icon-margin-top;
			width: $lexicon-icon-width;
		}
	}
}
@mixin box-shadow($shadow...) {
	@if ($enable-shadows) {
		@if (nth($shadow, 1) != null and length($shadow) <= 1) {
			box-shadow: $shadow;
		}
	}
}
@mixin clay-button-variant($map) {
	$bg: map-get($map, bg);
	$border-color: map-get($map, border-color);
	$color: map-get($map, color);
	$hover-bg: map-get($map, hover-bg);
	$hover-border-color: map-get($map, hover-border-color);
	$hover-color: map-get($map, hover-color);
	$focus-bg: setter(map-get($map, focus-bg), $hover-bg);
	$focus-border-color: setter(map-get($map, focus-border-color), $hover-border-color);
	$focus-box-shadow: map-get($map, focus-box-shadow);
	$focus-color: map-get($map, focus-color);
	$disabled-bg: map-get($map, disabled-bg);
	$disabled-border-color: map-get($map, disabled-border-color);
	$disabled-color: map-get($map, disabled-color);
	$active-bg: map-get($map, active-bg);
	$active-border-color: map-get($map, active-border-color);
	$active-box-shadow: map-get($map, active-box-shadow);
	$active-color: map-get($map, active-color);
	$active-focus-box-shadow: setter(map-get($map, active-focus-box-shadow), $focus-box-shadow);
	$loading-animation: setter(map-get($map, loading-animation), $clay-unset-placeholder);

	background-color: $bg;
	border-color: $border-color;
	color: $color;

	&:hover {
		background-color: $hover-bg;
		border-color: $hover-border-color;
		color: $hover-color;
	}

	&:focus,
	&.focus {
		background-color: $focus-bg;
		border-color: $focus-border-color;
		box-shadow: $focus-box-shadow;
		color: $focus-color;
	}

	&:disabled,
	&.disabled {
		background-color: $disabled-bg;
		border-color: $disabled-border-color;
		color: $disabled-color;
	}

	&:not([disabled]):not(.disabled):active,
	&:not([disabled]):not(.disabled).active,
	.show > &.dropdown-toggle {
		background-color: $active-bg;
		border-color: $active-border-color;
		box-shadow: $active-box-shadow;
		color: $active-color;

		&:focus {
			box-shadow: $active-focus-box-shadow;
		}
	}

	.loading-animation {
		@extend %#{$loading-animation} !optional;
	}
}
@mixin clay-card-type-asset($map) {
	$enabled: setter(map-get($map, enabled), true);

	$aspect-ratio-border-color: setter(map-get($map, aspect-ratio-border-color), $card-border-color);
	$aspect-ratio-border-style: setter(map-get($map, aspect-ratio-border-style), solid);
	$aspect-ratio-border-width: setter(map-get($map, aspect-ratio-border-bottom-width), 0 0 0.0625rem 0); // 0 0 1px 0
	$aspect-ratio-horizontal: setter(map-get($map, aspect-ratio-horizontal), 16);
	$aspect-ratio-vertical: setter(map-get($map, aspect-ratio-vertical), 9);

	$card-body-padding-bottom: map-get($map, card-body-padding-bottom);
	$card-body-padding-left: map-get($map, card-body-padding-left);
	$card-body-padding-right: map-get($map, card-body-padding-right);
	$card-body-padding-top: map-get($map, card-body-padding-top);
	$card-row-align-items: setter(map-get($map, card-row-align-items), flex-start);

	$checkbox-cursor: setter(map-get($map, checkbox-cursor), $link-cursor);

	$asset-icon-color: map-get($map, asset-icon-color);
	$asset-icon-width: setter(map-get($map, asset-icon-width), 22.225%);
	$asset-icon-sticker-border-radius: setter(map-get($map, asset-icon-sticker-border-radius), 50%);
	$asset-icon-sticker-font-size: setter(map-get($map, asset-icon-sticker-font-size), 2vw);

	$dropdown-action-offset-bottom: map-get($map, dropdown-action-offset-bottom);
	$dropdown-action-offset-left: map-get($map, dropdown-action-offset-left);
	$dropdown-action-offset-right: setter(map-get($map, dropdown-action-offset-right), -0.5rem); // -8px
	$dropdown-action-offset-top: setter(map-get($map, dropdown-action-offset-top), -0.1875rem); // -3px

	@if ($enabled) {
		.aspect-ratio {
			border-color: $aspect-ratio-border-color;
			border-style: $aspect-ratio-border-style;
			border-width: $aspect-ratio-border-width;

			@include clay-aspect-ratio($aspect-ratio-horizontal, $aspect-ratio-vertical);

			.custom-control label,
			.form-check-label {
				bottom: 0;
				cursor: $checkbox-cursor;
				left: 0;
				position: absolute;
				right: 0;
				top: 0;
			}
		}

		.card-body {
			padding-bottom: $card-body-padding-bottom;
			padding-left: $card-body-padding-left;
			padding-right: $card-body-padding-right;
			padding-top: $card-body-padding-top;
		}

		.card-row {
			align-items: $card-row-align-items;
		}

		.card-type-asset-icon {
			color: $asset-icon-color;
			width: $asset-icon-width;

			> .lexicon-icon {
				height: 100%;
				width: 100%;
			}

			> .sticker {
				@include border-radius($asset-icon-sticker-border-radius);

				display: block;
				font-size: $asset-icon-sticker-font-size;
				padding-bottom: 100%;
				width: 100%;
			}

			.sticker-overlay {
				@include border-radius($asset-icon-sticker-border-radius);
			}
		}

		.dropdown-action {
			margin-bottom: $dropdown-action-offset-bottom;
			margin-left: $dropdown-action-offset-left;
			margin-right: $dropdown-action-offset-right;
			margin-top: $dropdown-action-offset-top;
		}
	}
}

@mixin clay-card-type-asset-variant($map) {
	$enabled: setter(map-get($map, enabled), true);

	$aspect-ratio-bg: map-get($map, aspect-ratio-bg);
	$aspect-ratio-checkered-fg: map-get($map, aspect-ratio-checkered-fg);
	$aspect-ratio-checkered-bg: map-get($map, aspect-ratio-checkered-bg);

	$asset-icon-color: map-get($map, asset-icon-color);
	$asset-icon-min-width: map-get($map, asset-icon-min-width);
	$asset-icon-width: map-get($map, asset-icon-width);

	@if ($enabled) {
		.aspect-ratio {
			background-color: $aspect-ratio-bg;

			@if ($aspect-ratio-checkered-fg) {
				@include clay-bg-checkered($aspect-ratio-checkered-fg);
			}
		}

		.card-type-asset-icon {
			color: $asset-icon-color;
			min-width: $asset-icon-min-width;
			width: $asset-icon-width;
		}
	}
}

@mixin clay-card-type-directory($map) {
	$enabled: setter(map-get($map, enabled), true);

	$card-body-padding-bottom: map-get($map, card-body-padding-bottom);
	$card-body-padding-left: map-get($map, card-body-padding-left);
	$card-body-padding-right: map-get($map, card-body-padding-right);
	$card-body-padding-top: map-get($map, card-body-padding-top);

	$sticker-font-size: map-get($map, sticker-font-size);
	$sticker-line-height: map-get($map, sticker-line-height);
	$sticker-size: map-get($map, sticker-size);

	$dropdown-action-offset-bottom: map-get($map, dropdown-action-offset-bottom);
	$dropdown-action-offset-left: map-get($map, dropdown-action-offset-left);
	$dropdown-action-offset-right: setter(map-get($map, dropdown-action-offset-right), -0.5rem); // -8px
	$dropdown-action-offset-top: map-get($map, dropdown-action-offset-top);

	@if ($enabled) {
		.card-body {
			padding-bottom: $card-body-padding-bottom;
			padding-left: $card-body-padding-left;
			padding-right: $card-body-padding-right;
			padding-top: $card-body-padding-top;
		}

		.dropdown-action {
			margin-bottom: $dropdown-action-offset-bottom;
			margin-left: $dropdown-action-offset-left;
			margin-right: $dropdown-action-offset-right;
			margin-top: $dropdown-action-offset-top;
		}

		.sticker {
			font-size: $sticker-font-size;
			height: $sticker-size;
			line-height: if($sticker-line-height, $sticker-line-height, $sticker-size);
			width: $sticker-size;
		}
	}
}
@mixin clay-container-no-gutters {
	padding-left: 0;
	padding-right: 0;

	> .row {
		margin-left: 0;
		margin-right: 0;

		> .col,
		> [class*="col-"] {
			padding-right: 0;
			padding-left: 0;
		}
	}
}

@mixin clay-container($map) {
	$enabled: setter(map-get($map, enabled), true);
	$breakpoint-up: map-get($map, breakpoint-up);
	$breakpoint-down: setter(clay-breakpoint-prev($breakpoint-up), null);

	$padding-bottom: map-get($map, padding-bottom);
	$padding-left: map-get($map, padding-left);
	$padding-right: map-get($map, padding-right);
	$padding-top: map-get($map, padding-top);

	$padding-bottom-mobile: map-get($map, padding-bottom-mobile);
	$padding-left-mobile: map-get($map, padding-left-mobile);
	$padding-right-mobile: map-get($map, padding-right-mobile);
	$padding-top-mobile: map-get($map, padding-top-mobile);

	padding-bottom: $padding-bottom;
	padding-left: $padding-left;
	padding-right: $padding-right;
	padding-top: $padding-top;

	@if($breakpoint-down) {
		@include media-breakpoint-down($breakpoint-down) {
			padding-bottom: $padding-bottom-mobile;
			padding-left: $padding-left-mobile;
			padding-right: $padding-right-mobile;
			padding-top: $padding-top-mobile;
		}
	}
}

@mixin clay-custom-grid-columns($map) {
	$custom-grid-props: map-merge((
		enabled: $enable-grid-classes,
		base: (
			breakpoint: 0
		)
	), $map);

	$enabled: map-get($custom-grid-props, enabled);

	@if ($custom-grid-props and $enabled) {
		display: block;
		flex-basis: map-get(map-get($custom-grid-props, base), min-width);
		flex-grow: 1;
		max-width: map-get(map-get($custom-grid-props, base), max-width);
		min-width: map-get(map-get($custom-grid-props, base), min-width);
		padding-left: map-get(map-get($custom-grid-props, base), padding-left);
		padding-right: map-get(map-get($custom-grid-props, base), padding-right);
		position: relative;
		width: 100%;

		@each $breakpoint in map-keys($custom-grid-props) {
			$next: breakpoint-next($breakpoint, $custom-grid-props);

			@if ($next) {
				@media (min-width: map-get(map-get($custom-grid-props, $next), breakpoint)) {
					flex-basis: map-get(map-get($custom-grid-props, $next), flex-basis);
					max-width: map-get(map-get($custom-grid-props, $next), max-width);
					min-width: map-get(map-get($custom-grid-props, $next), min-width);
					padding-left: map-get(map-get($custom-grid-props, $next), padding-left);
					padding-right: map-get(map-get($custom-grid-props, $next), padding-right);
				}
			}
		}
	}
}
@mixin clay-input-group-stacked($map) {
	$breakpoint: setter(map-get($map, breakpoint), md);
	$breakpoint-down: clay-breakpoint-prev($breakpoint);

	$item-margin-bottom: map-get($map, item-margin-bottom);
	$item-margin-left: map-get($map, item-margin-left);
	$item-margin-right: map-get($map, item-margin-right);
	$item-margin-top: map-get($map, item-margin-top);

	$shrink-margin-bottom: map-get($map, shrink-margin-bottom);
	$shrink-margin-left: map-get($map, shrink-margin-left);
	$shrink-margin-right: map-get($map, shrink-margin-right);
	$shrink-margin-top: map-get($map, shrink-margin-top);

	@include media-breakpoint-down($breakpoint-down) {
		.input-group-item {
			margin-bottom: $item-margin-bottom;
			margin-left: $item-margin-left;
			margin-right: $item-margin-right;
			margin-top: $item-margin-top;
			width: 100%;
		}

		.input-group-item-shrink {
			margin-bottom: $shrink-margin-bottom;
			margin-left: $shrink-margin-left;
			margin-right: $shrink-margin-right;
			margin-top: $shrink-margin-top;
			width: auto;
		}
	}
}
@mixin clay-label-size($map) {
	$border-width: setter(map-get($map, border-width), $label-border-width);
	$font-size: map-get($map, font-size);
	$height: map-get($map, height);
	$line-height: map-get($map, line-height);
	$margin-bottom: map-get($map, margin-bottom);
	$margin-left: map-get($map, margin-left);
	$margin-right: map-get($map, margin-right);
	$margin-top: map-get($map, margin-top);
	$padding-x: map-get($map, padding-x);
	$padding-y: map-get($map, padding-y);
	$text-transform: map-get($map, text-transform);

	$lexicon-icon-height: setter(map-get($map, lexicon-icon-height), map-get($map, lexicon-icon-width));
	$lexicon-icon-margin-top: map-get($map, lexicon-icon-margin-top);
	$lexicon-icon-width: map-get($map, lexicon-icon-width);

	border-width: $border-width;
	font-size: $font-size;
	height: auto;
	line-height: $line-height;
	margin-bottom: $margin-bottom;
	margin-left: $margin-left;
	margin-right: $margin-right;
	margin-top: $margin-top;
	min-height: $height;
	padding-bottom: $padding-y;
	padding-left: $padding-x;
	padding-right: $padding-x;
	padding-top: $padding-y;
	text-transform: $text-transform;

	.inline-item {
		a,
		.btn-unstyled,
		.close {
			margin-top: $lexicon-icon-margin-top;
		}

		.lexicon-icon {
			height: $lexicon-icon-height;
			margin-top: $lexicon-icon-margin-top;
			width: $lexicon-icon-width;
		}
	}
}

@mixin clay-label-variant($map) {
	$bg: map-get($map, bg);
	$border-color: map-get($map, border-color);
	$color: map-get($map, color);
	$text-decoration: map-get($map, text-decoration);
	$hover-bg: map-get($map, hover-bg);
	$hover-border-color: map-get($map, hover-border-color);
	$hover-color: map-get($map, hover-color);
	$hover-text-decoration: map-get($map, hover-text-decoration);
	$focus-bg: map-get($map, focus-bg);
	$focus-border-color: map-get($map, focus-border-color);
	$focus-box-shadow: map-get($map, focus-box-shadow);
	$focus-color: map-get($map, focus-color);
	$focus-outline: map-get($map, focus-outline);
	$focus-text-decoration: map-get($map, focus-text-decoration);
	$disabled-bg: map-get($map, disabled-bg);
	$disabled-border-color: map-get($map, disabled-border-color);
	$disabled-color: map-get($map, disabled-color);
	$link-color: map-get($map, link-color);
	$link-text-decoration: map-get($map, link-text-decoration);
	$link-hover-color: map-get($map, link-hover-color);
	$link-hover-text-decoration: map-get($map, link-hover-text-decoration);
	$close: setter(map-get($map, close), ());

	background-color: $bg;
	border-color: $border-color;
	color: $color;
	text-decoration: $text-decoration;

	@at-root {
		a#{&},
		button#{&} {
			&:hover {
				background-color: $hover-bg;
				border-color: $hover-border-color;
				color: $hover-color;
				text-decoration: $hover-text-decoration;
			}

			&:focus {
				background-color: $focus-bg;
				border-color: $focus-border-color;
				box-shadow: $focus-box-shadow;
				color: $focus-border-color;
				outline: $focus-outline;
				text-decoration: $focus-text-decoration;
			}
		}
	}

	&:disabled,
	&.disabled {
		background-color: $disabled-bg;
		border-color: $disabled-border-color;
		color: $disabled-color;
	}

	a {
		color: $link-color;
		text-decoration: $link-text-decoration;

		&:hover,
		&:focus {
			color: $link-hover-color;
			text-decoration: $link-hover-text-decoration;
		}
	}

	.close {
		@include clay-link($close);
	}
}
// A mixin for creating link states.

@mixin clay-link($map) {
	$align-items: map-get($map, align-items);
	$bg: map-get($map, bg);
	$border-color: map-get($map, border-color);
	$border-radius: map-get($map, border-radius);
	$color: map-get($map, color);
	$display: map-get($map, display);
	$font-family: map-get($map, font-family);
	$font-size: map-get($map, font-size);
	$font-weight: map-get($map, font-weight);
	$height: map-get($map, height);
	$justify-content: map-get($map, justify-content);
	$line-height: map-get($map, line-height);
	$margin-bottom: map-get($map, margin-bottom);
	$margin-left: map-get($map, margin-left);
	$margin-right: map-get($map, margin-right);
	$margin-top: map-get($map, margin-top);
	$opacity: map-get($map, opacity);
	$padding-bottom: map-get($map, padding-bottom);
	$padding-left: map-get($map, padding-left);
	$padding-right: map-get($map, padding-right);
	$padding-top: map-get($map, padding-top);
	$text-align: map-get($map, text-align);
	$text-decoration: map-get($map, text-decoration);
	$text-transform: map-get($map, text-transform);
	$transition: map-get($map, transition);
	$vertical-align: map-get($map, vertical-align);
	$width: map-get($map, width);

	$hover-bg: map-get($map, hover-bg);
	$hover-color: map-get($map, hover-color);
	$hover-opacity: map-get($map, hover-opacity);
	$hover-text-decoration: map-get($map, hover-text-decoration);

	$focus-bg: map-get($map, focus-bg);
	$focus-box-shadow: map-get($map, focus-box-shadow);
	$focus-color: map-get($map, focus-color);
	$focus-opacity: map-get($map, focus-opacity);
	$focus-outline: map-get($map, focus-outline);
	$focus-text-decoration: map-get($map, focus-text-decoration);

	$active-bg: map-get($map, active-bg);
	$active-border-color: map-get($map, active-border-color);
	$active-color: map-get($map, active-color);

	$disabled-bg: map-get($map, disabled-bg);
	$disabled-border-color: map-get($map, disabled-border-color);
	$disabled-color: map-get($map, disabled-color);
	$disabled-cursor: map-get($map, disabled-cursor);
	$disabled-opacity: map-get($map, disabled-opacity);
	$disabled-pointer-events: map-get($map, disabled-pointer-events);
	$disabled-text-decoration: map-get($map, disabled-text-decoration);

	$btn-focus-box-shadow: map-get($map, btn-focus-box-shadow);
	$btn-focus-outline: map-get($map, btn-focus-outline);

	$lexicon-icon-margin-bottom: map-get($map, lexicon-icon-margin-bottom);
	$lexicon-icon-margin-left: map-get($map, lexicon-icon-margin-left);
	$lexicon-icon-margin-right: map-get($map, lexicon-icon-margin-right);
	$lexicon-icon-margin-top: map-get($map, lexicon-icon-margin-top);

	align-items: $align-items;
	background-color: $bg;
	border-color: $border-color;

	@include border-radius($border-radius);

	color: $color;
	display: $display;
	font-family: $font-family;
	font-size: $font-size;
	font-weight: $font-weight;
	height: $height;
	justify-content: $justify-content;
	line-height: $line-height;
	margin-bottom: $margin-bottom;
	margin-left: $margin-left;
	margin-right: $margin-right;
	margin-top: $margin-top;
	opacity: $opacity;
	padding-bottom: $padding-bottom;
	padding-left: $padding-left;
	padding-right: $padding-right;
	padding-top: $padding-top;
	text-align: $text-align;
	text-decoration: $text-decoration;
	text-transform: $text-transform;
	transition: $transition;
	vertical-align: $vertical-align;
	width: $width;

	&:hover {
		background-color: $hover-bg;
		color: $hover-color;
		opacity: $hover-opacity;
		text-decoration: $hover-text-decoration;
	}

	@at-root {
		button#{&} {
			&:focus {
				box-shadow: $btn-focus-box-shadow;
				outline: $btn-focus-outline;
			}
		}
	}

	&:focus {
		background-color: $focus-bg;
		box-shadow: $focus-box-shadow;
		color: $focus-color;
		opacity: $focus-opacity;
		outline: $focus-outline;
		text-decoration: $focus-text-decoration;
	}

	.show > &,
	&:active,
	&.active {
		background-color: $active-bg;
		border-color: $active-border-color;
		color: $active-color;
	}

	&:disabled,
	&.disabled {
		background-color: $disabled-bg;
		border-color: $disabled-border-color;
		color: $disabled-color;
		cursor: $disabled-cursor;
		opacity: $disabled-opacity;
		pointer-events: $disabled-pointer-events;
		text-decoration: $disabled-text-decoration;
	}

	.lexicon-icon {
		margin-bottom: $lexicon-icon-margin-bottom;
		margin-right: $lexicon-icon-margin-right;
		margin-left: $lexicon-icon-margin-left;
		margin-top: $lexicon-icon-margin-top;
	}
}

// A mixin for styling text typography.

@mixin clay-text-typography($map) {
	$color: map-get($map, color);
	$display: map-get($map, display);
	$font-family: map-get($map, font-family);
	$font-size: map-get($map, font-size);
	$font-weight: map-get($map, font-weight);
	$letter-spacing: map-get($map, letter-spacing);
	$line-height: map-get($map, line-height);
	$margin-bottom: map-get($map, margin-bottom);
	$margin-left: map-get($map, margin-left);
	$margin-right: map-get($map, margin-right);
	$margin-top: map-get($map, margin-top);
	$max-width: map-get($map, max-width);
	$padding-bottom: map-get($map, padding-bottom);
	$padding-left: map-get($map, padding-left);
	$padding-right: map-get($map, padding-right);
	$padding-top: map-get($map, padding-top);
	$text-transform: map-get($map, text-transform);
	$word-wrap: map-get($map, word-wrap);

	$clay-link: setter(map-get($map, clay-link), ());

	color: $color;
	display: $display;
	font-family: $font-family;
	font-size: $font-size;
	font-weight: $font-weight;
	letter-spacing: $letter-spacing;
	line-height: $line-height;
	margin-bottom: $margin-bottom;
	margin-left: $margin-left;
	margin-right: $margin-right;
	margin-top: $margin-top;
	max-width: $max-width;
	padding-bottom: $padding-bottom;
	padding-left: $padding-left;
	padding-right: $padding-right;
	padding-top: $padding-top;
	text-transform: $text-transform;
	word-wrap: $word-wrap;

	a {
		@include clay-link($clay-link);
	}
}
@mixin clay-list-group-notification-item-variant($map) {
	$bg: setter(map-get($map, bg), $list-group-bg);
	$border-bottom-color: setter(map-get($map, border-bottom-color), $list-group-notification-item-border-bottom-color);
	$border-left-color: setter(map-get($map, border-left-color), $list-group-notification-item-border-left-color);
	$border-right-color: setter(map-get($map, border-right-color), $list-group-notification-item-border-right-color);
	$border-top-color: setter(map-get($map, border-top-color), $list-group-notification-item-border-top-color);

	$border-bottom-width: setter(map-get($map, border-bottom-width), $list-group-notification-item-border-bottom-width);
	$border-left-width: setter(map-get($map, border-left-width), $list-group-notification-item-border-left-width);
	$border-right-width: setter(map-get($map, border-right-width), $list-group-notification-item-border-right-width);
	$border-top-width: setter(map-get($map, border-top-width), $list-group-notification-item-border-top-width);

	$border-bottom-left-radius: map-get($map, border-bottom-left-radius);
	$border-bottom-right-radius: map-get($map, border-bottom-right-radius);
	$border-top-left-radius: map-get($map, border-top-left-radius);
	$border-top-right-radius: map-get($map, border-top-right-radius);

	$color: map-get($map, color);

	$active-bg: setter(map-get($map, active-bg), $list-group-active-bg);
	$active-border-bottom-color: setter(map-get($map, active-border-bottom-color), $list-group-notification-item-active-border-bottom-color);
	$active-border-left-color: setter(map-get($map, active-border-left-color), $list-group-notification-item-active-border-left-color);
	$active-border-right-color: setter(map-get($map, active-border-right-color), $list-group-notification-item-active-border-right-color);
	$active-border-top-color: setter(map-get($map, active-border-top-color), $list-group-notification-item-active-border-top-color);

	// Box shadows are used for borders, determined by border variables above

	$box-shadow-bottom: inset 0 -#{$border-bottom-width} #{$border-bottom-color};
	$box-shadow-left: inset #{$border-left-width} 0 #{$border-left-color};
	$box-shadow-right: inset -#{$border-right-width} 0 #{$border-right-color};
	$box-shadow-top: inset 0 #{$border-top-width} #{$border-top-color};

	$active-box-shadow-bottom: inset 0 -#{$border-bottom-width} #{$active-border-bottom-color};
	$active-box-shadow-left: inset #{$border-left-width} 0 #{$active-border-left-color};
	$active-box-shadow-right: inset -#{$border-right-width} 0 #{$active-border-right-color};
	$active-box-shadow-top: inset 0 #{$border-top-width} #{$active-border-top-color};

	background-color: $bg;

	@if ($enable-rounded) {
		border-bottom-left-radius: $border-bottom-left-radius;
		border-bottom-right-radius: $border-bottom-right-radius;
		border-top-left-radius: $border-top-left-radius;
		border-top-right-radius: $border-top-right-radius;
	}

	box-shadow: $box-shadow-left, $box-shadow-right, $box-shadow-top, $box-shadow-bottom;
	color: $color;

	&.active {
		background-color: $active-bg;
		box-shadow: $active-box-shadow-left, $active-box-shadow-right, $active-box-shadow-top, $active-box-shadow-bottom;
	}
}
@mixin clay-loading-animation-variant($map) {
	$enabled: setter(map-get($map, enabled), true);
	$mixin-name: 'clay-loading-animation-variant';

	$border-radius: setter(map-get($map, border-radius), 50%);
	$color: setter(map-get($map, color), $secondary);
	$transform: setter(map-get($map, transform), scale(0.33334));

	$animation: setter(map-get($map, animation), 1.2s ease-out infinite);
	$animation-name: required(
		map-get($map, animation-name),
		'The property `animation-name` in `#{$mixin-name}` is required! #{$map}'
	);

	$ball-0-scale: setter(map-get($map, ball-0-scale), 0em);
	$ball-1-scale: setter(map-get($map, ball-1-scale), -0.10em);
	$ball-2-scale: setter(map-get($map, ball-2-scale), -0.15em);
	$ball-3-scale: setter(map-get($map, ball-3-scale), -0.20em);
	$ball-4-scale: setter(map-get($map, ball-4-scale), -0.25em);
	$ball-5-scale: setter(map-get($map, ball-5-scale), -0.35em);

	$ball-0-alpha: setter(map-get($map, ball-0-alpha), 1);
	$ball-1-alpha: setter(map-get($map, ball-1-alpha), 0.80);
	$ball-2-alpha: setter(map-get($map, ball-2-alpha), 0.60);
	$ball-3-alpha: setter(map-get($map, ball-3-alpha), 0.40);
	$ball-4-alpha: setter(map-get($map, ball-4-alpha), 0.20);
	$ball-5-alpha: setter(map-get($map, ball-5-alpha), 0.10);

	$ball-0-color: setter(map-get($map, ball-0-color), rgba($color, $ball-0-alpha));
	$ball-1-color: setter(map-get($map, ball-1-color), rgba($color, $ball-1-alpha));
	$ball-2-color: setter(map-get($map, ball-2-color), rgba($color, $ball-2-alpha));
	$ball-3-color: setter(map-get($map, ball-3-color), rgba($color, $ball-3-alpha));
	$ball-4-color: setter(map-get($map, ball-4-color), rgba($color, $ball-4-alpha));
	$ball-5-color: setter(map-get($map, ball-5-color), rgba($color, $ball-5-alpha));

	@if ($enabled) {
		&:after {
			animation: $animation;
			animation-name: $animation-name;
			border-radius: $border-radius;
			content: '';

			// Box shadow needs this specific order for proper animation

			box-shadow: 0 -1em 0 $ball-0-scale $ball-0-color,
				1em -0.5em 0 $ball-5-scale $ball-5-color,
				1em 0.5em 0 $ball-4-scale $ball-4-color,
				0 1em 0 $ball-3-scale $ball-3-color,
				-1em 0.5em 0 $ball-2-scale $ball-2-color,
				-1em -0.5em 0 $ball-1-scale $ball-1-color;
			display: block;
			height: 1em;
			left: 0;
			position: absolute;
			top: 0;
			transform: $transform;
			width: 1em;
		}

		@keyframes #{$animation-name} {

			// Box shadows need this specific order for proper animation

			0%,
			100% {
				box-shadow: 0 -1em 0 $ball-0-scale $ball-0-color,
				1em -0.5em 0 $ball-5-scale $ball-5-color,
				1em 0.5em 0 $ball-4-scale $ball-4-color,
				0 1em 0 $ball-3-scale $ball-3-color,
				-1em 0.5em 0 $ball-2-scale $ball-2-color,
				-1em -0.5em 0 $ball-1-scale $ball-1-color;
			}
			16.6% {
				box-shadow: 0 -1em 0 $ball-1-scale $ball-1-color,
				1em -0.5em 0 $ball-0-scale $ball-0-color,
				1em 0.5em 0 $ball-5-scale $ball-5-color,
				0 1em 0 $ball-4-scale $ball-4-color,
				-1em 0.5em 0 $ball-3-scale $ball-3-color,
				-1em -0.5em 0 $ball-2-scale $ball-2-color;
			}
			33.3% {
				box-shadow: 0 -1em 0 $ball-2-scale $ball-2-color,
				1em -0.5em 0 $ball-1-scale $ball-1-color,
				1em 0.5em 0 $ball-0-scale $ball-0-color,
				0 1em 0 $ball-5-scale $ball-5-color,
				-1em 0.5em 0 $ball-4-scale $ball-4-color,
				-1em -0.5em 0 $ball-3-scale $ball-3-color;
			}
			50% {
				box-shadow: 0 -1em 0 $ball-3-scale $ball-3-color,
				1em -0.5em 0 $ball-2-scale $ball-2-color,
				1em 0.5em 0 $ball-1-scale $ball-1-color,
				0 1em 0 $ball-0-scale $ball-0-color,
				-1em 0.5em 0 $ball-5-scale $ball-5-color,
				-1em -0.5em 0 $ball-4-scale $ball-4-color;
			}
			66.6% {
				box-shadow: 0 -1em 0 $ball-4-scale $ball-4-color,
				1em -0.5em 0 $ball-3-scale $ball-3-color,
				1em 0.5em 0 $ball-2-scale $ball-2-color,
				0 1em 0 $ball-1-scale $ball-1-color,
				-1em 0.5em 0 $ball-0-scale $ball-0-color,
				-1em -0.5em 0 $ball-5-scale $ball-5-color;
			}
			83% {
				box-shadow: 0 -1em 0 $ball-5-scale $ball-5-color,
				1em -0.5em 0 $ball-4-scale $ball-4-color,
				1em 0.5em 0 $ball-3-scale $ball-3-color,
				0 1em 0 $ball-2-scale $ball-2-color,
				-1em 0.5em 0 $ball-1-scale $ball-1-color,
				-1em -0.5em 0 $ball-0-scale $ball-0-color;
			}
		}
	}
}
@mixin clay-menubar-vertical-expand($map) {
	$enabled: setter(map-get($map, enabled), true);
	$breakpoint-up: setter(map-get($map, breakpoint-up), md);
	$breakpoint-down: clay-breakpoint-prev($breakpoint-up);

	// .menubar-vertical-expand-{md}

	$border-color: map-get($map, border-color);
	$border-style: map-get($map, border-style);
	$border-width: map-get($map, border-width);
	$max-width: setter(map-get($map, max-width), 15.625rem); // 250px

	$border-color-mobile: setter(map-get($map, border-color-mobile), transparent);
	$border-style-mobile: setter(map-get($map, border-style-mobile), solid);
	$border-width-mobile: setter(map-get($map, border-width-mobile), 0.0625rem); // 1px
	$margin-bottom-mobile: map-get($map, margin-bottom-mobile);
	$margin-left-mobile: map-get($map, margin-left-mobile);
	$margin-right-mobile: map-get($map, margin-right-mobile);
	$margin-top-mobile: map-get($map, margin-top-mobile);
	$max-width-mobile: setter(map-get($map, max-width-mobile), none);
	$min-height-mobile: setter(map-get($map, min-height-mobile), 3rem); // 48px
	$padding-x-mobile: setter(map-get($map, padding-x-mobile), 0.5rem);
	$padding-y-mobile: map-get($map, padding-y-mobile);

	// .menubar-collapse

	$collapse-border-color-mobile: setter(map-get($map, collapse-border-color-mobile), transparent);
	$collapse-border-style-mobile: setter(map-get($map, collapse-border-style-mobile), solid);
	$collapse-border-width-mobile: setter(map-get($map, collapse-border-width-mobile), 0.0625rem); // 1px
	$collapse-inner-spacer-y-mobile: setter(map-get($map, collapse-inner-spacer-y-mobile), 0.5rem); // 8px
	$collapse-margin-top-mobile: map-get($map, collapse-margin-top-mobile);
	$collapse-max-width-mobile: map-get($map, collapse-max-width-mobile);
	$collapse-left-mobile: setter(map-get($map, collapse-left-mobile), -0.0625rem); // -1px
	$collapse-right-mobile: setter(map-get($map, collapse-right-mobile), -0.0625rem); // -1px
	$collapse-z-index-mobile: map-get($map, collapse-z-index-mobile);

	// .menubar-toggler

	$toggler-border-color-mobile: setter(map-get($map, toggler-border-color-mobile), transparent);
	$toggler-border-style-mobile: setter(map-get($map, toggler-border-style-mobile), solid);
	$toggler-border-width-mobile: setter(map-get($map, toggler-border-width-mobile), 0.0625rem); // 1px
	$toggler-height-mobile: setter(map-get($map, toggler-height-mobile), 2rem); // 32px
	$toggler-padding-x-mobile: setter(map-get($map, toggler-padding-x-mobile), 0.5rem); // 8px
	$toggler-padding-y-mobile: map-get($map, toggler-padding-y-mobile);

	@if ($enabled) {
		border-color: $border-color;
		border-style: $border-style;
		border-width: $border-width;
		max-width: $max-width;

		@include media-breakpoint-down($breakpoint-down) {
			align-items: center;
			border-color: $border-color-mobile;
			border-style: $border-style-mobile;
			border-width: $border-width-mobile;
			display: flex;
			flex-wrap: wrap;
			justify-content: space-between;
			margin-bottom: $margin-bottom-mobile;
			margin-left: $margin-left-mobile;
			margin-right: $margin-right-mobile;
			margin-top: $margin-top-mobile;
			max-width: $max-width-mobile;
			min-height: $min-height-mobile;
			padding-bottom: $padding-y-mobile;
			padding-left: $padding-x-mobile;
			padding-right: $padding-x-mobile;
			padding-top: $padding-y-mobile;
		}

		.menubar-collapse {
			display: block;

			@include media-breakpoint-down($breakpoint-down) {
				border-color: $collapse-border-color-mobile;
				border-style: $collapse-border-style-mobile;
				border-width: $collapse-border-width-mobile;
				display: none;
				left: $collapse-left-mobile;
				margin-top: $collapse-margin-top-mobile;
				max-width: $collapse-max-width-mobile;
				position: absolute;
				right: $collapse-right-mobile;
				top: 100%;
				z-index: $collapse-z-index-mobile;

				> .nav {
					margin-bottom: $collapse-inner-spacer-y-mobile;
					margin-top: $collapse-inner-spacer-y-mobile;
				}
			}

			&.collapsing,
			&.show {
				display: block;
			}
		}

		.menubar-toggler {
			@include media-breakpoint-down($breakpoint-down) {
				align-items: center;
				border-color: $toggler-border-color-mobile;
				border-style: $toggler-border-style-mobile;
				border-width: $toggler-border-width-mobile;
				display: flex;
				height: $toggler-height-mobile;
				padding-bottom: $toggler-padding-y-mobile;
				padding-left: $toggler-padding-x-mobile;
				padding-right: $toggler-padding-x-mobile;
				padding-top: $toggler-padding-y-mobile;

				.lexicon-icon {
					margin-top: 0;
				}
			}
		}
	}
	@else {
		.menubar-collapse {
			display: block;
		}
	}
}

@mixin clay-menubar-vertical-variant($map) {
	$enable: setter(map-get($map, enable), true);
	$breakpoint-up: setter(map-get($map, breakpoint-up), md);
	$breakpoint-down: clay-breakpoint-prev($breakpoint-up);

	// .menubar-vertical-expand-{md}.menubar-{variant}

	$bg: map-get($map, bg);
	$border-color: map-get($map, border-color);
	$border-style: map-get($map, border-style);

	$bg-mobile: map-get($map, bg-mobile);
	$border-color-mobile: map-get($map, border-color-mobile);
	$border-style-mobile: map-get($map, border-style-mobile);

	// .nav-link

	$link-bg: map-get($map, link-bg);
	$link-border-radius: map-get($map, link-border-radius);
	$link-color: setter(map-get($map, link-color), $navbar-light-color);
	$link-hover-bg: map-get($map, link-hover-bg);
	$link-hover-color: setter(map-get($map, link-hover-color), $navbar-light-hover-color);
	$link-active-bg: map-get($map, link-active-bg);
	$link-active-color: setter(map-get($map, link-active-color), $navbar-light-active-color);
	$link-active-font-weight: map-get($map, link-active-font-weight);
	$link-disabled-bg: map-get($map, link-disabled-bg);
	$link-disabled-color: setter(map-get($map, link-disabled-color), $navbar-light-disabled-color);

	$link-border-radius-mobile: map-get($map, link-border-radius-mobile);
	$link-color-mobile: setter(map-get($map, link-color-mobile), $dropdown-link-color);

	$link-hover-bg-mobile: setter(map-get($map, link-hover-bg-mobile), $dropdown-link-hover-bg);
	$link-hover-color-mobile: setter(map-get($map, link-hover-color-mobile), $dropdown-link-hover-color);

	$link-active-bg-mobile: setter(map-get($map, link-active-bg-mobile), $dropdown-link-active-bg);
	$link-active-font-weight-mobile: setter(map-get($map, link-active-font-weight-mobile), $dropdown-link-active-font-weight);
	$link-active-color-mobile: setter(map-get($map, link-active-color-mobile), $dropdown-link-active-color);

	$link-disabled-bg-mobile: setter(map-get($map, link-disabled-bg-mobile), transparent);
	$link-disabled-color-mobile: setter(map-get($map, link-disabled-color-mobile), $dropdown-link-disabled-color);

	// .menubar-collapse

	$collapse-bg-mobile: setter(map-get($map, collapse-bg-mobile), $dropdown-bg);
	$collapse-border-color-mobile: setter(map-get($map, collapse-border-color-mobile), $dropdown-border-color);
	$collapse-border-radius-mobile: setter(map-get($map, collapse-border-radius-mobile), $border-radius);
	$collapse-border-style-mobile: map-get($map, collapse-border-style-mobile);
	$collapse-box-shadow-mobile: setter(map-get($map, collapse-box-shadow-mobile), $dropdown-box-shadow);

	// .menubar-toggler

	$toggler-border-color-mobile: map-get($map, toggler-border-color-mobile);
	$toggler-border-style-mobile: map-get($map, toggler-border-style-mobile);
	$toggler-color-mobile: setter(map-get($map, toggler-color-mobile), $link-active-color);
	$toggler-font-size-mobile: map-get($map, toggler-font-size-mobile);
	$toggler-font-weight-mobile: map-get($map, toggler-font-weight-mobile);

	background-color: $bg;
	border-color: $border-color;
	border-style: $border-style;

	@include media-breakpoint-down($breakpoint-down) {
		background-color: $bg-mobile;
		border-color: $border-color-mobile;
		border-style: $border-style-mobile;
	}

	.menubar-collapse {
		@include media-breakpoint-down($breakpoint-down) {
			background-color: $collapse-bg-mobile;
			border-color: $collapse-border-color-mobile;

			@include border-radius($collapse-border-radius-mobile);

			border-style: $collapse-border-style-mobile;

			@include box-shadow($collapse-box-shadow-mobile);
		}
	}

	.menubar-toggler {
		@include media-breakpoint-down($breakpoint-down) {
			border-color: $toggler-border-color-mobile;
			border-style: $toggler-border-style-mobile;
			color: $toggler-color-mobile;
			font-size: $toggler-font-size-mobile;
			font-weight: $toggler-font-weight-mobile;
		}
	}

	.nav-link {
		background-color: $link-bg;
		border-radius: $link-border-radius;
		color: $link-color;

		&:hover {
			background-color: $link-hover-bg;
			color: $link-hover-color;
		}

		@include media-breakpoint-down($breakpoint-down) {
			border-radius: $link-border-radius-mobile;
			color: $link-color-mobile;

			&:hover {
				background-color: $link-hover-bg-mobile;
				color: $link-hover-color-mobile;
			}
		}

		&.active {
			background-color: $link-active-bg;
			color: $link-active-color;
			font-weight: $link-active-font-weight;

			@include media-breakpoint-down($breakpoint-down) {
				background-color: $link-active-bg-mobile;
				color: $link-active-color-mobile;
				font-weight: $link-active-font-weight-mobile;
			}
		}

		&.disabled {
			background-color: $link-disabled-bg;
			color: $link-disabled-color;

			@include media-breakpoint-down($breakpoint-down) {
				background-color: $link-disabled-bg-mobile;
				color: $link-disabled-color-mobile;
			}
		}
	}
}
// Creates a Modal color variant
// @param $map - Sass map that contain Modal Variant properties to modify

@mixin clay-modal-variant($map) {
	$header-bg: map-get($map, header-bg);
	$header-border-color: map-get($map, header-border-color);
	$header-color: map-get($map, header-color);

	// header-close-color is deprecated in v2.0.0-rc.12 use header-close instead

	$header-close-color: setter(map-get($map, header-close-color), $header-color);

	$header-close: setter(map-get($map, header-close), ());

	$body-bg: map-get($map, body-bg);
	$body-color: map-get($map, body-color);
	$footer-bg: map-get($map, footer-bg);
	$footer-border-color: map-get($map, footer-border-color);

	// Modal specific btn-monospaced is deprecated in v2.0.0-rc.12

	.btn-monospaced {
		color: $header-close-color;
	}

	.close {
		@include clay-link($header-close);
	}

	button.close {
		&:focus {
			box-shadow: map-get($header-close, btn-focus-box-shadow);
			outline: map-get($header-close, btn-focus-outline);
		}
	}

	.modal-header {
		background-color: $header-bg;
		border-color: $header-border-color;
		color: $header-color;
	}

	.modal-body {
		background-color: $body-bg;
		color: $body-color;
	}

	.modal-footer {
		background-color: $footer-bg;
		border-color: $footer-border-color;
		color: $footer-border-color;
	}
}
@mixin clay-monospace($size) {
	height: $size;
	line-height: $size;
	width: $size;
}
@mixin clay-nav-variant($map) {
	$bg: map-get($map, bg);
	$link-bg: map-get($map, link-bg);
	$link-border-radius: map-get($map, link-border-radius);
	$link-color: map-get($map, link-color);
	$link-font-weight: map-get($map, link-font-weight);
	$link-hover-bg: map-get($map, link-hover-bg);
	$link-hover-color: map-get($map, link-hover-color);
	$link-focus-bg: map-get($map, link-focus-bg);
	$link-focus-color: map-get($map, link-focus-color);
	$link-disabled-bg: setter(map-get($map, link-disabled-bg), transparent);
	$link-disabled-color: setter(map-get($map, link-disabled-color), $nav-link-disabled-color);
	$link-disabled-opacity: map-get($map, link-disabled-opacity);
	$link-active-bg: map-get($map, link-active-bg);
	$link-active-color: map-get($map, link-active-color);
	$link-active-font-weight: map-get($map, link-active-font-weight);

	background-color: $bg;

	.nav-btn.btn-unstyled,
	.nav-link {
		background-color: $link-bg;

		@include border-radius($link-border-radius);

		color: $link-color;
		font-weight: $link-font-weight;

		&:hover {
			background-color: $link-hover-bg;
			color: $link-hover-color;
		}

		&:focus,
		&.focus {
			background-color: $link-focus-bg;
			color: $link-focus-color;
		}

		&:disabled,
		&.disabled {
			background-color: $link-disabled-bg;
			color: $link-disabled-color;
			opacity: $link-disabled-opacity;
		}

		&.active {
			background-color: $link-active-bg;
			color: $link-active-color;
			font-weight: $link-active-font-weight;
		}
	}
}
// Indents each nested navigation by $indent (15px default)
// @param $indent - amount to indent in pixels
// @param $nest-level - number of levels to iterate
// @param $nav-class - class name of nav element
// @param $i - start value

@mixin clay-nav-nested($indent: 15px, $nest-level: 15, $nav-class: ".nav", $i: 1) {
	@for $i from (1) through $nest-level {
		#{$nav-class} > li {
			> a {
				padding-left: $indent * ($i + 1);
			}

			> .nav-equal-height-heading {
				padding-left: $indent * $i;
			}
		}

		$nav-class: "#{$nav-class} .nav";
	}
}
// Sizes Navbar Desktop and Mobile based on height, font-size, and padding
// @param $map - Sass map that contain Navbar properties to modify

@mixin clay-navbar-size($map) {
	$enabled: setter(map-get($map, enabled), true);
	$scaling-navbar: setter(map-get($map, scaling-navbar), false);
	$container-padding-x: map-get($map, container-padding-x);
	$container-padding-x-mobile: setter(map-get($map, container-padding-x-mobile), $container-padding-x);

	$height: setter(map-get($map, height), 3.5rem);
	$border-bottom-width: setter(map-get($map, border-bottom-width), 0);
	$border-left-width: setter(map-get($map, border-left-width), 0);
	$border-right-width: setter(map-get($map, border-right-width), 0);
	$border-top-width: setter(map-get($map, border-top-width), 0);
	$box-shadow: map-get($map, box-shadow);
	$font-size: setter(map-get($map, font-size), $font-size-base);
	$padding-x: setter(map-get($map, padding-x), $navbar-padding-x);
	$padding-y: setter(map-get($map, padding-y), $navbar-padding-y);
	$link-height: setter(map-get($map, link-height), $height - $border-bottom-width - $border-top-width - ($padding-y * 2));
	$link-margin-x: map-get($map, link-margin-x);
	$link-margin-y: setter(map-get($map, link-margin-y), (($height - $border-bottom-width - $border-top-width) - $link-height) / 2);
	$link-padding-x: setter(map-get($map, link-padding-x), $navbar-nav-link-padding-x);
	$link-padding-y: setter(map-get($map, link-padding-y), ($link-height - ($font-size * $line-height-base)) / 2);
	$btn-font-size: setter(map-get($map, btn-font-size), $font-size);
	$btn-monospaced-font-size: map-get($map, btn-monospaced-font-size);
	$btn-monospaced-size: map-get($map, btn-monospaced-size);
	$btn-margin-x: setter(map-get($map, btn-margin-x), $link-padding-x);
	$btn-margin-y: setter(map-get($map, btn-margin-y), ($height - $border-bottom-width - $border-top-width - ($padding-y * 2) - if($btn-monospaced-size, $btn-monospaced-size, $nav-item-monospaced-size)) / 2);
	$form-control-height: map-get($map, form-control-height);
	$brand-font-size: setter(map-get($map, brand-font-size), $navbar-brand-font-size);
	$brand-max-width: map-get($map, brand-max-width);
	$brand-margin-right: setter(map-get($map, brand-margin-right), $link-padding-x);
	$brand-padding-x: setter(map-get($map, brand-padding-x), $link-padding-x);
	$brand-padding-y: setter(map-get($map, brand-padding-y), (($height - $border-bottom-width - $border-top-width - ($padding-y * 2) - ($brand-font-size * $line-height-base)) / 2));
	$title-font-size: map-get($map, title-font-size);
	$title-font-weight: map-get($map, title-font-weight);
	$title-margin-bottom: map-get($map, title-margin-bottom);
	$title-text-transform: map-get($map, title-text-transform);
	$active-border-bottom-width: setter(map-get($map, active-border-bottom-width), 0.125rem);
	$active-border-offset-x: map-get($map, active-border-offset-x);
	$nav-item-dropdown-margin-top: map-get($map, nav-item-dropdown-margin-top);

	$height-mobile: setter(map-get($map, height-mobile), $height);
	$font-size-mobile: setter(map-get($map, font-size-mobile), $font-size);
	$link-height-mobile: setter(map-get($map, link-height-mobile), $height-mobile - $border-bottom-width - $border-top-width - ($padding-y * 2));
	$link-margin-x-mobile: setter(map-get($map, link-margin-x-mobile), $link-margin-x);
	$link-margin-y-mobile: setter(map-get($map, link-margin-y-mobile), (($height-mobile - $border-bottom-width - $border-top-width) - $link-height-mobile) / 2);
	$link-padding-x-mobile: setter(map-get($map, link-padding-x-mobile), $link-padding-x);
	$link-padding-y-mobile: setter(map-get($map, link-padding-y-mobile), ($link-height-mobile - ($font-size-mobile * $line-height-base)) / 2);
	$btn-font-size-mobile: setter(map-get($map, btn-font-size-mobile), $font-size-mobile);
	$btn-monospaced-font-size-mobile: setter(map-get($map, btn-monospaced-font-size-mobile), $btn-monospaced-font-size);
	$btn-monospaced-size-mobile: setter(map-get($map, btn-monospaced-size-mobile), $btn-monospaced-size);
	$btn-margin-x-mobile: setter(map-get($map, btn-margin-x-mobile), $link-padding-x-mobile);
	$btn-margin-y-mobile: setter(map-get($map, btn-margin-y-mobile), ($height-mobile - $border-bottom-width - $border-top-width - ($padding-y * 2) - if($btn-monospaced-size-mobile, $btn-monospaced-size-mobile, $nav-item-monospaced-size)) / 2);
	$form-control-height-mobile: map-get($map, form-control-height-mobile);
	$brand-font-size-mobile: setter(map-get($map, brand-font-size-mobile), $font-size-lg-mobile);
	$brand-margin-right-mobile: setter(map-get($map, brand-margin-right-mobile), 0);
	$brand-padding-x-mobile: setter(map-get($map, brand-padding-x-mobile), $link-padding-x-mobile);
	$brand-padding-y-mobile: setter(map-get($map, brand-padding-y-mobile), (($height-mobile - $border-bottom-width - $border-top-width - ($padding-y * 2) - ($brand-font-size-mobile * $line-height-base)) / 2));
	$collapse-dropdown-item-padding-x-mobile: map-get($map, collapse-dropdown-item-padding-x-mobile);
	$collapse-dropdown-item-padding-y-mobile: map-get($map, collapse-dropdown-item-padding-y-mobile);

	$toggler-font-size: setter(map-get($map, toggler-font-size), $navbar-toggler-font-size);
	$toggler-height: setter(map-get($map, toggler-height), $height-mobile * 0.66667);
	$toggler-margin-x: setter(map-get($map, toggler-margin-x), $link-padding-x-mobile);
	$toggler-margin-y: map-get($map, toggler-margin-y);
	$toggler-padding-x: setter(map-get($map, toggler-padding-x), $navbar-toggler-padding-x);
	$toggler-padding-y: setter(map-get($map, toggler-padding-y), $navbar-toggler-padding-y);

	$toggler-link-font-size: setter(map-get($map, toggler-link-font-size), $font-size-mobile);
	$toggler-link-height: setter(map-get($map, toggler-link-height), auto);
	$toggler-link-line-height: setter(map-get($map, toggler-link-line-height), $line-height-base);
	$toggler-link-margin-x: setter(map-get($map, toggler-link-margin-x), 0);
	$toggler-link-margin-y: map-get($map, toggler-link-margin-y);
	$toggler-link-padding-x: setter(map-get($map, toggler-link-padding-x), $link-padding-x-mobile);
	$toggler-link-padding-y: ($height-mobile - $border-bottom-width - $border-top-width - ($padding-y * 2) - ($toggler-link-font-size * $toggler-link-line-height)) / 2;

	@if ($enabled) {
		@include border-radius($navbar-border-radius);

		border-width: $border-top-width $border-right-width $border-bottom-width $border-left-width;

		@include box-shadow($box-shadow);

		font-size: $font-size;
		padding: $padding-y $padding-x;

		.container,
		.container-fluid {
			padding-left: $container-padding-x-mobile;
			padding-right: $container-padding-x-mobile;
		}

		.navbar-toggler {
			font-size: $toggler-font-size;
			height: $toggler-height;
			margin-bottom: $toggler-margin-y;
			margin-left: $toggler-margin-x;
			margin-right: $toggler-margin-x;
			margin-top: $toggler-margin-y;
			padding-bottom: $toggler-padding-y;
			padding-left: $toggler-padding-x;
			padding-right: $toggler-padding-x;
			padding-top: $toggler-padding-y;
		}

		.navbar-toggler-link {
			height: $toggler-link-height;
			font-size: $toggler-link-font-size;
			line-height: $toggler-link-line-height;
			margin-bottom: $toggler-link-margin-y;
			margin-left: $toggler-link-margin-x;
			margin-right: $toggler-link-margin-x;
			margin-top: $toggler-link-margin-y;
			padding-bottom: $toggler-link-padding-y;
			padding-left: $toggler-link-padding-x;
			padding-right: $toggler-link-padding-x;
			padding-top: $toggler-link-padding-y;
		}

		.navbar-brand {
			font-size: $brand-font-size-mobile;
			margin-right: $brand-margin-right-mobile;
			max-width: $brand-max-width;
			padding-bottom: $brand-padding-y-mobile;
			padding-left: $brand-padding-x-mobile;
			padding-right: $brand-padding-x-mobile;
			padding-top: $brand-padding-y-mobile;
		}

		.navbar-title {
			font-size: $title-font-size;
			font-weight: $title-font-weight;
			margin-bottom: $title-margin-bottom;
			text-transform: $title-text-transform;
		}

		.navbar-nav {
			.nav-btn {
				font-size: $btn-font-size-mobile;
				height: $btn-monospaced-size-mobile;
				margin-bottom: $btn-margin-y-mobile;
				margin-left: $btn-margin-x-mobile;
				margin-right: $btn-margin-x-mobile;
				margin-top: $btn-margin-y-mobile;
				min-width: $btn-monospaced-size-mobile;
			}

			.nav-btn-monospaced {
				font-size: $btn-monospaced-font-size-mobile;
			}

			.nav-item {
				> .custom-control,
				> .form-check {
					margin-left: $btn-margin-x-mobile;
					margin-right: $btn-margin-x-mobile;
				}
			}

			.nav-link,
			.navbar-text {
				margin-bottom: $link-margin-y-mobile;
				margin-left: $link-margin-x-mobile;
				margin-right: $link-margin-x-mobile;
				margin-top: $link-margin-y-mobile;
				padding-bottom: $link-padding-y-mobile;
				padding-left: $link-padding-x-mobile;
				padding-right: $link-padding-x-mobile;
				padding-top: $link-padding-y-mobile;
			}

			.nav-link-monospaced {
				font-size: $btn-monospaced-font-size-mobile;
				margin-bottom: $btn-margin-y-mobile;
				margin-left: $btn-margin-x-mobile;
				margin-right: $btn-margin-x-mobile;
				margin-top: $btn-margin-y-mobile;
				padding: 0;
			}
		}

		.dropdown-menu {
			margin-top: $nav-item-dropdown-margin-top;
		}

		// Navbar Expand

		&.navbar-expand {
			@each $breakpoint in map-keys($grid-breakpoints) {
				$next: breakpoint-next($breakpoint, $grid-breakpoints);
				$infix: breakpoint-infix($next, $grid-breakpoints);

				&#{$infix} { // .navbar-expand, sm, md, lg, xl
					@if not ($infix == '') { // .navbar-expand-sm, md, lg, xl
						@include media-breakpoint-down($breakpoint) {
							&.navbar-collapse-absolute {
								.navbar-collapse {
									border-color: transparent;
									border-style: solid;
									border-width: 0 $border-right-width $border-bottom-width $border-left-width;

									@include box-shadow($box-shadow);

									left: -$border-left-width;
									margin-top: $border-bottom-width;
									padding-bottom: $padding-y;
									padding-left: $padding-x;
									padding-right: $padding-x;
									padding-top: $padding-y;
									right: -$border-right-width;
								}
							}

							.navbar-collapse {
								.navbar-nav {
									.dropdown-divider {
										margin-left: -$padding-x;
										margin-right: -$padding-x;
									}

									.dropdown-item {
										padding-bottom: $collapse-dropdown-item-padding-y-mobile;
										padding-left: $collapse-dropdown-item-padding-x-mobile;
										padding-right: $collapse-dropdown-item-padding-x-mobile;
										padding-top: $collapse-dropdown-item-padding-y-mobile;
									}
								}
							}

							.navbar-form {
								height: $height-mobile - $border-bottom-width - $border-top-width;
								padding-bottom: $link-padding-y-mobile;
								padding-left: $link-padding-x-mobile;
								padding-right: $link-padding-x-mobile;
								padding-top: $link-padding-y-mobile;

								.form-control {
									height: $form-control-height-mobile;
									padding-bottom: 0;
									padding-top: 0;
								}
							}
						}
					}

					@include media-breakpoint-up($next) {
						.container,
						.container-fluid {
							@if ($scaling-navbar) {
								padding-left: $container-padding-x;
								padding-right: $container-padding-x;
							}
						}

						.navbar-brand {
							@if ($scaling-navbar) {
								font-size: $brand-font-size;
								margin-right: $brand-margin-right;
								padding-bottom: $brand-padding-y;
								padding-left: $brand-padding-x;
								padding-right: $brand-padding-x;
								padding-top: $brand-padding-y;
							}
						}

						.navbar-form {
							@if ($scaling-navbar) {
								height: $height - $border-bottom-width - $border-top-width;
								padding-left: $link-padding-x;
								padding-right: $link-padding-x;

								> .container,
								> .container-fluid {
									padding-left: 0;
									padding-right: 0;
								}

								.form-control {
									height: $form-control-height;
								}
							}
						}

						.nav-btn {
							@if ($scaling-navbar) {
								font-size: $btn-font-size;
								height: $btn-monospaced-size;
								margin-bottom: $btn-margin-y;
								margin-left: $btn-margin-x;
								margin-right: $btn-margin-x;
								margin-top: $btn-margin-y;
								min-width: $btn-monospaced-size;
							}
						}

						.nav-btn-monospaced {
							@if ($scaling-navbar) {
								font-size: $btn-monospaced-font-size;
							}
						}

						.nav-item {
							> .custom-control,
							> .form-check {
								@if ($scaling-navbar) {
									margin-left: $btn-margin-x;
									margin-right: $btn-margin-x;
								}
							}
						}

						.nav-link,
						.navbar-text {
							@if ($scaling-navbar) {
								margin-bottom: $link-margin-y;
								margin-left: $link-margin-x;
								margin-right: $link-margin-x;
								margin-top: $link-margin-y;
								padding-bottom: $link-padding-y;
								padding-left: $link-padding-x;
								padding-right: $link-padding-x;
								padding-top: $link-padding-y;
							}
						}

						.nav-link-monospaced {
							@if ($scaling-navbar) {
								font-size: $btn-monospaced-font-size;
								margin-bottom: $btn-margin-y;
								margin-left: $btn-margin-x;
								margin-right: $btn-margin-x;
								margin-top: $btn-margin-y;
								padding: 0;
							}
						}
					}
				}
			}
		}

		// Navbar Overlay Styles for `.navbar-overlay-xs-down`,
		// `.navbar-overlay-sm-down`, `.navbar-overlay-md-down`,
		// `.navbar-overlay-lg-down`, `.navbar-overlay-up`

		@each $breakpoint in map-keys($grid-breakpoints) {
			$index: index(map-keys($grid-breakpoints), $breakpoint);
			$length: length(map-keys($grid-breakpoints));
			$infix: '.navbar-overlay-#{$breakpoint}-down';

			@if ($index == $length) {
				$infix: '.navbar-overlay-up';
			}

			#{$infix} {
				@include media-breakpoint-down($breakpoint) {
					@include border-radius($navbar-border-radius);

					padding-bottom: $padding-y;
					padding-left: $padding-x;
					padding-right: $padding-x;
					padding-top: $padding-y;
				}
			}
		}

		// Navbar Underline

		&.navbar-underline {
			.navbar-toggler-link {
				&:after {
					bottom: -$border-bottom-width - $padding-y - $link-margin-y-mobile;
					height: $active-border-bottom-width;
					left: $active-border-offset-x;
					right: $active-border-offset-x;
				}
			}
		}

		&.navbar-underline.navbar-expand {
			@each $breakpoint in map-keys($grid-breakpoints) {
				$next: breakpoint-next($breakpoint, $grid-breakpoints);
				$infix: breakpoint-infix($next, $grid-breakpoints);

				&#{$infix} { // .navbar-expand, sm, md, lg, xl
					@include media-breakpoint-up($next) {
						.navbar-nav .nav-link {
							&.active:after {
								bottom: -$border-bottom-width - $padding-y - $link-margin-y;
								height: $active-border-bottom-width;
								left: $active-border-offset-x;
								right: $active-border-offset-x;
							}
						}
					}
				}
			}
		}
	}
}

// Creates a Navbar color variant
// @param $map - Sass map that contain Navbar Variant properties to modify

@mixin clay-navbar-variant($map) {
	$enabled: setter(map-get($map, enabled), true);
	$bg: map-get($map, bg);
	$border-color: setter(map-get($map, border-color), transparent);
	$border-style: setter(map-get($map, border-style), solid);
	$color: map-get($map, color);
	$link-border-radius: map-get($map, link-border-radius);
	$link-bg: map-get($map, link-bg);
	$link-color: map-get($map, link-color);
	$link-font-weight: map-get($map, link-font-weight);
	$link-hover-bg: map-get($map, link-hover-bg);
	$link-hover-color: map-get($map, link-hover-color);
	$link-active-bg: map-get($map, link-active-bg);
	$link-active-color: map-get($map, link-active-color);
	$link-disabled-bg: map-get($map, link-disabled-bg);
	$link-disabled-color: map-get($map, link-disabled-color);
	$link-disabled-opacity: map-get($map, link-disabled-opacity);
	$btn-font-weight: setter(map-get($map, btn-font-weight), $link-font-weight);
	$brand-color: map-get($map, brand-color);
	$brand-hover-color: map-get($map, brand-hover-color);
	$brand-bg: map-get($map, brand-bg);
	$brand-hover-bg: map-get($map, brand-hover-bg);
	$toggler-color: setter(map-get($map, toggler-color), $link-color);
	$toggler-font-weight: setter(map-get($map, toggler-font-weight), $link-font-weight);
	$underline-active-bg: map-get($map, underline-active-bg);

	@if ($enabled) {
		background-color: $bg;
		border-color: $border-color;
		border-style: $border-style;
		color: $color;

		.nav-link,
		.navbar-nav .btn-unstyled {
			background-color: $link-bg;

			@include border-radius($link-border-radius);

			color: $link-color;
			font-weight: $link-font-weight;

			&:hover {
				background-color: $link-hover-bg;
				color: $link-hover-color;
			}

			&.active,
			&[aria-expanded="true"] {
				background-color: $link-active-bg;
				color: $link-active-color;
			}

			&.disabled,
			&:disabled {
				background-color: $link-disabled-bg;
				color: $link-disabled-color;
				opacity: $link-disabled-opacity;
			}
		}

		.nav-btn {
			font-weight: $btn-font-weight;
		}

		.navbar-brand {
			background-color: $brand-bg;
			color: $brand-color;

			&:hover {
				background-color: $brand-bg;
				color: $brand-hover-color;
			}
		}

		.navbar-toggler {
			color: $toggler-color;
			font-weight: $toggler-font-weight;
		}

		.navbar-toggler-link {
			&[aria-expanded="true"] {
				color: $link-active-color;
			}
		}

		.navbar-overlay {
			background-color: $bg;
		}

		&.navbar-expand {
			@each $breakpoint in map-keys($grid-breakpoints) {
				$next: breakpoint-next($breakpoint, $grid-breakpoints);
				$infix: breakpoint-infix($next, $grid-breakpoints);

				&#{$infix} { // .navbar-expand, sm, md, lg, xl
					@if not ($infix == '') { // .navbar-expand-sm, md, lg, xl
						@include media-breakpoint-down($breakpoint) {
							&.navbar-collapse-absolute .navbar-collapse {
								background-color: $bg;
								border-color: $border-color;
							}

							.navbar-collapse .navbar-nav {
								.dropdown-header,
								.dropdown-item {
									color: $link-color;
									font-weight: $link-font-weight;
								}

								.dropdown-divider {
									border-color: $link-color;
								}

								.dropdown-item {
									&:hover {
										color: $link-hover-color;
									}

									&.active {
										color: $link-active-color;
									}

									&.disabled {
										color: $link-disabled-color;
									}
								}
							}
						}
					}

					@include media-breakpoint-up($next) {
						&.navbar-underline .navbar-nav .nav-link.active:after {
							background-color: $underline-active-bg;
						}
					}
				}
			}
		}

		@content;
	}
}
// Creates a Panel color variant
// @param $map - Sass map that contain Panel Variant properties to modify

@mixin clay-panel-variant($map) {
	$border-color: map-get($map, border-color);
	$box-shadow: map-get($map, box-shadow);
	$color: map-get($map, color);
	$header-bg: map-get($map, header-bg);
	$header-border-color: map-get($map, header-border-color);
	$header-color: map-get($map, header-color);
	$footer-bg: map-get($map, footer-bg);
	$footer-border-color: map-get($map, footer-border-color);
	$footer-color: map-get($map, footer-color);

	border-color: $border-color;
	box-shadow: $box-shadow;
	color: $color;

	.panel-header {
		background-color: $header-bg;
		border-color: $header-border-color;
		color: $header-color;

		.panel-group & {
			+ .panel-collapse > .panel-body {
				border-color: $border-color;
			}
		}
	}

	.panel-footer {
		background-color: $footer-bg;
		border-color: $footer-border-color;
		color: $footer-color;
	}

	@content;
}
// Absolutely positions an item relative to its container (9 places)
// @param $point - 'top-left', 'top-center', 'top-right', 'right-middle',
// 'bottom-right', 'bottom-center', 'bottom-left', 'left-middle',
// 'center-middle'
// @param $position - 'absolute', 'fixed'
// @param $rule-flag - specify a CSS flag for your rule e.g. !important

@mixin clay-position($point: top-left, $position: absolute, $rule-flag: '') {
	@if not ($rule-flag == '') {
		$rule-flag: ' #{$rule-flag}';
	}

	position: #{$position}#{$rule-flag};

	@if ($point == top-center) {
		bottom: auto#{$rule-flag};
		left: 50%#{$rule-flag};
		right: auto#{$rule-flag};
		top: 0#{$rule-flag};
		transform: translateX(-50%)#{$rule-flag};
	}
	@else if ($point == top-right) {
		bottom: auto#{$rule-flag};
		left: auto#{$rule-flag};
		right: 0#{$rule-flag};
		top: 0#{$rule-flag};
	}
	@else if ($point == right-middle) {
		bottom: auto#{$rule-flag};
		left: auto#{$rule-flag};
		right: 0#{$rule-flag};
		top: 50%#{$rule-flag};
		transform: translateY(-50%)#{$rule-flag};
	}
	@else if ($point == bottom-right) {
		bottom: 0#{$rule-flag};
		left: auto#{$rule-flag};
		right: 0#{$rule-flag};
		top: auto#{$rule-flag};
	}
	@else if ($point == bottom-center) {
		bottom: 0#{$rule-flag};
		left: 50%#{$rule-flag};
		right: auto#{$rule-flag};
		transform: translateX(-50%)#{$rule-flag};
	}
	@else if ($point == bottom-left) {
		bottom: 0#{$rule-flag};
		left: 0#{$rule-flag};
		right: auto#{$rule-flag};
		top: auto#{$rule-flag};
	}
	@else if ($point == left-middle) {
		bottom: auto#{$rule-flag};
		left: 0#{$rule-flag};
		right: auto#{$rule-flag};
		top: 50%#{$rule-flag};
		transform: translateY(-50%)#{$rule-flag};
	}
	@else if ($point == center-middle) {
		bottom: auto#{$rule-flag};
		left: 50%#{$rule-flag};
		right: auto#{$rule-flag};
		top: 50%#{$rule-flag};
		transform: translate(-50%, -50%)#{$rule-flag};
	}
	@else {
		bottom: auto#{$rule-flag};
		left: 0#{$rule-flag};
		right: auto#{$rule-flag};
		top: 0#{$rule-flag};
	}
}
@mixin clay-scale-component($scale: $enable-scaling-components) {
	@if ($scale) {
		@include media-breakpoint-down($scaling-breakpoint-down) {
			@content
		}
	}
}
@mixin sheet-footer-btn-block($map) {
	$enabled: setter(map-get($map, enabled), true);

	$breakpoint-down: map-get($map, breakpoint-down);

	$btn-margin-bottom-mobile: map-get($map, btn-margin-bottom-mobile);

	@if ($enabled) {
		@include media-breakpoint-down($breakpoint-down) {
			display: block;

			.btn {
				display: block;
				margin-bottom: $btn-margin-bottom-mobile;
				width: 100%;
			}

			.btn-group {
				display: block;
			}

			.btn-group-item {
				display: block;
				margin-right: 0;
			}
		}
	}
}
@mixin clay-sidebar-variant($map) {
	$bg: map-get($map, bg);
	$border-color: map-get($map, border-color);
	$border-bottom-width: setter(map-get($map, border-bottom-width), 0);
	$border-left-width: setter(map-get($map, border-left-width), 0);
	$border-right-width: setter(map-get($map, border-right-width), 0);
	$border-top-width: setter(map-get($map, border-top-width), 0);
	$box-shadow: map-get($map, box-shadow);
	$color: map-get($map, color);
	$panel-bg: map-get($map, panel-bg);

	$component-header-title: setter(map-get($map, component-header-title), ());
	$component-header-subtitle: setter(map-get($map, component-header-subtitle), ());
	$component-link: setter(map-get($map, component-link), ());

	$dt: setter(map-get($map, dt), ());
	$dd: setter(map-get($map, dd), ());

	$sidebar-list-group-item-bg: map-get($map, sidebar-list-group-item-bg);
	$sidebar-list-group-item-border-color: map-get($map, sidebar-list-group-item-border-color);
	$sidebar-list-group-title: setter(map-get($map, sidebar-list-group-title), ());
	$sidebar-list-group-subtitle: setter(map-get($map, sidebar-list-group-subtitle), ());
	$sidebar-list-group-text: setter(map-get($map, sidebar-list-group-text), ());
	$sidebar-list-group-subtext: setter(map-get($map, sidebar-list-group-subtext), ());

	background-color: $bg;
	border-color: $border-color;
	border-style: solid;
	border-width: $border-top-width $border-right-width $border-bottom-width $border-left-width;

	@include box-shadow($box-shadow);

	color: $color;

	.component-link {
		@include clay-text-typography($component-link);
	}

	.sidebar-header {
		.component-title {
			@include clay-text-typography($component-header-title);
		}

		.component-subtitle {
			@include clay-text-typography($component-header-subtitle);
		}
	}

	.sidebar-list-group {
		.list-group-item {
			background-color: $sidebar-list-group-item-bg;
			border-color: $sidebar-list-group-item-border-color;
		}

		.list-group-title {
			@include clay-text-typography($sidebar-list-group-title);
		}

		.list-group-subtitle {
			@include clay-text-typography($sidebar-list-group-subtitle);
		}

		.list-group-text {
			@include clay-text-typography($sidebar-list-group-text);
		}

		.list-group-subtext {
			@include clay-text-typography($sidebar-list-group-subtext);
		}
	}

	.sidebar-panel {
		background-color: $panel-bg;
	}

	.sidebar-dt {
		@include clay-text-typography($dt);
	}

	.sidebar-dd {
		@include clay-text-typography($dd);
	}
}
@mixin clay-sticker-size($map) {
	$font-size: map-get($map, font-size);
	$inline-item-font-size: map-get($map, inline-item-font-size);
	$outside-offset: setter(map-get($map, outside-offset), -(map-get($map, size) / 2));
	$size: map-get($map, size);

	font-size: $font-size;

	@include clay-monospace($size);

	> .inline-item {
		font-size: $inline-item-font-size;
	}

	&.sticker-outside {
		left: $outside-offset;
		top: $outside-offset;

		&.sticker-bottom-left {
			bottom: $outside-offset;
			top: auto;
		}

		&.sticker-bottom-right {
			bottom: $outside-offset;
			left: auto;
			right: $outside-offset;
			top: auto;
		}

		&.sticker-top-right {
			left: auto;
			right: $outside-offset;
		}
	}
}
@mixin clay-tbar-variant($map) {
	$border-color: map-get($map, border-color);
	$border-style: map-get($map, border-style);
	$border-width: map-get($map, border-width);
	$bg-color: map-get($map, bg-color);
	$color: map-get($map, color);
	$font-size: map-get($map, font-size);
	$height: map-get($map, height);
	$padding-x: map-get($map, padding-x);
	$padding-y: map-get($map, padding-y);

	$strong-font-weight: map-get($map, strong-font-weight);

	$item-justify-content: map-get($map, item-justify-content);
	$item-padding-x: map-get($map, item-padding-x);
	$item-padding-y: map-get($map, item-padding-y);

	$btn-height: map-get($map, btn-height);
	$btn-font-size: setter(map-get($map, btn-font-size), $font-size);
	$btn-font-weight: map-get($map, btn-font-weight);
	$btn-line-height: map-get($map, btn-line-height);
	$btn-margin-x: map-get($map, btn-margin-x);
	$btn-margin-y: map-get($map, btn-margin-y);
	$btn-padding-x: map-get($map, btn-padding-x);
	$btn-padding-y: map-get($map, btn-padding-y);

	$btn-monospaced-border-radius: map-get($map, btn-monospaced-border-radius);
	$btn-monospaced-border-width: map-get($map, btn-monospaced-border-width);
	$btn-monospaced-font-size: map-get($map, btn-monospaced-font-size);
	$btn-monospaced-margin-x: map-get($map, btn-monospaced-margin-x);
	$btn-monospaced-margin-y: map-get($map, btn-monospaced-margin-y);
	$btn-monospaced-padding: map-get($map, btn-monospaced-padding);
	$btn-monospaced-size: setter(map-get($map, btn-monospaced-size), $btn-height);

	$link-margin-x: map-get($map, link-margin-x);
	$link-margin-y: map-get($map, link-margin-y);
	$link-padding-x: map-get($map, link-padding-x);
	$link-padding-y: map-get($map, link-padding-y);

	$link-monospaced-border-radius: map-get($map, link-monospaced-border-radius);
	$link-monospaced-border-width: map-get($map, link-monospaced-border-width);
	$link-monospaced-font-size: map-get($map, link-monospaced-font-size);
	$link-monospaced-margin-x: map-get($map, link-monospaced-margin-x);
	$link-monospaced-margin-y: map-get($map, link-monospaced-margin-y);
	$link-monospaced-padding: map-get($map, link-monospaced-padding);
	$link-monospaced-size: map-get($map, link-monospaced-size);

	$section-text-align: map-get($map, section-text-align);

	$component-action: setter(map-get($map, component-action), ());

	$component-link: setter(map-get($map, component-link), ());

	$component-title: setter(map-get($map, component-title), ());

	$component-text: setter(map-get($map, component-text), ());

	$component-label: setter(map-get($map, component-label), ());

	$tbar-label-size: setter(map-get($map, tbar-label-size), ());

	background-color: $bg-color;
	border-color: $border-color;
	border-style: $border-style;
	border-width: $border-width;
	color: $color;
	font-size: $font-size;
	height: $height;
	padding-bottom: $padding-y;
	padding-left: $padding-x;
	padding-right: $padding-x;
	padding-top: $padding-y;

	strong {
		font-weight: $strong-font-weight;
	}

	.component-action {
		@include clay-link($component-action);
	}

	.component-link {
		@include clay-link($component-link);
	}

	.tbar-item {
		justify-content: $item-justify-content;
		padding-bottom: $item-padding-y;
		padding-left: $item-padding-x;
		padding-right: $item-padding-x;
		padding-top: $item-padding-y;
	}

	.tbar-btn {
		font-size: $btn-font-size;
		font-weight: $btn-font-weight;
		height: $btn-height;
		line-height: $btn-line-height;
		margin-bottom: $btn-margin-y;
		margin-left: $btn-margin-x;
		margin-right: $btn-margin-x;
		margin-top: $btn-margin-y;
		padding-bottom: $btn-padding-y;
		padding-left: $btn-padding-x;
		padding-right: $btn-padding-x;
		padding-top: $btn-padding-y;
	}

	.tbar-link {
		margin-bottom: $link-margin-y;
		margin-left: $link-margin-x;
		margin-right: $link-margin-x;
		margin-top: $link-margin-y;
		padding-bottom: $link-padding-y;
		padding-left: $link-padding-x;
		padding-right: $link-padding-x;
		padding-top: $link-padding-y;
	}

	.tbar-btn-monospaced {
		border-radius: $btn-monospaced-border-radius;
		border-width: $btn-monospaced-border-width;
		font-size: $btn-monospaced-font-size;
		height: $btn-monospaced-size;
		margin-bottom: $btn-monospaced-margin-y;
		margin-left: $btn-monospaced-margin-x;
		margin-right: $btn-monospaced-margin-x;
		margin-top: $btn-monospaced-margin-y;
		padding: $btn-monospaced-padding;
		width: $btn-monospaced-size;

		.inline-item {
			font-size: $btn-monospaced-font-size;
		}
	}

	.tbar-link-monospaced {
		border-radius: $link-monospaced-border-radius;
		border-width: $link-monospaced-border-width;
		font-size: $link-monospaced-font-size;
		height: $link-monospaced-size;
		margin-bottom: $link-monospaced-margin-y;
		margin-left: $link-monospaced-margin-x;
		margin-right: $link-monospaced-margin-x;
		margin-top: $link-monospaced-margin-y;
		padding: $link-monospaced-padding;
		width: $link-monospaced-size;

		.inline-item {
			font-size: $link-monospaced-font-size;
		}
	}

	.tbar-section {
		text-align: $section-text-align;
	}

	.component-title {
		@include clay-text-typography($component-title);
	}

	.component-text {
		@include clay-text-typography($component-text);
	}

	.component-label {
		@include clay-label-variant($component-label);
	}

	.tbar-label {
		@include clay-label-size($tbar-label-size);
	}
}

@mixin clay-tbar-inline-down($map) {
	$breakpoint-down: map-get($map, breakpoint-down);
	$item-padding-left: map-get($map, item-padding-left);
	$item-padding-right: map-get($map, item-padding-right);

	@if ($breakpoint-down) {
		@include media-breakpoint-down($breakpoint-down) {
			display: block;

			.container,
			.container-fluid {
				display: block;
			}

			.component-title,
			.tbar-nav,
			.tbar-section {
				display: inline;
			}

			.tbar-item {
				display: inline;
				padding-left: $item-padding-left;
				padding-right: $item-padding-right;
			}
		}
	}
}
@mixin clay-timeline-item-reverse() {
	padding-left: 0;
	padding-right: $timeline-inner-spacing;

	&:before {
		left: auto;
		right: -$timeline-border-width;
	}

	.panel {
		.timeline-increment {
			margin-left: auto;
			margin-right: -$card-border-width;
		}
	}

	.timeline-increment {
		left: auto;
		right: -($timeline-inner-spacing + $timeline-border-modifier);
		-ms-transform: translate(50%, -50%);
		transform: translate(50%, -50%);
	}
}

@mixin clay-timeline-spacing($outer-spacing, $inner-spacing, $item-padding-y: 10px) {
	&.timeline {
		padding-left: $outer-spacing;
	}

	&.timeline-center {
		@include media-breakpoint-up(md) {
			padding-left: 0;

			.timeline-item {
				.timeline-item-label {
					margin-left: -($inner-spacing * 2);
				}
			}

			.timeline-item.timeline-item-reverse {
				padding-right: $inner-spacing;

				.timeline-increment {
					right: -($inner-spacing + $timeline-border-modifier);
				}

				.timeline-item-label {
					margin-left: auto;
					margin-right: -($inner-spacing * 2);
				}
			}
		}
	}

	&.timeline-even .timeline-item:nth-of-type(even),
	&.timeline-odd .timeline-item:nth-of-type(odd) {
		@include media-breakpoint-up(md) {
			padding-right: $inner-spacing;

			.timeline-increment {
				right: -($inner-spacing + $timeline-border-modifier);
			}

			.timeline-item-label {
				margin-left: auto;
				margin-right: -($inner-spacing * 2);
			}
		}
	}

	&.timeline-right {
		padding-right: $outer-spacing;

		.timeline-item {
			padding-right: $inner-spacing;

			.timeline-increment {
				right: -($inner-spacing + $timeline-border-modifier);
			}
		}
	}

	&.timeline-right-xs-only {
		@include media-breakpoint-down(xs) {
			padding-left: 0;
			padding-right: $outer-spacing;

			.timeline-item {
				padding-left: 0;
				padding-right: $inner-spacing;

				.timeline-increment {
					left: auto;
					right: -($inner-spacing + $timeline-border-modifier);
				}
			}
		}
	}

	.timeline-item {
		padding-bottom: $item-padding-y;
		padding-left: $inner-spacing;
		padding-top: $item-padding-y;

		.timeline-increment {
			left: -($inner-spacing - $timeline-border-modifier);
		}
	}
}
// Calculates text-indent of data-label-on and data-label-off
// @param $toggle-switch-width - Width of switch bar
// @param $toggle-switch-padding - Space between button and bar
// @param $label-spacer-x - Space between toggle-switch-bar and data-label

@function clay-data-label-text-position($toggle-switch-width, $toggle-switch-padding, $label-spacer-x: 8px) {
	@if ($toggle-switch-padding < 0) {
		$toggle-switch-width: $toggle-switch-width + abs($toggle-switch-padding);
	}

	@return $toggle-switch-width + $label-spacer-x;
}
// Highlight inline text
// @param $bg-color - Color of the highlight
// @param $color - Colors the text

@mixin clay-highlight-text($bg-color: theme-color-level(warning, -10), $color: $body-color) {
	background-color: $bg-color;
	box-decoration-break: clone;
	box-shadow: -0.25em 0 0 $bg-color;
	color: $color;
	display: inline;
	line-height: normal;
	padding: 2px 0.25em 3px 0;
	position: relative;
	white-space: pre-wrap;

	&:before {
		background-color: $bg-color;
		bottom: 0;
		content: '';
		display: block;
		position: absolute;
		right: 100%;
		top: 0;
		width: 0.25em;
		z-index: -1;
	}
}
@mixin clay-autofit-float {
	flex-wrap: wrap;

	> .autofit-col {
		max-width: 100%;
	}

	// `.autofit-col end` is deprecated in v2.0.0 use `.autofit-float-end`
	// pattern instead

	> .autofit-col-end {
		margin-left: auto;

		+ .autofit-col-end {
			margin-left: 0;
		}
	}
}
@if ($font-import-url) { @import url($font-import-url); }
@if ($enable-grid-classes) {
	.container-fluid-max {
		@each $breakpoint, $max-width in $container-max-widths {
			$infix: '-#{$breakpoint}';

			&#{$infix} {
				max-width: $max-width;
			}
		}
	}

	.container-no-gutters {
		@include clay-container-no-gutters;

		@each $breakpoint in map-keys($grid-breakpoints) {
			$next: breakpoint-next($breakpoint, $grid-breakpoints);
			$infix: breakpoint-infix($next, $grid-breakpoints);

			@if not ($infix == '') { // .container-no-gutters-sm-down, md-down, lg-down, xl-down
				&#{$infix}-down {
					@include media-breakpoint-down($breakpoint) {
						@include clay-container-no-gutters;
					}
				}
			}
		}
	}

	%clay-custom-grid-wrapper {
		display: flex;
		flex-wrap: wrap;
		list-style: none;
		margin-bottom: 0;
		padding-left: 0;

		.container &,
		.container-fluid & {
			margin-left: -($grid-gutter-width / 2);
			margin-right: -($grid-gutter-width / 2);
		}
	}

	.container-form-lg {
		@include clay-container($container-form-lg);

		.menubar-vertical-expand-lg {
			$container-form-lg-breakpoint-down: clay-breakpoint-prev(map-get($container-form-lg, breakpoint-up));

			@include media-breakpoint-down($container-form-lg-breakpoint-down) {
				margin-top: -(map-get($container-form-lg, padding-top-mobile));
			}
		}
	}

	.container-view {
		@include clay-container($container-view);
	}
}
.alert {
	border-style: $alert-border-style;

	@if ($alert-border-width != 1px) {
		border-width: $alert-border-width;
	}

	display: block;
	font-size: $alert-font-size;
	word-wrap: break-word;

	.close {
		font-size: $alert-close-font-size;
		height: $alert-close-height;
		line-height: $alert-close-line-height;
		opacity: $alert-close-opacity;
		margin-left: $alert-close-margin-left;
		padding-bottom: $alert-close-padding-bottom;
		padding-left: $alert-close-padding-left;
		padding-right: $alert-close-padding-right;
		padding-top: $alert-close-padding-top;
		position: absolute;
		right: $alert-close-position-right;
		top: $alert-close-position-top;
		width: $alert-close-width;
	}

	.lead {
		font-size: $alert-lead-font-size;
		font-weight: $alert-lead-font-weight;
		margin-right: $alert-lead-spacer-x;
	}

	.component-title {
		@include clay-text-typography($alert-title);
	}

	.component-subtitle {
		@include clay-text-typography($alert-subtitle);
	}
}

.alert-link,
.alert-link.btn-unstyled {
	font-weight: $alert-link-font-weight;
	text-decoration: $alert-link-decoration;

	&:hover,
	&:focus {
		text-decoration: $alert-link-hover-decoration;
	}
}

.alert-indicator {
	font-size: $alert-indicator-font-size;

	+ .lead {
		margin-left: $alert-lead-spacer-x;
	}
}

// Alert Dismissible

.alert-dismissible {
	padding-bottom: $alert-dismissible-padding-bottom;
	padding-left: $alert-dismissible-padding-left;
	padding-right: $alert-dismissible-padding-right;
	padding-top: $alert-dismissible-padding-top;
}

// Alert Fluid

.alert-fluid {
	@include border-radius(0);

	border-width: $alert-fluid-border-width;
	margin-bottom: $alert-fluid-margin-bottom;
	padding: 0;

	&.alert-dismissible {
		.container,
		.container-fluid {
			padding-bottom: $alert-dismissible-padding-bottom;
			padding-left: $alert-dismissible-padding-left;
			padding-right: calc(#{$alert-dismissible-padding-right} + #{$grid-gutter-width / 2});
			padding-top: $alert-dismissible-padding-top;
			position: relative;
		}
	}

	.container,
	.container-fluid {
		padding: $alert-padding-y $alert-padding-x;
	}

	.close {
		right: calc(#{$grid-gutter-width / 2} + #{$nav-btn-margin-x});
	}
}

// Alert Notifications

.alert-container {
	height: 0;
	position: relative;
}

.alert-notifications {
	.alert {
		@include box-shadow($alert-notifications-box-shadow);

		width: $alert-notifications-max-width;

		@include clay-scale-component {
			max-width: none;
			width: 100%;
		}

		&:last-child {
			margin-bottom: 0;
		}
	}
}

.alert-notifications-absolute {
	bottom: $alert-notifications-absolute-bottom;
	height: 0;
	left: $alert-notifications-absolute-left;
	position: absolute;
	right: $alert-notifications-absolute-right;
	top: $alert-notifications-absolute-top;
	z-index: $zindex-alert-notifications;

	@include clay-scale-component {
		bottom: $alert-notifications-absolute-bottom-mobile;
		left: $alert-notifications-absolute-left-mobile;
		right: $alert-notifications-absolute-right-mobile;
		top: $alert-notifications-absolute-top-mobile;
	}
}

.alert-notifications-fixed {
	bottom: $alert-notifications-fixed-bottom;
	left: $alert-notifications-fixed-left;
	position: fixed;
	right: $alert-notifications-fixed-right;
	top: $alert-notifications-fixed-top;
	z-index: $zindex-alert-notifications;

	@include clay-scale-component {
		bottom: $alert-notifications-fixed-bottom-mobile;
		left: $alert-notifications-fixed-left-mobile;
		right: $alert-notifications-fixed-right-mobile;
		top: $alert-notifications-fixed-top-mobile;
	}
}

// Alert List

.alert-list {
	display: flex;
	flex-direction: column;
	margin-bottom: 0;
	padding-left: 0;

	.close {
		top: 50%;
		transform: translateY(-50%);
	}
}

// Alert in Modal

.modal-body {
	.alert {
		.close {
			right: $modal-inner-padding;
		}
	}

	.alert-list {
		.alert-fluid:last-child {
			margin-bottom: -$alert-fluid-border-bottom-width;
		}
	}
}

// Alert Variants

@each $color, $value in $alert-palette {
	.alert-#{$color} {
		background-color: map-get($value, bg);
		border-color: map-get($value, border-color);
		color: map-get($value, color);

		.close {
			color: map-get($value, close-color);

			&:hover,
			&:focus {
				color: map-get($value, close-hover-color);
			}
		}

		.alert-link {
			color: map-get($value, link-color);

			&:hover,
			&:focus {
				color: map-get($value, link-hover-color);
			}
		}

		.lead {
			color: map-get($value, lead-color);
		}
	}
}
%aspect-ratio {
	display: block;
	overflow: hidden;
	position: relative;

	@include clay-aspect-ratio;
}

.aspect-ratio {
	@extend %aspect-ratio;
}

// Aspect Ratio Item

%aspect-ratio-item {
	position: absolute;
	word-wrap: break-word;
}

.aspect-ratio-item {
	@extend %aspect-ratio-item;
}

// Fluid

%aspect-ratio-item-fluid {
	max-width: 100%;
	position: absolute;
	word-wrap: break-word;
}

.aspect-ratio-item-fluid {
	@extend %aspect-ratio-item-fluid;
}

// Vertical Fluid

%aspect-ratio-item-vertical-fluid {
	max-height: 100%;
	position: absolute;
	word-wrap: break-word;
}

.aspect-ratio-item-vertical-fluid {
	@extend %aspect-ratio-item-vertical-fluid;
}

// Top Center

%aspect-ratio-item-top-center {
	@include clay-position(top-center);
}

.aspect-ratio-item-top-center {
	@extend %aspect-ratio-item-top-center;
}

// Top Right

%aspect-ratio-item-top-right {
	@include clay-position(top-right);
}

.aspect-ratio-item-top-right {
	@extend %aspect-ratio-item-top-right;
}

// Right Middle

%aspect-ratio-item-right-middle {
	@include clay-position(right-middle);
}

.aspect-ratio-item-right-middle {
	@extend %aspect-ratio-item-right-middle;
}

// Bottom Right

%aspect-ratio-item-bottom-right {
	@include clay-position(bottom-right);
}

.aspect-ratio-item-bottom-right {
	@extend %aspect-ratio-item-bottom-right;
}

// Bottom Center

%aspect-ratio-item-bottom-center {
	@include clay-position(bottom-center);
}

.aspect-ratio-item-bottom-center {
	@extend %aspect-ratio-item-bottom-center;
}

// Bottom Left

%aspect-ratio-item-bottom-left {
	@include clay-position(bottom-left);
}

.aspect-ratio-item-bottom-left {
	@extend %aspect-ratio-item-bottom-left;
}

// Left Middle

%aspect-ratio-item-left-middle {
	@include clay-position(left-middle);
}

.aspect-ratio-item-left-middle {
	@extend %aspect-ratio-item-left-middle;
}

// Center Middle

%aspect-ratio-item-center-middle {
	@include clay-position(center-middle);
}

.aspect-ratio-item-center-middle {
	@extend %aspect-ratio-item-center-middle;
}

// 3 to 2

%aspect-ratio-3-to-2 {
	@include clay-aspect-ratio(3, 2);
}

.aspect-ratio-3-to-2 {
	@extend %aspect-ratio-3-to-2;
}

// 4 to 3

%aspect-ratio-4-to-3 {
	@include clay-aspect-ratio(4, 3);
}

.aspect-ratio-4-to-3 {
	@extend %aspect-ratio-4-to-3;
}

// 8 to 5

%aspect-ratio-8-to-5 {
	@include clay-aspect-ratio(8, 5);
}

.aspect-ratio-8-to-5 {
	@extend %aspect-ratio-8-to-5;
}

// 16 to 9

%aspect-ratio-16-to-9 {
	@include clay-aspect-ratio(16, 9);
}

.aspect-ratio-16-to-9 {
	@extend %aspect-ratio-16-to-9;
}

// Bg Contain

%aspect-ratio-bg-contain {
	background-position: center;
	background-repeat: no-repeat;
	background-size: contain;
}

.aspect-ratio-bg-contain {
	@extend %aspect-ratio-bg-contain;
}

// Bg Cover

%aspect-ratio-bg-cover {
	background-position: center;
	background-repeat: no-repeat;
	background-size: cover;
}

.aspect-ratio-bg-cover {
	@extend %aspect-ratio-bg-cover;
}

// Bg Center

%aspect-ratio-bg-center {
	background-position: center;
	background-repeat: no-repeat;
}

.aspect-ratio-bg-center {
	@extend %aspect-ratio-bg-center;
}
.badge {
	border-color: $badge-border-color;
	border-style: $badge-border-style;
	border-width: $badge-border-width;
	line-height: $badge-line-height;
	margin-bottom: $badge-spacer-y;
	margin-right: $badge-spacer-x;
	margin-top: $badge-spacer-y;
	max-width: 100%;
	white-space: inherit;
	word-wrap: break-word;

	a {
		color: $badge-link-color;
		text-decoration: $badge-link-text-decoration;

		&:hover,
		&:focus {
			color: $badge-link-hover-color;
			text-decoration: $badge-link-hover-text-decoration;
		}
	}

	// Inline Item in Badges are deprecated in v2.0.0-rc.11 use .badge-item
	// pattern instead
	.inline-item {
		a {
			align-items: center;
			display: inline-flex;
			margin-top: $badge-lexicon-icon-margin-top;
		}

		.btn-unstyled {
			color: inherit;
			display: inline-flex;
			margin-top: $badge-lexicon-icon-margin-top;
			max-width: none;
		}

		.close {
			color: inherit;
			display: inline-flex;
			float: none;
			font-size: inherit;
			margin-top: $badge-lexicon-icon-margin-top;
			opacity: 1;
		}

		a,
		.btn-unstyled,
		.close {
			.lexicon-icon {
				margin-top: 0;
			}
		}

		.lexicon-icon {
			height: $badge-lexicon-icon-height;
			margin-top: $badge-lexicon-icon-margin-top;
			width: $badge-lexicon-icon-width;
		}
	}
}

.badge {
	display: inline-flex;
}

.badge-item {
	display: flex;
	flex-direction: column;
	flex-shrink: 0;
	justify-content: center;
	min-height: 0;
	position: relative;
	text-align: left;

	a {
		display: inline-flex;
	}

	.btn-unstyled {
		color: inherit;
		display: inline-flex;
	}

	.close {
		@include clay-link($badge-close);
	}

	.lexicon-icon {
		height: $badge-lexicon-icon-height;
		margin-top: $badge-lexicon-icon-margin-top;
		width: $badge-lexicon-icon-width;
	}
}

.badge-item-expand {
	flex-grow: 1;
	flex-shrink: 1;
	min-width: $badge-item-expand-min-width;
	word-wrap: break-word;

	a {
		flex-direction: column;
	}
}

.badge-item-before {
	margin-right: $badge-item-spacer-x;
}

.badge-item-after {
	margin-left: $badge-item-spacer-x;
}


// Badge Variants

@each $color, $value in $badge-palette {
	.badge-#{$color} {
		background-color: map-get($value, bg);
		border-color: map-get($value, border-color);
		color: map-get($value, color);

		&[href] {
			&:hover,
			&:focus {
				background-color: map-get($value, hover-bg);
				border-color: map-get($value, hover-border-color);
				color: map-get($value, hover-color);
			}
		}

		a {
			color: map-get($value, link-color);

			&:hover,
			&:focus {
				color: map-get($value, link-hover-color);
			}
		}
	}
}
.breadcrumb {
	border-radius: $breadcrumb-border-radius;
}

.breadcrumb-link {
	display: block;
	color: $breadcrumb-link-color;

	@if not ($breadcrumb-link-text-decoration == $link-decoration) {
		text-decoration: $breadcrumb-link-text-decoration;
	}

	text-transform: $breadcrumb-text-transform;

	&:hover,
	&:focus {
		color: $breadcrumb-link-hover-color;

		@if not ($breadcrumb-link-hover-text-decoration == $link-hover-decoration) {
			text-decoration: $breadcrumb-link-hover-text-decoration;
		}
	}

	> .breadcrumb-text-truncate {
		text-decoration: $breadcrumb-link-text-decoration;

		&:hover,
		&:focus {
			text-decoration: $breadcrumb-link-hover-text-decoration;
		}
	}
}

.breadcrumb-item {
	font-size: $breadcrumb-font-size;
	font-weight: $breadcrumb-font-weight;

	@if ($breadcrumb-divider-svg-icon) {
		margin-right: 0.5em;
		position: relative;
	}

	&.active {
		font-weight: $breadcrumb-active-font-weight;
	}

	> span {
		text-transform: $breadcrumb-text-transform;
	}

	+ .breadcrumb-item {
		@if ($breadcrumb-divider-svg-icon) {
			padding-left: 1em;
		}

		&::before {
			float: left;

			@if ($breadcrumb-divider-svg-icon) {
				background-image: $breadcrumb-divider-svg-icon;
				background-repeat: no-repeat;
				background-size: 100%;
				content: '';
				display: block;
				height: $breadcrumb-divider-svg-icon-height;
				left: 0;
				margin-top: -$breadcrumb-divider-svg-icon-height / 2;
				padding: 0;
				position: absolute;
				top: 50%;
				width: $breadcrumb-divider-svg-icon-width;
			}
			@else {
				font-family: $breadcrumb-divider-font-family;
				font-weight: $breadcrumb-divider-font-weight;
				padding-left: 0.4em;
				padding-right: 0.4em;
			}
		}
	}

	.dropdown-toggle {
		text-decoration: none;

		&:hover,
		&:focus {
			text-decoration: none;
		}
	}
}

.breadcrumb-text-truncate {
	display: inline-block;
	max-width: $breadcrumb-text-truncate-max-width;
	pointer-events: none;

	@include text-truncate;

	vertical-align: bottom;

	@include clay-scale-component {
		max-width: $breadcrumb-text-truncate-max-width-mobile;
	}
}
.btn-group,
.btn-group-vertical {
	> .btn {
		&:focus {
			z-index: 3;
		}

		&:active,
		&.active {
			z-index: 2;
		}
	}
}

.btn-group {
	flex-wrap: wrap;
}

.btn-group-nowrap {
	flex-wrap: nowrap;
}

.btn-group-item {
	align-items: center;
	display: inline-flex;
	margin-right: $btn-group-item-margin-right;
}

.btn-group-item:last-child,
.btn-group-item-last {
	margin-right: 0;
}

.btn-toolbar {
	.btn-group,
	.input-group {
		margin-bottom: $btn-toolbar-spacer-y;
		margin-top: $btn-toolbar-spacer-y;

		&:not(:last-child) {
			margin-right: $btn-toolbar-spacer-x;
		}
	}
}

.btn-group-lg {
	.btn-group > .btn {
		@extend .btn-lg;
	}

	.btn-monospaced {
		padding: 0;
	}
}

.btn-group-sm {
	.btn-group > .btn {
		@extend .btn-sm;
	}

	.btn-monospaced {
		padding: 0;
	}
}
.btn {
	font-size: $btn-font-size;

	@include clay-scale-component {
		font-size: $btn-font-size-mobile;
		padding-bottom: $btn-padding-y-mobile;
		padding-left: $btn-padding-x-mobile;
		padding-right: $btn-padding-x-mobile;
		padding-top: $btn-padding-y-mobile;
	}

	&:not(:disabled):not(.disabled) {
		cursor: $btn-cursor;
	}

	&.disabled,
	&:disabled {
		cursor: $btn-disabled-cursor;
	}
}

.btn .inline-item {
	font-size: $btn-inline-item-font-size;
}

.btn-section {
	display: block;
	font-size: $btn-section-font-size;
	font-weight: $btn-section-font-weight;
	line-height: $btn-section-line-height;
}

// Button Sizes

.btn-lg {
	font-size: $btn-font-size-lg;

	@include clay-scale-component {
		font-size: $btn-font-size-lg-mobile;
		padding-bottom: $btn-padding-y-lg-mobile;
		padding-left: $btn-padding-x-lg-mobile;
		padding-right: $btn-padding-x-lg-mobile;
		padding-top: $btn-padding-y-lg-mobile;
	}

	.inline-item {
		font-size: $btn-inline-item-font-size-lg;
	}

	.btn-section {
		font-size: $btn-section-font-size-lg;
	}
}

.btn-sm {
	font-size: $btn-font-size-sm;

	@include clay-scale-component {
		font-size: $btn-font-size-sm-mobile;
		padding-bottom: $btn-padding-y-sm-mobile;
		padding-left: $btn-padding-x-sm-mobile;
		padding-right: $btn-padding-x-sm-mobile;
		padding-top: $btn-padding-y-sm-mobile;
	}

	.inline-item {
		font-size: $btn-inline-item-font-size-sm;
	}

	.btn-section {
		font-size: $btn-section-font-size-sm;
	}
}

// Button Link

.btn-link {
	@include border-radius(1px);

	&:focus {
		box-shadow: $btn-focus-box-shadow;
		text-decoration: $link-decoration;
	}

	&.disabled,
	&:disabled {
		text-decoration: none;

		&:hover {
			text-decoration: none;
		}
	}

	&:hover {
		text-decoration: $link-hover-decoration;
	}
}

// Button Unstyled

%btn-unstyled {
	background-color: rgba(0, 0, 0, 0.001);
	border-width: 0;
	cursor: $btn-cursor;
	font-size: inherit;
	font-weight: inherit;
	line-height: inherit;
	max-width: 100%;
	padding: 0;
	text-align: left;
	text-transform: inherit;
	vertical-align: baseline;
}

.btn-unstyled {
	@extend %btn-unstyled;

	&.btn-lg {
		border-color: transparent;
		border-width: $btn-border-width;
		font-size: $btn-font-size-lg;
		line-height: $btn-line-height-lg;
		padding: $btn-padding-y-lg $btn-padding-x-lg;
	}

	&.btn-sm {
		border-color: transparent;
		border-width: $btn-border-width;
		font-size: $btn-font-size-sm;
		line-height: $btn-line-height-sm;
		padding: $btn-padding-y-sm $btn-padding-x-sm;
	}
}

// Button Monospaced

.btn-monospaced {
	height: $btn-monospaced-size;
	line-height: 1;
	overflow: hidden;
	padding-bottom: $btn-monospaced-padding-y;
	padding-left: $btn-monospaced-padding-x;
	padding-right: $btn-monospaced-padding-x;
	padding-top: $btn-monospaced-padding-y;
	text-align: center;
	white-space: normal;
	width: $btn-monospaced-size;
	word-wrap: break-word;

	@include clay-scale-component {
		height: $btn-monospaced-size-mobile;
		width: $btn-monospaced-size-mobile;
	}

	&.btn-lg {
		height: $btn-monospaced-size-lg;
		padding-bottom: $btn-monospaced-padding-y-lg;
		padding-left: $btn-monospaced-padding-x-lg;
		padding-right: $btn-monospaced-padding-x-lg;
		padding-top: $btn-monospaced-padding-y-lg;
		width: $btn-monospaced-size-lg;

		@include clay-scale-component {
			height: $btn-monospaced-size-lg-mobile;
			width: $btn-monospaced-size-lg-mobile;
		}
	}

	&.btn-sm {
		height: $btn-monospaced-size-sm;
		padding-bottom: $btn-monospaced-padding-y-sm;
		padding-left: $btn-monospaced-padding-x-sm;
		padding-right: $btn-monospaced-padding-x-sm;
		padding-top: $btn-monospaced-padding-y-sm;
		width: $btn-monospaced-size-sm;

		@include clay-scale-component {
			height: $btn-monospaced-size-sm-mobile;
			width: $btn-monospaced-size-sm-mobile;
		}
	}

	&.btn .lexicon-icon {
		margin-top: 0;
	}
}

// Button Variants

@each $color, $value in $btn-palette {
	.btn-#{$color} {
		@include clay-button-variant($value);
	}
}

// Button Outline Variants

@each $color, $value in $btn-outline-palette {
	.btn-outline-#{$color} {
		@include clay-button-variant($value);
	}
}

.btn-outline-borderless {
	border-color: transparent;

	&:hover,
	&:focus {
		border-color: transparent;
	}

	&:disabled,
	&.disabled {
		border-color: transparent;
	}
}

.btn-outline-borderless:not(:disabled):not(.disabled):active {
	border-color: transparent;
}

.show > .btn-outline-borderless.dropdown-toggle {
	border-color: transparent;
}

// Loading Icons with Buttons

.btn .loading-animation {
	font-size: 1em;
	margin-top: $inline-item-lexicon-icon-margin-top;
}
.label {
	border-color: $label-border-color;

	@include border-radius($label-border-radius);

	border-style: $label-border-style;
	border-width: $label-border-width;
	color: $label-color;
	display: inline-flex;
	font-size: $label-font-size;
	font-weight: $label-font-weight;
	height: $label-height;
	line-height: $label-line-height;
	margin-bottom: $label-spacer-y;
	margin-right: $label-spacer-x;
	margin-top: $label-spacer-y;
	max-width: 100%;
	padding-bottom: $label-padding-y;
	padding-left: $label-padding-x;
	padding-right: $label-padding-x;
	padding-top: $label-padding-y;
	text-transform: $label-text-transform;
	white-space: inherit;
	word-wrap: break-word;

	a {
		color: $label-color;
		display: inline-block;
		text-decoration: $label-link-text-decoration;

		&:hover,
		&:focus {
			color: $label-link-hover-color;
			text-decoration: $label-link-hover-text-decoration;
		}
	}

	// Inline Item in Labels are deprecated in v2.0.0-rc.11 use .label-item
	// pattern instead
	.inline-item {
		a {
			align-items: center;
			display: inline-flex;
			margin-top: $label-lexicon-icon-margin-top;
		}

		.btn-unstyled {
			color: inherit;
			display: inline-flex;
			margin-top: $label-lexicon-icon-margin-top;
			max-width: none;
		}

		.close {
			color: inherit;
			display: inline-flex;
			float: none;
			font-size: inherit;
			margin-top: $label-lexicon-icon-margin-top;
			opacity: 1;
		}

		a,
		.btn-unstyled,
		.close {
			.lexicon-icon {
				margin-top: 0;
			}
		}

		.lexicon-icon {
			height: $label-lexicon-icon-height;
			margin-top: $label-lexicon-icon-margin-top;
			width: $label-lexicon-icon-width;
		}
	}
}

a.label {
	text-decoration: $label-anchor-text-decoration;

	&:hover,
	&:focus {
		text-decoration: $label-anchor-hover-text-decoration;
	}
}

.label-dismissible {
	text-transform: $label-dismissible-text-transform;
}

.label-item {
	display: flex;
	flex-direction: column;
	flex-shrink: 0;
	justify-content: center;
	min-height: 0;
	position: relative;

	a {
		display: inline-flex;
	}

	.btn-unstyled {
		color: inherit;
		display: inline-flex;
	}

	.close {
		@include clay-link($label-close);
	}

	.lexicon-icon {
		height: $label-lexicon-icon-height;
		margin-top: $label-lexicon-icon-margin-top;
		width: $label-lexicon-icon-width;
	}

	.text-truncate-inline {
		display: inline-flex;
	}
}

.label-item-expand {
	flex-grow: 1;
	flex-shrink: 1;
	min-width: 1rem;
	word-wrap: break-word;

	a {
		flex-direction: column;
	}
}

.label-item-before {
	margin-right: $label-item-spacer-x;
}

.label-item-after {
	margin-left: $label-item-spacer-x;
}

// Label Sizes

.label-lg {
	@include clay-label-size($label-lg);
}

// Label Variants

@each $color, $value in $label-palette {
	.label-#{$color} {
		background-color: map-get($value, bg);
		border-color: map-get($value, border-color);
		color: map-get($value, color);

		&[href] {
			&:hover,
			&:focus {
				background-color: map-get($value, hover-bg);
				border-color: map-get($value, hover-border-color);
				color: map-get($value, hover-color);
			}
		}

		a {
			color: map-get($value, link-color);

			&:hover,
			&:focus {
				color: map-get($value, link-hover-color);
			}
		}
	}
}
.sticker {
	align-items: center;

	border-color: $sticker-border-color;

	@include border-radius($sticker-border-radius);

	border-style: $sticker-border-style;
	border-width: $sticker-border-width;
	color: $sticker-color;

	@include clay-monospace($sticker-size);

	display: inline-flex;
	font-size: $sticker-font-size;
	font-weight: $sticker-font-weight;
	justify-content: center;
	position: relative;
	text-align: center;
	vertical-align: middle;

	.lexicon-icon {
		display: block;
		height: 100%;
		margin: auto;
	}

	> .inline-item {
		font-size: $sticker-inline-item-font-size;

		.lexicon-icon {
			margin-top: 0;
		}
	}

	&.rounded .sticker-overlay {
		border-radius: $rounded-border-radius;
	}

	&.rounded-circle .sticker-overlay {
		border-radius: $rounded-circle-border-radius;
	}

	&.rounded-0 .sticker-overlay {
		border-radius: 0;
	}
}

.sticker-img {
	@extend %aspect-ratio-item-center-middle;
	@extend %aspect-ratio-item-fluid;
}

.sticker-overlay {
	align-items: center;

	@include border-radius($sticker-border-radius);

	bottom: 0;
	display: flex;
	justify-content: center;
	left: 0;
	overflow: hidden;
	position: absolute;
	right: 0;
	top: 0;
}

// Sticker Positions

.sticker-bottom-left {
	bottom: $sticker-inside-offset;
	left: $sticker-inside-offset;
	position: absolute;
	right: auto;
	top: auto;
}

.sticker-bottom-right {
	bottom: $sticker-inside-offset;
	left: auto;
	position: absolute;
	right: $sticker-inside-offset;
	top: auto;
}

.sticker-top-left {
	left: $sticker-inside-offset;
	position: absolute;
	top: $sticker-inside-offset;
}

.sticker-top-right {
	left: auto;
	position: absolute;
	right: $sticker-inside-offset;
	top: $sticker-inside-offset;
}

.sticker-outside {
	left: $sticker-outside-offset;
	top: $sticker-outside-offset;

	&.sticker-bottom-left {
		bottom: $sticker-outside-offset;
		top: auto;
	}

	&.sticker-bottom-right {
		bottom: $sticker-outside-offset;
		left: auto;
		right: $sticker-outside-offset;
		top: auto;
	}

	&.sticker-top-right {
		left: auto;
		right: $sticker-outside-offset;
	}
}

// Sticker Sizes

.sticker-sm {
	@include clay-sticker-size($sticker-sm);
}

.sticker-lg {
	@include clay-sticker-size($sticker-lg);
}

.sticker-xl {
	@include clay-sticker-size($sticker-xl);
}

// Sticker Variants

@each $color, $value in $sticker-palette {
	.sticker-#{$color} {
		background-color: map-get($value, bg);
		border-color: map-get($value, border-color);
		color: map-get($value, color);
	}
}

// Sticker Circle

.sticker-circle,
.sticker-circle .sticker-overlay {
	@include border-radius($sticker-circle-border-radius);
}
.card,
.card-horizontal {
	border-style: $card-border-style;

	@include box-shadow($card-box-shadow);

	display: block;
	margin-bottom: $card-margin-bottom;
	position: relative;

	@if ($card-border-radius > 0) {
		.autofit-col {
			&:first-child {
				@include border-left-radius($card-inner-border-radius);
			}

			&:last-child {
				@include border-right-radius($card-inner-border-radius);
			}
		}
	}
}

.card-body {
	padding-bottom: $card-body-padding-bottom;
	padding-left: $card-body-padding-left;
	padding-right: $card-body-padding-right;
	padding-top: $card-body-padding-top;
}

.card-section-header {
	color: $card-section-header-color;
	font-size: $card-section-header-font-size;
	font-weight: $card-section-header-font-weight;
	line-height: $card-section-header-line-height;
	margin-bottom: $card-section-header-margin-bottom;
	padding: $card-section-header-padding;
	text-transform: $card-section-header-text-transform;
}

// Card Title

.card-title {
	@include clay-text-typography($card-title);
}

.card-title a {
	@include clay-link($card-title-link);
}

// Card Subtitle

.card-subtitle {
	@include clay-text-typography($card-subtitle);
}

.card-subtitle a {
	@include clay-link($card-subtitle-link);
}

// Card Link

.card-link {
	@include clay-link($card-link);

	&.btn-unstyled {
		white-space: normal;
	}

	+ .card-link {
		margin-left: 0;
	}
}

.card-divider {
	background-color: $card-divider-bg;
	height: $card-divider-height;
	margin-bottom: $card-divider-spacer-y;
	margin-left: $card-divider-spacer-x;
	margin-right: $card-divider-spacer-x;
	margin-top: $card-divider-spacer-y;
}

.card-row {
	display: flex;
	width: 100%;

	.autofit-col {
		justify-content: center;
		padding-left: 0;
		padding-right: 0;
	}

	.autofit-col-expand {
		min-width: 25px;
	}
}

.card-row .autofit-col-gutters {
	padding-left: 10px;
	padding-right: 10px;

	.card-divider {
		margin-left: -10px;
		margin-right: -10px;
	}
}

// Card Row Content Alignment

.autofit-col {
	.justify-content-center & {
		justify-content: center;
	}

	.justify-content-start & {
		justify-content: flex-start;
	}

	.justify-content-end & {
		justify-content: flex-end;
	}

	.text-center & {
		text-align: center;
	}

	.text-left & {
		text-align: left;
	}

	.text-right & {
		text-align: right;
	}
}

// Card Helpers

.card-item-first {
	@include border-top-radius($card-inner-border-radius);

	width: 100%;
}

.autofit-col:first-child .card-item-first {
	@include border-radius($card-inner-border-radius 0 0 $card-inner-border-radius);
}

.card-item-last {
	@include border-bottom-radius($card-inner-border-radius);

	width: 100%;
}

.autofit-col:last-child .card-item-last {
	@include border-radius(0 $card-inner-border-radius $card-inner-border-radius 0);
}

.rounded {
	.card-header,
	.card-item-first {
		border-top-left-radius: $card-rounded-inner-border-radius;
		border-top-right-radius: $card-rounded-inner-border-radius;
	}

	.card-footer,
	.card-item-last {
		border-bottom-left-radius: $card-rounded-inner-border-radius;
		border-bottom-right-radius: $card-rounded-inner-border-radius;
	}

	.autofit-col:first-child {
		border-bottom-left-radius: $card-rounded-inner-border-radius;
		border-top-left-radius: $card-rounded-inner-border-radius;

		.card-item-first {
			border-radius: $card-rounded-inner-border-radius 0 0 $card-rounded-inner-border-radius;
		}
	}

	.autofit-col:last-child{
		border-bottom-right-radius: $card-rounded-inner-border-radius;
		border-top-right-radius: $card-rounded-inner-border-radius;

		.card-item-last {
			border-radius: 0 $card-rounded-inner-border-radius $card-rounded-inner-border-radius 0;
		}
	}
}

.rounded-0 {
	.card-header,
	.card-item-first {
		border-top-left-radius: $card-rounded-0-inner-border-radius;
		border-top-right-radius: $card-rounded-0-inner-border-radius;
	}

	.card-footer,
	.card-item-last {
		border-bottom-left-radius: $card-rounded-0-inner-border-radius;
		border-bottom-right-radius: $card-rounded-0-inner-border-radius;
	}

	.autofit-col:first-child {
		border-bottom-left-radius: $card-rounded-0-inner-border-radius;
		border-top-left-radius: $card-rounded-0-inner-border-radius;

		.card-item-first {
			border-radius: $card-rounded-0-inner-border-radius 0 0 $card-rounded-0-inner-border-radius;
		}
	}

	.autofit-col:last-child {
		border-bottom-right-radius: $card-rounded-0-inner-border-radius;
		border-top-right-radius: $card-rounded-0-inner-border-radius;

		.card-item-last {
			border-radius: 0 $card-rounded-0-inner-border-radius $card-rounded-0-inner-border-radius 0;
		}
	}
}

.rounded-circle {
	.card-header,
	.card-item-first {
		border-top-left-radius: $card-rounded-circle-inner-border-radius;
		border-top-right-radius: $card-rounded-circle-inner-border-radius;
	}

	.card-footer,
	.card-item-last {
		border-bottom-left-radius: $card-rounded-circle-inner-border-radius;
		border-bottom-right-radius: $card-rounded-circle-inner-border-radius;
	}

	.autofit-col:first-child {
		border-bottom-left-radius: $card-rounded-circle-inner-border-radius;
		border-top-left-radius: $card-rounded-circle-inner-border-radius;

		.card-item-first {
			border-radius: $card-rounded-circle-inner-border-radius 0 0 $card-rounded-circle-inner-border-radius;
		}
	}

	.autofit-col:last-child {
		border-bottom-right-radius: $card-rounded-circle-inner-border-radius;
		border-top-right-radius: $card-rounded-circle-inner-border-radius;

		.card-item-last {
			border-radius: 0 $card-rounded-circle-inner-border-radius $card-rounded-circle-inner-border-radius 0;
		}
	}
}

// Checkbox and Radio Cards

.form-check-card {
	margin-bottom: $card-margin-bottom;
	margin-top: 0;
	padding-left: 0;

	.card {
		margin-bottom: 0;
	}

	.custom-control {
		display: inline;
		margin-right: 0;
		position: static;

		> label {
			font-weight: $font-weight-normal;
			padding-left: 0;
		}
	}

	.custom-control-input {
		z-index: 1;
	}

	.custom-control-label {
		position: absolute;
		z-index: 1;

		&::before,
		&::after {
			top: 0;
		}
	}

	.form-check-input {
		margin-left: 0;
		margin-top: 0;
		position: absolute;
		z-index: 1;
	}

	.form-check-label {
		color: $body-color;
		display: inline;
		font-weight: $font-weight-normal;
		padding-left: 0;
		position: static;
	}

	&.active .card,
	.custom-control-input:checked ~ .card,
	.form-check-input:checked ~ .card {
		box-shadow: $form-check-card-checked-box-shadow;
	}
}

.form-check-card {
	&:hover {
		.card {
			box-shadow: $form-check-card-checked-box-shadow;
		}
	}
}

.custom-control-input,
.form-check-input {
	&:hover {
		~ .card {
			box-shadow: $form-check-card-checked-box-shadow;
		}
	}
}

.form-check-bottom-left,
.form-check-middle-left,
.form-check-top-left {
	.card-horizontal {
		> .card-body {
			padding-left: $checkbox-left-card-padding;
		}
	}
}

.form-check-bottom-right,
.form-check-middle-right,
.form-check-top-right {
	.card-horizontal {
		> .card-body {
			padding-right: $checkbox-right-card-padding;
		}
	}
}

.form-check-bottom-left {
	.custom-control-input,
	.custom-control-label,
	.form-check-input {
		bottom: $checkbox-position;
		left: $checkbox-position;
		top: auto;
		transform: none;
	}
}

.form-check-bottom-right {
	.custom-control-input,
	.custom-control-label,
	.form-check-input {
		bottom: $checkbox-position;
		left: auto;
		right: $checkbox-position;
		top: auto;
		transform: none;
	}
}

.form-check-middle-left {
	.custom-control-input,
	.custom-control-label,
	.form-check-input {
		left: $checkbox-position;
		margin-top: 0;
		top: 50%;
		transform: translateY(-50%);
	}
}

.form-check-middle-right {
	.custom-control-input,
	.custom-control-label,
	.form-check-input {
		left: auto;
		margin-top: 0;
		right: $checkbox-position;
		top: 50%;
		transform: translateY(-50%);
	}
}

.form-check-top-left {
	.custom-control-input,
	.custom-control-label,
	.form-check-input {
		left: $checkbox-position;
		top: $checkbox-position;
		transform: none;
	}
}

.form-check-top-right {
	.custom-control-input,
	.custom-control-label,
	.form-check-input {
		left: auto;
		right: $checkbox-position;
		top: $checkbox-position;
		transform: none;
	}
}

// Card Page

.card-page {
	@extend %clay-custom-grid-wrapper;
}

.card-page-item-header {
	padding-left: $grid-gutter-width / 2;
	padding-right: $grid-gutter-width / 2;
	width: 100%;
}

.card-page-item-directory {
	@include clay-custom-grid-columns($card-page-item-directory);
}

.card-page-item-asset {
	@include clay-custom-grid-columns($card-page-item-asset);
}

// Card Type Asset

.card-type-asset {
	@include clay-card-type-asset($card-type-asset);
}

.image-card {
	@include clay-card-type-asset-variant($image-card);
}

.file-card {
	@include clay-card-type-asset-variant($file-card);
}

.user-card {
	@include clay-card-type-asset-variant($user-card);
}

// Card Type Directory

.card-type-directory {
	@include clay-card-type-directory($card-type-directory);
}
.dropdown-header {
	font-size: $dropdown-header-font-size;
	margin-bottom: $dropdown-header-margin-bottom;
	margin-top: $dropdown-header-margin-top;
	text-transform: $dropdown-header-text-transform;
	white-space: normal;
	word-wrap: break-word;

	@if not ($dropdown-header-padding-y == $dropdown-padding-y) {
		padding-bottom: $dropdown-header-padding-y;
		padding-top: $dropdown-header-padding-y;
	}

	@if not ($dropdown-header-padding-x == $dropdown-item-padding-x) {
		padding-left: $dropdown-header-padding-x;
		padding-right: $dropdown-header-padding-x;
	}

	@include clay-scale-component {
		font-size: $dropdown-header-font-size-mobile;
	}

	&:first-child {
		margin-top: 0;
	}
}

.dropdown-subheader {
	color: $dropdown-subheader-color;
	font-size: $dropdown-subheader-font-size;
	font-weight: $dropdown-subheader-font-weight;
	margin-bottom: $dropdown-subheader-margin-bottom;
	margin-top: $dropdown-subheader-margin-top;
	padding-bottom: $dropdown-subheader-padding-y;
	padding-left: $dropdown-subheader-padding-x;
	padding-right: $dropdown-subheader-padding-x;
	padding-top: $dropdown-subheader-padding-y;
	text-transform: $dropdown-subheader-text-transform;
	white-space: normal;
	word-wrap: break-word;

	&:first-child {
		margin-top: 0;
	}
}

.dropdown-caption {
	color: $dropdown-caption-color;
	font-size: $dropdown-caption-font-size;
	font-weight: $dropdown-caption-font-weight;
	padding: $dropdown-item-padding-y $dropdown-item-padding-x;
	white-space: normal;
	word-wrap: break-word;
}

.dropdown-item {
	overflow: hidden;
	position: relative;
	white-space: normal;
	word-wrap: break-word;

	&.active {
		font-weight: $dropdown-link-active-font-weight;

		label {
			color: $dropdown-link-active-color;
		}

		.form-check-label {
			color: $dropdown-link-active-color;
			font-weight: $dropdown-link-active-font-weight;
		}

		.custom-control-label {
			font-weight: $dropdown-link-active-font-weight;
		}
	}

	&.disabled,
	&:disabled {
		cursor: $dropdown-item-disabled-cursor;

		label,
		.form-check-label {
			color: $dropdown-link-disabled-color;
		}

		&.btn-link,
		&.btn-unstyled {
			opacity: 1;
		}
	}

	&.btn-link {
		line-height: $line-height-base;
		transition: none;

		&:hover,
		&:focus {
			text-decoration: none;
		}
	}

	&.btn-unstyled {
		font-weight: $dropdown-link-font-weight;
		padding: $dropdown-item-padding-y $dropdown-item-padding-x;
		transition: none;
	}

	.form-check {
		margin-bottom: 0;
	}

	.form-check-label {
		font-weight: $dropdown-link-font-weight;
	}

	.custom-control {
		margin-bottom: 0;
		margin-right: 0;
		min-height: $custom-control-indicator-size;
	}

	.custom-control-label {
		font-weight: $dropdown-link-font-weight;
	}
}

.dropdown-section {
	padding: $dropdown-item-padding-y $dropdown-item-padding-x;

	.form-group + .form-group {
		margin-top: $dropdown-item-padding-y * 2;
	}
}

.dropdown-menu {
	border-style: $dropdown-border-style;
	font-size: $dropdown-font-size;
	max-height: $dropdown-max-height;
	max-width: $dropdown-max-width;
	min-height: $dropdown-min-height;
	overflow: auto;

	@include media-breakpoint-down(md) {
		max-height: $dropdown-max-height-mobile;
		max-width: $dropdown-max-width-mobile;
	}

	@include clay-scale-component {
		font-size: $dropdown-font-size-mobile;
	}

	.alert {
		font-size: $dropdown-alert-font-size;
		line-height: $dropdown-alert-line-height;
		margin: $dropdown-alert-margin;
		padding: $dropdown-alert-padding-y $dropdown-alert-padding-x;

		&:first-child {
			margin-top: 0;
		}

		&:last-child {
			margin-bottom: 0;
		}
	}

	.alert-fluid {
		margin-left: 0;
		margin-right: 0;

		&:first-child {
			margin-top: -$dropdown-padding-y;
		}

		&:last-child {
			margin-bottom: -$dropdown-padding-y;
		}
	}

	.form-group {
		margin-bottom: 0;
	}

	.inline-scroller {
		max-height: $dropdown-inline-scroller-max-height;

		@include media-breakpoint-down(md) {
			max-height: $dropdown-inline-scroller-max-height-mobile;
		}
	}

	> .list-unstyled {
		margin-bottom: 0;
	}
}

// Dropdown Action

.dropdown-action {
	display: inline-block;
	font-size: $dropdown-action-toggle-font-size;
	vertical-align: middle;

	> .dropdown-toggle {
		align-items: center;

		@include border-radius($dropdown-action-toggle-border-radius);

		cursor: $btn-cursor;
		display: flex;

		@include clay-monospace($dropdown-action-toggle-size);

		font-size: inherit;
		font-weight: inherit;
		justify-content: center;
		line-height: inherit;
		padding: 0;
		text-transform: inherit;
		vertical-align: baseline;

		&:disabled,
		&.disabled {
			cursor: $dropdown-action-toggle-disabled-cursor;
			opacity: $dropdown-action-toggle-disabled-opacity;
		}

		.inline-item .lexicon-icon,
		.lexicon-icon {
			margin-top: 0;
		}
	}
}

// Dropdown Menu with Indicators

.dropdown-menu-indicator-start {
	// `.dropdown-item-indicator` is deprecated in v2.3.5 use
	// `.dropdown-item-indicator-start` instead
	.dropdown-item-indicator {
		height: $dropdown-item-indicator-size;
		left: $dropdown-item-padding-x;
		position: absolute;
		top: $dropdown-item-padding-y;
		width: $dropdown-item-indicator-size;
	}

	.dropdown-item-indicator-start {
		height: $dropdown-item-indicator-size;
		left: $dropdown-item-padding-x;
		position: absolute;
		right: auto;
		top: $dropdown-item-padding-y;
		width: $dropdown-item-indicator-size;
	}

	.dropdown-header,
	.dropdown-subheader,
	.dropdown-caption,
	.dropdown-item {
		padding-left: $dropdown-item-padding-x + $dropdown-item-indicator-size + $dropdown-item-indicator-spacer-x;
	}
}

.dropdown-menu-indicator-end {
	// `.dropdown-item-indicator` is deprecated in v2.3.5 use
	// `.dropdown-item-indicator-end` instead
	.dropdown-item-indicator {
		position: absolute;
		right: $dropdown-item-padding-x;
		top: $dropdown-item-padding-y;
	}

	.dropdown-item-indicator-end {
		left: auto;
		position: absolute;
		right: $dropdown-item-padding-x;
		top: $dropdown-item-padding-y;
	}

	.dropdown-item {
		padding-right: $dropdown-item-padding-x + $dropdown-item-indicator-size + $dropdown-item-indicator-spacer-x;
	}
}

// Dropdown Menu Positions

.dropdown-menu-top {
	bottom: 100% !important;
	left: 0 !important;
	margin-top: 0;
	margin-bottom: $dropdown-spacer;
	right: auto !important;
	top: auto !important;
	transform: none !important;
	will-change: auto !important;
}

.dropdown-menu-top-right {
	bottom: 100% !important;
	left: auto !important;
	margin-top: 0;
	margin-bottom: $dropdown-spacer;
	right: 0 !important;
	top: auto !important;
	transform: none !important;
	will-change: auto !important;
}

.dropdown-menu-top-center {
	bottom: 100% !important;
	left: 50% !important;
	margin-top: 0;
	margin-bottom: $dropdown-spacer;
	right: auto !important;
	top: auto !important;
	transform: translateX(-50%) !important;
	will-change: auto !important;
}

.dropdown-menu-center {
	bottom: auto !important;
	left: 50% !important;
	right: auto !important;
	top: 100% !important;
	transform: translateX(-50%) !important;
	will-change: auto !important;
}

.dropdown-menu-left-side {
	bottom: auto !important;
	left: auto !important;
	margin-right: $dropdown-spacer;
	margin-top: 0;
	right: 100% !important;
	top: 0 !important;
	transform: none !important;
	will-change: auto !important;
}

.dropdown-menu-left-side-bottom {
	bottom: 0 !important;
	left: auto !important;
	margin-right: $dropdown-spacer;
	margin-top: 0;
	right: 100% !important;
	top: auto !important;
	transform: none !important;
	will-change: auto !important;
}

.dropdown-menu-left-side-middle {
	bottom: auto !important;
	left: auto !important;
	margin-right: $dropdown-spacer;
	margin-top: 0;
	right: 100% !important;
	top: 50% !important;
	transform: translate(0 , -50%) !important;
	will-change: auto !important;
}

.dropdown-menu-right-side {
	bottom: auto !important;
	left: 100% !important;
	margin-left: $dropdown-spacer;
	margin-top: 0;
	right: auto !important;
	top: 0 !important;
	transform: none !important;
	will-change: auto !important;
}

.dropdown-menu-right-side-bottom {
	bottom: 0 !important;
	left: 100% !important;
	margin-left: $dropdown-spacer;
	margin-top: 0;
	right: auto !important;
	top: auto !important;
	transform: none !important;
	will-change: auto !important;
}

.dropdown-menu-right-side-middle {
	bottom: auto !important;
	left: 100% !important;
	margin-left: $dropdown-spacer;
	margin-top: 0;
	right: auto !important;
	top: 50% !important;
	transform: translate(0 , -50%) !important;
	will-change: auto !important;
}

// Dropdown wide / full

%dropdown-full-wide-dropdown-menu {
	max-width: none;
	width: 100%;

	@include media-breakpoint-up(md) {
		max-height: none;
		width: 100%;
	}
}

.dropdown-full,
.dropdown-wide {
	.dropdown-header ~ .dropdown-header {
		margin-top: $dropdown-full-wide-header-spacer-y;
	}

	.dropdown-menu {
		@extend %dropdown-full-wide-dropdown-menu;

		> .row {
			margin-left: 0;
			margin-right: 0;
			min-width: $dropdown-wide-width;
		}
	}
}

.dropdown-wide .dropdown-menu {
	@include media-breakpoint-up(lg) { // min-width 992px
		min-width: $dropdown-wide-width;
	}
}

// Navbar Component Dropdowns

.nav-item.dropdown-full {
	position: static;
}

.nav-item.dropdown-wide {
	@include media-breakpoint-down(md) { // max-width 991px
		position: static;
	}
}

.navbar-nav .dropdown-menu-center {
	@include media-breakpoint-down(sm) { // max-width 767px
		-ms-transform: none;
		transform: none;
	}
}

.navbar-right .dropdown-menu-center {
	left: 50%;
	right: auto;
}
[type="checkbox"] {
	cursor: $form-check-input-cursor;
	height: 14px;
	width: 14px;
}

[type="radio"] {
	cursor: $form-check-input-cursor;
	height: 15px;
	width: 14px;
}

fieldset {
	word-wrap: break-word;

	@-moz-document url-prefix() { // FF Fieldset workaround
		display: table-cell;
	}
}

label {
	color: $input-label-color;
	font-size: $input-label-font-size;
	font-weight: $input-label-font-weight;
	margin-bottom: $input-label-margin-bottom;
	max-width: 100%;
	word-wrap: break-word;

	@include clay-scale-component {
		font-size: $input-label-font-size-mobile;
	}

	&.focus {
		color: $input-label-focus-color;
	}

	&[for] {
		cursor: $input-label-for-cursor;
	}

	+ .form-text {
		margin-bottom: $input-label-margin-bottom;
		margin-top: 0;
	}

	.reference-mark {
		color: $input-label-reference-mark-color;
		font-size: $input-label-reference-mark-font-size;
		margin-left: $input-label-reference-mark-spacer;
		margin-right: $input-label-reference-mark-spacer;
		vertical-align: $input-label-reference-mark-vertical-align;
	}
}

.form-group {
	position: relative;

	@include clay-scale-component {
		margin-bottom: $form-group-margin-bottom-mobile;
	}
}

// Inputs

.form-control {
	background-clip: border-box;
	border-color: $input-border-color;
	border-style: $input-border-style;
	border-bottom-width: $input-border-bottom-width;
	border-left-width: $input-border-left-width;
	border-right-width: $input-border-right-width;
	border-top-width: $input-border-top-width;

	@if not ($input-font-size == $font-size-base) {
		font-size: $input-font-size;
	}

	height: $input-height;
	min-width: 0;

	@if not ($input-padding-y == $btn-padding-y) {
		padding-bottom: $input-padding-y;
		padding-top: $input-padding-y;
	}

	@if not ($input-padding-x == $btn-padding-x) {
		padding-left: $input-padding-x;
		padding-right: $input-padding-x;
	}

	@include clay-scale-component {
		font-size: $input-font-size-mobile;
		height: $input-height-mobile;
	}

	&:focus {
		&::placeholder {
			color: $input-placeholder-focus-color;
		}
	}

	&[type="range"] {
		background-color: transparent;
		border-color: transparent;
	}

	&:not([type="range"]) {
		@media screen and (-webkit-min-device-pixel-ratio: 0) {
			-webkit-appearance: none;
		}
	}

	&::-ms-clear,
	&::-ms-reveal {
		display: none;
		height: 0;
		width: 0;
	}

	.label {
		@include clay-label-size($form-control-label-size);
	}
}

.form-control-plaintext {
	background-clip: border-box;
	border-bottom-width: $input-border-bottom-width;
	border-left-width: $input-border-left-width;
	border-right-width: $input-border-right-width;
	border-top-width: $input-border-top-width;

	@if not ($input-font-size == $font-size-base) {
		font-size: $input-font-size;
	}

	height: $input-height;
	min-width: 0;

	@if not ($input-padding-y == $btn-padding-y) {
		padding-bottom: $input-padding-y;
		padding-top: $input-padding-y;
	}

	text-overflow: ellipsis;

	@include clay-scale-component {
		font-size: $input-font-size-mobile;
		height: $input-height-mobile;
	}
}

.form-control-hidden {
	left: 0;
	opacity: 0;
	position: absolute;
	z-index: -1;
}

div {
	&.form-control {
		height: auto;
		min-height: $input-height;
	}

	&.form-control-lg {
		min-height: $input-height-lg;
	}

	&.form-control-sm {
		min-height: $input-height-sm;
	}
}

.form-control-tag-group {
	align-items: center;
	display: flex;
	flex-wrap: wrap;
	height: auto;
	padding-bottom: $form-control-tag-group-padding-y;
	padding-top: $form-control-tag-group-padding-y;
}

.form-control-inset {
	background-color: transparent;
	border-width: 0;
	color: $input-color;
	flex-grow: 1;
	margin-bottom: $form-control-inset-margin-y;
	margin-top: $form-control-inset-margin-y;
	min-height: $form-control-inset-min-height;
	padding: 0;

	&:focus {
		outline: 0;
	}
}

// Select

.form-control[multiple],
.form-control[size] {
	height: auto;
}

select.form-control {
	cursor: $input-select-cursor;

	option {
		cursor: $input-select-cursor;
	}
}

// Will need to be revisted if action is taken on https://github.com/twbs/bootstrap/issues/23058
select.form-control:not([multiple]):not([size]) {
	-moz-appearance: none;
	-webkit-appearance: none;

	&::-ms-expand {
		display: none;
	}

	background-color: $input-select-bg;
	background-image: $input-select-icon;
	background-position: $input-select-bg-position;
	background-repeat: no-repeat;
	background-size: $input-select-bg-size;
	padding-bottom: $input-select-padding-bottom;
	padding-left: $input-select-padding-left;
	padding-right: $input-select-padding-right;
	padding-top: $input-select-padding-top;

	&:focus {
		background-color: $input-select-focus-bg;
		background-image: $input-select-icon-focus;
	}

	&:disabled {
		background-image: $input-select-icon-disabled;
	}
}

// Textarea

textarea {
	&.form-control {
		height: $input-textarea-height;
	}

	&.form-control-plaintext {
		height: $input-textarea-height;
	}
}

// File

.form-control-file {
	cursor: $input-file-cursor;

	&::-webkit-file-upload-button {
		cursor: $input-file-cursor;
	}
}

// Checkbox and Radio

.form-check-label {
	cursor: $form-check-label-cursor;
	display: inline;
	position: relative;
}

.form-check-input {
	position: static;

	&:disabled {
		cursor: $form-check-input-disabled-cursor;

		+ .form-check-label-text {
			color: $input-label-disabled-color;
			cursor: $form-check-label-text-disabled-cursor;
		}
	}
}

.form-check-label-text {
	margin-left: $form-check-label-text-margin-left;
	padding-left: $form-check-label-text-padding-left;
}

// Disabled State

fieldset[disabled] label,
label.disabled {
	color: $input-label-disabled-color;
	cursor: $input-label-disabled-cursor;
	opacity: $input-disabled-opacity;
}

fieldset[disabled] label {
	.form-control {
		font-weight: normal;
		opacity: 1;
	}
}

.form-control {
	fieldset[disabled] &,
	&[disabled] {
		border-color: $input-disabled-border-color;
		color: $input-disabled-color;
		cursor: $input-disabled-cursor;
		opacity: $input-disabled-opacity;

		&::placeholder {
			color: $input-placeholder-disabled-color;
		}
	}
}

.form-control[disabled] > option {
	@media (-webkit-min-device-pixel-ratio: 0) { // Webkit only
		color: $input-disabled-color;
	}
}

.form-check.disabled .form-check-label {
	@if not ($input-label-disabled-color == $text-muted) {
		color: $input-label-disabled-color;
	}
}

.form-control-file:disabled {
	cursor: $input-disabled-cursor;

	&::-webkit-file-upload-button {
		cursor: $input-disabled-cursor;
	}
}

// Readonly State

.form-control[readonly] {
	background-color: $input-readonly-bg;
	border-color: $input-readonly-border-color;
	color: $input-readonly-color;
	cursor: $input-readonly-cursor;

	&:focus {
		background-color: $input-readonly-focus-bg;
		border-color: $input-readonly-focus-border-color;
		color: $input-readonly-focus-color;
	}
}

// Input Sizes

.form-control-lg {
	@if not ($input-font-size-lg == $font-size-lg) {
		font-size: $input-font-size-lg;
	}

	height: $input-height-lg;

	@if not ($input-padding-y-lg == $btn-padding-y-lg) {
		padding-bottom: $input-padding-y-lg;
		padding-top: $input-padding-y-lg;
	}

	@if not ($input-padding-x-lg == $btn-padding-x-lg) {
		padding-left: $input-padding-x-lg;
		padding-right: $input-padding-x-lg;
	}

	@include clay-scale-component {
		height: $input-height-lg-mobile;
	}
}

.form-control-sm {
	@if not ($input-font-size-sm == $font-size-sm) {
		font-size: $input-font-size-sm;
	}

	height: $input-height-sm;

	@if not ($input-padding-y-sm == $btn-padding-y-sm) {
		padding-bottom: $input-padding-y-sm;
		padding-top: $input-padding-y-sm;
	}

	@if not ($input-padding-x-sm == $btn-padding-x-sm) {
		padding-left: $input-padding-x-sm;
		padding-right: $input-padding-x-sm;
	}

	@include clay-scale-component {
		height: $input-height-sm-mobile;
	}
}

// Form Group Autofit

.form-group-autofit {
	align-items: flex-start;
	display: flex;
	flex-direction: column;
	margin-bottom: $form-group-autofit-margin-bottom;

	@include media-breakpoint-up(sm) {
		flex-direction: row;
		width: 100%;
	}

	label {
		align-self: flex-start;
	}

	.form-group-item {
		display: flex;
		flex-basis: auto;
		flex-direction: column;
		flex-grow: 0;
		flex-shrink: 1;
		min-width: 25px;
		position: relative;
		width: 100%;

		&:not(:last-child) {
			margin-bottom: 1rem;
		}
	}

	> .form-group-item:not(:last-child) {
		@include media-breakpoint-up(sm) {
			margin-bottom: 0;
			margin-right: $grid-gutter-width / 2;
		}
	}

	.form-group-item-shrink {
		flex-shrink: 0;
		max-width: 100%;
		width: auto;
	}
}

// Form Group Item Label

.form-group-autofit .form-group-item-label:not(:last-child) {
	@include media-breakpoint-down(xs) {
		margin-bottom: 0;
	}
}

.form-group-item-label {
	@include media-breakpoint-up(sm) {
		justify-content: center;
		min-height: $input-height;

		> label {
			margin-bottom: 0;
			max-width: $form-group-item-label-max-width;
		}
	}
}

.form-group-item-label-spacer {
	@include media-breakpoint-up(sm) {
		margin-top: $form-group-item-label-spacer;
	}
}
.component-link {
	@include clay-link($component-link);
}

.single-link {
	font-weight: $single-link-font-weight;
}

.link-primary {
	@include clay-link($link-primary);
}

.link-secondary {
	@include clay-link($link-secondary);
}

// Link Outline

button.link-outline {
	cursor: $btn-cursor;
}

.link-outline {
	align-items: center;
	background-color: transparent;
	border-color: transparent;

	@include border-radius($link-outline-border-radius);

	border-style: solid;
	border-width: $link-outline-border-width;
	display: inline-flex;
	font-size: $link-outline-font-size;
	font-weight: $link-outline-font-weight;
	justify-content: center;
	line-height: $link-outline-line-height;
	padding-bottom: $link-outline-padding-y;
	padding-left: $link-outline-padding-x;
	padding-right: $link-outline-padding-x;
	padding-top: $link-outline-padding-y;
	transition: $link-outline-transition;
	vertical-align: middle;

	&:hover {
		text-decoration: none;
	}

	.inline-item .lexicon-icon,
	.lexicon-icon {
		margin-top: 0;
	}
}

.link-outline-primary {
	@include clay-link($link-outline-primary);
}

.link-outline-secondary {
	@include clay-link($link-outline-secondary);
}

.link-outline-borderless {
	border-color: transparent;
}

%link-monospaced {
	align-items: center;
	display: inline-flex;
	height: $link-monospaced-size;
	justify-content: center;
	overflow: hidden;
	padding: 0;
	vertical-align: middle;
	width: $link-monospaced-size;

	.inline-item .lexicon-icon,
	.lexicon-icon {
		margin-top: 0;
	}
}

.link-monospaced {
	@extend %link-monospaced;
}

// Component Links

.component-title {
	@include clay-text-typography($component-title);

	a {
		@include clay-link($component-title-link);
	}
}

.component-subtitle {
	@include clay-text-typography($component-subtitle);

	a {
		@include clay-link($component-subtitle-link);
	}
}

.component-action {
	@include clay-link($component-action);

	@extend %link-monospaced;
}
.form-file {
	display: flex;
	position: relative;
}

.form-file-input {
	cursor: $input-file-cursor;
	height: 100%;
	opacity: 0;
	overflow: hidden;
	position: absolute;
	width: 100%;
	z-index: 10;

	&::-webkit-file-upload-button {
		cursor: $input-file-cursor;
	}

	&:focus {
		+ .btn-primary {
			@extend .btn-primary.focus !optional;
		}

		+ .btn-secondary {
			@extend .btn-secondary.focus !optional;
		}

		+ .btn-success {
			@extend .btn-success.focus !optional;
		}

		+ .btn-warning {
			@extend .btn-warning.focus !optional;
		}

		+ .btn-danger {
			@extend .btn-danger.focus !optional;
		}

		+ .btn-light {
			@extend .btn-light.focus !optional;
		}

		+ .btn-dark {
			@extend .btn-dark.focus !optional;
		}

		+ .input-group {
			border-radius: 1px;
			box-shadow: 0 0 0 0.075rem #FFF, $btn-focus-box-shadow;
		}
	}

	&:disabled {
		cursor: $input-disabled-cursor;

		&::-webkit-file-upload-button {
			cursor: $input-disabled-cursor;
		}
	}
}

.custom-file-input:focus + .custom-file-control {
	border-radius: 1px;
}

// Custom Checkbox and Radio

.custom-control {
	label {
		cursor: $custom-control-description-cursor;
		font-size: 1rem;
	}
}

.custom-control-label {
	font-size: $custom-control-description-font-size;
	line-height: $custom-control-description-line-height;
}

.custom-control-label-text {
	padding-left: $custom-control-description-padding-left;
}

// Custom Control Indicator

.custom-control-label::before {
	border-color: $custom-control-indicator-border-color;
	border-style: $custom-control-indicator-border-style;
	border-width: $custom-control-indicator-border-width;
	font-size: $custom-control-indicator-size;
}

.custom-control-input {
	cursor: $form-check-input-cursor;

	&:active ~ .custom-control-label::before {
		border-color: $custom-control-indicator-active-border-color;
	}

	&:active:checked ~ .custom-control-label::before {
		background-color: $custom-control-indicator-checked-active-bg;
		border-color: $custom-control-indicator-checked-active-border-color;
	}

	&:checked ~ .custom-control-label::before {
		border-color: $custom-control-indicator-checked-border-color;
	}

	&:disabled {
		cursor: $custom-control-indicator-disabled-cursor;

		~ .custom-control-label::before {
			background-color: $custom-control-indicator-disabled-bg;
			border-color: $custom-control-indicator-disabled-border-color;
			box-shadow: none;
		}

		~ .custom-control-label {
			cursor: $custom-control-description-disabled-cursor;
		}
	}

	&:disabled:checked ~ .custom-control-label::before {
		background-color: $custom-control-indicator-checked-disabled-bg;
		border-color: $custom-control-indicator-checked-disabled-border-color;
	}
}

.custom-control .custom-control-input:focus ~ .custom-control-label::before {
	box-shadow: $custom-control-indicator-focus-box-shadow;
}

// Custom Checkbox

.custom-checkbox {
	.custom-control-input {
		&:checked ~ .custom-control-label::after {
			background-size: $custom-checkbox-indicator-icon-checked-bg-size;
		}

		&:indeterminate ~ .custom-control-label::before {
			background-color: $custom-checkbox-indicator-indeterminate-bg;
			border-color: $custom-control-indicator-indeterminate-border-color;
		}

		&:indeterminate ~ .custom-control-label::after {
			background-size: $custom-checkbox-indicator-icon-indeterminate-bg-size;
		}

		&:disabled:indeterminate ~ .custom-control-label::before {
			background-color: $custom-control-indicator-checked-disabled-bg;
			border-color: $custom-control-indicator-checked-disabled-border-color;
		}
	}
}

// Custom Radio

.custom-radio {
	.custom-control-input {
		&:checked ~ .custom-control-label::after {
			background-size: $custom-radio-indicator-icon-checked-bg-size;
		}

		&:disabled ~ .custom-control-label::before {
			border-color: $custom-radio-indicator-disabled-border-color;
		}

		&:disabled:checked ~ .custom-control-label::before {
			border-color: $custom-radio-indicator-checked-disabled-border-color;
		}
	}
}

// Will need to be revisited once https://github.com/twbs/bootstrap/pull/25184 is merged

.custom-control {
	padding-left: 0;

	label {
		display: inline;
		margin-bottom: 0;
	}
}

.custom-control-input {
	height: $custom-control-indicator-size;
	left: 0;
	top: (($line-height-base - $custom-control-indicator-size) / 2);
	width: $custom-control-indicator-size;
	z-index: 0;
}

.custom-control-label::before {
	display: block;
	float: left;
	position: relative;
}

.custom-control-inline {
	margin-right: 0;

	+ .custom-control-inline {
		margin-left: $custom-control-spacer-x;
	}
}
// Form Feedback

.invalid-feedback,
.valid-feedback {
	font-size: $form-feedback-font-size;
	font-weight: $form-feedback-font-weight;
}

.form-feedback-group {
	width: 100%;
	word-wrap: break-word;
}

.form-feedback-item {
	font-size: $form-feedback-font-size;
	font-weight: $form-feedback-font-weight;
	margin-top: $form-feedback-margin-top;
	word-wrap: break-word;
}

.form-feedback-indicator {
	margin-left: $form-feedback-indicator-margin-x;
	margin-right: $form-feedback-indicator-margin-x;

	&:first-child {
		margin-left: 0;
	}
}

.form-text {
	color: $form-text-color;
	font-size: $form-text-font-size;
	font-weight: $form-text-font-weight;
	word-wrap: break-word;
}

// HTML 5 Form Validator

.was-validated .form-control:valid,
.was-validated .form-control.is-valid {
	background-color: $input-success-bg;
	border-color: $input-success-border-color;
	box-shadow: $input-success-box-shadow;
	color: $input-success-color;

	&:focus {
		background-color: $input-success-focus-bg;
		border-color: $input-success-focus-border-color;
		box-shadow: $input-success-focus-box-shadow;
		color: $input-success-focus-color;
	}
}

.was-validated .form-control:invalid,
.was-validated .form-control.is-invalid {
	background-color: $input-danger-bg;
	border-color: $input-danger-border-color;
	box-shadow: $input-danger-box-shadow;
	color: $input-danger-color;

	&:focus {
		background-color: $input-danger-focus-bg;
		border-color: $input-danger-focus-border-color;
		box-shadow: $input-danger-focus-box-shadow;
		color: $input-danger-focus-color;
	}
}

// Non HTML5 Form Validator

.has-error {
	label {
		color: $input-danger-label-color;
	}

	.custom-control-label,
	.form-check-label {
		color: $input-danger-checkbox-label-color;
	}

	.form-control {
		background-color: $input-danger-bg;
		border-color: $input-danger-border-color;
		box-shadow: $input-danger-box-shadow;
		color: $input-danger-color;

		&:focus {
			background-color: $input-danger-focus-bg;
			border-color: $input-danger-focus-border-color;
			box-shadow: $input-danger-focus-box-shadow;
			color: $input-danger-focus-color;
		}
	}

	.form-feedback-item {
		color: $form-feedback-invalid-color;
	}

	select.form-control:not([multiple]):not([size]) {
		background-image: $input-danger-select-icon;
	}

	.input-group-inset-item {
		background-color: $input-danger-bg;
		border-color: $input-danger-border-color;
		box-shadow: $input-danger-box-shadow;
	}

	.form-control:focus ~ .input-group-inset-item {
		background-color: setter($input-danger-focus-bg, $input-danger-bg);
		border-color: setter($input-danger-focus-border-color, $input-danger-border-color);
		box-shadow: setter($input-danger-focus-box-shadow, $input-danger-box-shadow);
	}
}

.has-warning {
	label {
		color: $input-warning-label-color;
	}

	.custom-control-label,
	.form-check-label {
		color: $input-warning-checkbox-label-color;
	}

	.form-control {
		background-color: $input-warning-bg;
		border-color: $input-warning-border-color;
		box-shadow: $input-warning-box-shadow;
		color: $input-warning-color;

		&:focus {
			background-color: $input-warning-focus-bg;
			border-color: $input-warning-focus-border-color;
			box-shadow: $input-warning-focus-box-shadow;
			color: $input-warning-focus-color;
		}
	}

	.form-feedback-item {
		color: $form-feedback-warning-color;
	}

	select.form-control:not([multiple]):not([size]) {
		background-image: $input-warning-select-icon;
	}

	.input-group-inset-item {
		background-color: $input-warning-bg;
		border-color: $input-warning-border-color;
		box-shadow: $input-warning-box-shadow;
	}

	.form-control:focus ~ .input-group-inset-item {
		background-color: setter($input-warning-focus-bg, $input-warning-bg);
		border-color: setter($input-warning-focus-border-color, $input-warning-border-color);
		box-shadow: setter($input-warning-focus-box-shadow, $input-warning-box-shadow);
	}
}

.has-success {
	label {
		color: $input-success-label-color;
	}

	.custom-control-label,
	.form-check-label {
		color: $input-success-checkbox-label-color;
	}

	.form-control {
		background-color: $input-success-bg;
		border-color: $input-success-border-color;
		box-shadow: $input-success-box-shadow;
		color: $input-success-color;

		&:focus {
			background-color: $input-success-focus-bg;
			border-color: $input-success-focus-border-color;
			box-shadow: $input-success-focus-box-shadow;
			color: $input-success-focus-color;
		}
	}

	.form-feedback-item {
		color: $form-feedback-valid-color;
	}

	select.form-control:not([multiple]):not([size]) {
		background-image: $input-success-select-icon;
	}

	.input-group-inset-item {
		background-color: $input-success-bg;
		border-color: $input-success-border-color;
		box-shadow: $input-success-box-shadow;
	}

	.form-control:focus ~ .input-group-inset-item {
		background-color: setter($input-success-focus-bg, $input-success-bg);
		border-color: setter($input-success-focus-border-color, $input-success-border-color);
		box-shadow: setter($input-success-focus-box-shadow, $input-success-box-shadow);
	}
}
.lexicon-icon {
	display: inline-block;
	fill: currentColor;
	height: $lexicon-icon-size;
	margin-top: -3px;
	pointer-events: none;
	vertical-align: middle;
	width: $lexicon-icon-size;
}

.lexicon-icon-sm {
	font-size: $lexicon-icon-sm-font-size;
}

.lexicon-icon-lg {
	font-size: $lexicon-icon-lg-font-size;
}

.lexicon-icon-xl {
	font-size: $lexicon-icon-xl-font-size;
}

.order-arrow-down-active {
	.order-arrow-arrow-down {
		fill: $order-arrow-down-active-color;
	}
}

.order-arrow-up-active {
	.order-arrow-arrow-up {
		fill: $order-arrow-up-active-color;
	}
}

// Collapse Icon

a.collapse-icon {
	padding-left: $collapse-icon-padding-left;
	padding-right: $collapse-icon-padding-right;
}

.collapse-icon-closed,
.collapse-icon-open {
	.lexicon-icon {
		display: block;
	}
}

.collapse-icon {
	.collapse-icon-closed,
	.collapse-icon-open {
		bottom: $collapse-icon-position-bottom;
		height: 1em;
		left: $collapse-icon-position-left;
		position: absolute;
		right: $collapse-icon-position-right;
		top: $collapse-icon-position-top;
		width: 1em;

		.lexicon-icon {
			margin-top: 0;
		}
	}

	.collapse-icon-closed {
		display: none;
	}

	.collapse-icon-open {
		display: inline-block;
	}
}

.collapsed {
	.collapse-icon-closed {
		display: inline-block;
	}

	.collapse-icon-open {
		display: none;
	}
}

.collapse-icon-middle {
	.collapse-icon-closed,
	.collapse-icon-open {
		margin-top: 0;
		top: 50%;

		-ms-transform: translateY(-50%);
		transform: translateY(-50%);
	}
}
.input-group {
	.btn:hover {
		z-index: $zindex-input-group-hover;
	}

	.btn:focus,
	.form-control:focus {
		z-index: $zindex-input-group-focus;
	}

	.btn-unstyled {
		color: inherit;
	}
}

// Input Group Item

.input-group-item {
	display: flex;
	flex-grow: 1;
	flex-wrap: wrap;
	margin-left: 0.5rem;
	width: 1%;
	word-wrap: break-word;

	&:first-child {
		margin-left: 0;
	}

	> .btn {
		align-self: flex-start;
	}
}

.input-group-item-shrink {
	flex-grow: 0;
	width: auto;
}

// Input Group Prepend

.input-group-prepend {
	align-items: stretch;
	margin-right: -$input-border-left-width;

	+ .input-group-prepend,
	+ .input-group-append,
	+ .input-group-item:not(.input-group-append) {
		margin-left: 0;
	}

	+ .input-group-item:not(.input-group-append) .form-control {
		@include border-left-radius(0);
	}
}

.input-group > .input-group-prepend {
	&:not(:first-child) > .form-control {
		@include border-left-radius(0);
	}

	> .form-control {
		@include border-right-radius(0);
	}
}

.input-group-item:not(.input-group-prepend) + .input-group-prepend {
	.btn {
		@include border-left-radius($btn-border-radius);
	}

	.form-control,
	.input-group-text {
		@include border-left-radius($input-border-radius);
	}
}

// Input Group Append

.input-group-append {
	align-items: stretch;
	margin-left: -$input-border-right-width;
}

.input-group > .input-group-append {
	> .form-control {
		@include border-left-radius(0);
	}
}

// Input Group Prepend and Append Rounded Corners

.input-group > .input-group-prepend > .form-file .btn,
.input-group > .input-group-append:not(:last-child) > .form-file .btn,
.input-group > .input-group-append:last-child > .form-file:not(:last-child) .btn {
	@include border-right-radius(0);
}

.input-group > .input-group-append > .form-file .btn,
.input-group > .input-group-prepend:not(:first-child) > .form-file .btn,
.input-group > .input-group-prepend:first-child > .form-file:not(:first-child) .btn {
	@include border-left-radius(0);
}

// Input Group Text

.input-group-text {
	align-items: center;
	border-bottom-width: $input-border-bottom-width;
	border-left-width: $input-border-left-width;
	border-right-width: $input-border-right-width;
	border-top-width: $input-border-top-width;
	color: $input-group-addon-color;
	display: flex;
	font-weight: $input-group-addon-font-weight;
	height: $input-height;
	justify-content: center;
	min-width: $input-group-addon-min-width;
	padding-bottom: $input-group-addon-padding-y;
	padding-left: $input-group-addon-padding-x;
	padding-right: $input-group-addon-padding-x;
	padding-top: $input-group-addon-padding-y;

	@include clay-scale-component {
		height: $input-height-mobile;
	}

	label {
		color: $input-group-addon-color;
	}

	.custom-control,
	.form-check {
		margin-bottom: 0;
	}
}

.input-group-text-secondary {
	background-color: $input-group-secondary-addon-bg;
	border-color: $input-group-secondary-addon-border-color;
	border-width: $input-group-secondary-addon-border-width;
	color: $input-group-secondary-addon-color;
	z-index: 2;

	label {
		color: $input-group-secondary-addon-color;
	}
}

// Input Group Inset

.input-group-item.focus {
	@include border-radius($input-border-radius);

	box-shadow: $input-focus-box-shadow;

	.form-control,
	.form-control[readonly] ~ .input-group-inset-item,
	.input-group-inset-item {
		background-color: $input-focus-bg;
		border-color: $input-focus-border-color;
	}
}

.input-group-inset {
	flex-grow: 1;
	order: 5;
	width: 1%;

	&[readonly] {
		&:focus {
			~ .input-group-inset-item {
				background-color: $input-readonly-focus-bg;
				border-color: $input-readonly-focus-border-color;
				color: $input-readonly-focus-color;
			}
		}

		~ .input-group-inset-item {
			background-color: $input-readonly-bg;
			border-color: $input-readonly-border-color;
			color: $input-readonly-color;
			cursor: $input-readonly-cursor;
		}
	}

	&:focus {
		box-shadow: none;

		~ .input-group-inset-item {
			background-color: $input-focus-bg;
			border-color: $input-focus-border-color;
		}
	}

	&:disabled {
		~ .input-group-inset-item {
			background-color: $input-disabled-bg;
			border-color: $input-disabled-border-color;
		}
	}

	~ .form-feedback-group {
		order: 13;
	}
}

.input-group-inset-item {
	align-items: center;
	background-color: $input-bg;
	border-bottom-width: $input-border-bottom-width;
	border-color: $input-border-color;
	border-left-width: $input-border-left-width;
	border-right-width: $input-border-right-width;
	border-style: solid;
	border-top-width: $input-border-top-width;
	display: flex;
	padding-left: 5px;
	padding-right: 5px;
	transition: $input-transition;

	.btn {
		height: 75%;
		padding-bottom: 0;
		padding-top: 0;
		padding-left: ($btn-padding-x - 0.1875rem);
		padding-right: ($btn-padding-x - 0.1875rem);
	}
}

.input-group-item .input-group-inset-before.form-control {
	@include border-left-radius(0);
	@include border-right-radius($input-border-radius);

	border-left-width: 0;
	padding-left: 0;
}

.input-group-inset-item-before {
	@include border-left-radius($input-border-radius);

	border-right-width: 0;
}

.input-group-inset-item-before {
	color: $input-group-inset-item-color;
	order: 3;
}

.input-group-item .input-group-inset-after.form-control {
	@include border-right-radius(0);

	border-right-width: 0;
	padding-right: 0;
}

.input-group-inset-item-after {
	@include border-right-radius($input-border-radius);

	border-left-width: 0;
	color: $input-group-inset-item-color;
	order: 9;
}

// Input Group Stacked

.input-group-stacked-sm-down {
	@include clay-input-group-stacked($input-group-stacked-sm-down);
}

// Input Group Sizes

.input-group-lg {
	.input-group-item {
		.btn {
			font-size: $btn-font-size-lg;

			@include clay-scale-component {
				font-size: $btn-font-size-lg-mobile;
				padding-bottom: $btn-padding-y-lg-mobile;
				padding-left: $btn-padding-x-lg-mobile;
				padding-right: $btn-padding-x-lg-mobile;
				padding-top: $btn-padding-y-lg-mobile;
			}

			.inline-item {
				font-size: $btn-inline-item-font-size-lg;
			}

			.btn-section {
				font-size: $btn-section-font-size-lg;
			}
		}

		.btn-monospaced {
			height: $btn-monospaced-size-lg;
			line-height: 1;
			padding-bottom: $btn-monospaced-padding-y-lg;
			padding-left: $btn-monospaced-padding-x-lg;
			padding-right: $btn-monospaced-padding-x-lg;
			padding-top: $btn-monospaced-padding-y-lg;
			width: $btn-monospaced-size-lg;

			@include clay-scale-component {
				height: $btn-monospaced-size-lg-mobile;
				width: $btn-monospaced-size-lg-mobile;
			}
		}

		.form-control,
		.form-file .btn {
			font-size: $input-font-size-lg;
			height: $input-height-lg;
			line-height: $input-line-height-lg;
			padding-bottom: $input-padding-y-lg;
			padding-left: $input-padding-x-lg;
			padding-right: $input-padding-x-lg;
			padding-top: $input-padding-y-lg;

			@include clay-scale-component {
				height: $input-height-lg-mobile;
			}
		}

		.form-control-plaintext {
			font-size: $input-font-size-lg;
			height: $input-height-lg;
			line-height: $input-line-height-lg;
			padding-bottom: $input-padding-y-lg;
			padding-top: $input-padding-y-lg;

			@include clay-scale-component {
				height: $input-height-lg-mobile;
			}
		}

		.input-group-text {
			font-size: $input-font-size-lg;
			height: $input-height-lg;
			min-width: $input-group-addon-min-width-lg;
			padding-bottom: $input-group-addon-padding-y-lg;
			padding-left: $input-group-addon-padding-x-lg;
			padding-right: $input-group-addon-padding-x-lg;
			padding-top: $input-group-addon-padding-y-lg;
		}
	}

	.input-group-inset-item {
		.btn {
			font-size: $btn-font-size-lg;

			@include clay-scale-component {
				font-size: $btn-font-size-lg-mobile;
			}
		}

		.form-file {
			height: 75%;

			.btn {
				font-size: $btn-font-size-lg;
				height: 100%;
				padding-bottom: 0;
				padding-top: 0;
				padding-left: ($btn-padding-x - 0.1875rem);
				padding-right: ($btn-padding-x - 0.1875rem);

				@include clay-scale-component {
					font-size: $btn-font-size-lg-mobile;
				}
			}
		}
	}
}

.input-group-sm {
	.input-group-item {
		.btn {
			font-size: $btn-font-size-sm;

			@include clay-scale-component {
				font-size: $btn-font-size-sm-mobile;
				padding-bottom: $btn-padding-y-sm-mobile;
				padding-left: $btn-padding-x-sm-mobile;
				padding-right: $btn-padding-x-sm-mobile;
				padding-top: $btn-padding-y-sm-mobile;
			}

			.inline-item {
				font-size: $btn-inline-item-font-size-sm;
			}

			.btn-section {
				font-size: $btn-section-font-size-sm;
			}
		}

		.btn-monospaced {
			height: $btn-monospaced-size-sm;
			line-height: 1;
			padding-bottom: $btn-monospaced-padding-y-sm;
			padding-left: $btn-monospaced-padding-x-sm;
			padding-right: $btn-monospaced-padding-x-sm;
			padding-top: $btn-monospaced-padding-y-sm;
			width: $btn-monospaced-size-sm;

			@include clay-scale-component {
				height: $btn-monospaced-size-sm-mobile;
				width: $btn-monospaced-size-sm-mobile;
			}
		}

		.form-control,
		.form-file .btn {
			font-size: $input-font-size-sm;
			height: $input-height-sm;
			line-height: $input-line-height-sm;
			padding-bottom: $input-padding-y-sm;
			padding-left: $input-padding-x-sm;
			padding-right: $input-padding-x-sm;
			padding-top: $input-padding-y-sm;

			@include clay-scale-component {
				height: $input-height-sm-mobile;
			}
		}

		.form-control-plaintext {
			font-size: $input-font-size-sm;
			height: $input-height-sm;
			line-height: $input-line-height-sm;
			padding-bottom: $input-padding-y-sm;
			padding-top: $input-padding-y-sm;

			@include clay-scale-component {
				height: $input-height-sm-mobile;
			}
		}

		.input-group-text {
			font-size: $input-font-size-sm;
			height: $input-height-sm;
			min-width: $input-group-addon-min-width-sm;
			padding-bottom: $input-group-addon-padding-y-sm;
			padding-left: $input-group-addon-padding-x-sm;
			padding-right: $input-group-addon-padding-x-sm;
			padding-top: $input-group-addon-padding-y-sm;
		}
	}

	.input-group-inset-item {
		.btn {
			font-size: $btn-font-size-sm;

			@include clay-scale-component {
				font-size: $btn-font-size-sm-mobile;
			}
		}

		.form-file {
			height: 75%;

			.btn {
				font-size: $btn-font-size-sm;
				height: 100%;
				padding-bottom: 0;
				padding-top: 0;
				padding-left: ($btn-padding-x - 0.1875rem);
				padding-right: ($btn-padding-x - 0.1875rem);

				@include clay-scale-component {
					font-size: $btn-font-size-sm-mobile;
				}
			}
		}
	}
}

// Input Group Password

.input-group-password {
	.form-control[type="text"] ~ .input-group-inset-item {
		.input-password-label {
			display: none;
		}
	}

	.form-control[type="password"] ~ .input-group-inset-item {
		.input-text-label {
			display: none;
		}
	}
}
.list-group {
	@include border-radius($list-group-border-radius);
	@include box-shadow($list-group-box-shadow);

	color: $list-group-color;
	font-size: $list-group-font-size;
	margin-bottom: $list-group-margin-bottom;
	margin-top: $list-group-margin-top;

	.list-group {
		@if ($list-group-box-shadow != null) {
			@include box-shadow(none);
		}
	}
}

.list-group-bordered {
	.list-group-item-flex {
		padding: 0;

		&.active {
			.autofit-col {
				border-color: $list-group-active-border-color;
			}
		}
	}

	.autofit-col {
		border-left: $list-group-border-width solid $list-group-border-color;
		border-right: $list-group-border-width solid $list-group-border-color;
		margin-left: -$list-group-border-width;
		padding: $list-group-item-padding-y $list-group-item-padding-x;

		&:first-child,
		&:last-child {
			border-left-width: 0;
			border-right-width: 0;
			margin-left: 0;
		}
	}
}

// List Group Header

.list-group-header {
	align-items: center;
	background-color: $list-group-header-bg;
	border: $list-group-border-width solid $list-group-border-color;
	display: flex;
	justify-content: space-between;
	margin-bottom: -$list-group-border-width;
	padding: $list-group-header-padding-y $list-group-header-padding-x;

	&:first-child {
		@include border-top-radius($list-group-border-radius);
	}

	&:last-child {
		@include border-bottom-radius($list-group-border-radius);
	}
}

.list-group-header-title {
	@include clay-text-typography($list-group-header-title);
}

// List Group Title

.list-group-title {
	@include clay-text-typography($list-group-title);
}

// List Group Subtitle

.list-group-subtitle {
	@include clay-text-typography($list-group-subtitle);
}

// List Group Text

.list-group-text {
	@include clay-text-typography($list-group-text);
}

// List Group Subtext

.list-group-subtext {
	@include clay-text-typography($list-group-subtext);
}

// List Group Details

.list-group-detail {
	margin-bottom: $list-group-detail-margin-bottom;
	margin-top: $list-group-detail-margin-top;
}

// List Group Item

.show-dropdown-action-on-active {
	.list-group-item.active {
		.dropdown-action {
			.dropdown-menu {
				background-color: $list-group-active-bg;
			}

			.dropdown-item {
				color: $list-group-active-color;
			}
		}
	}
}

.list-group-item {
	&.active {
		&:focus,
		&.focus {
			z-index: 2;
		}

		.dropdown-action .dropdown-toggle,
		.list-group-link {
			color: $list-group-active-color;
		}

		.list-group-title,
		a.list-group-title,
		.list-group-title a {
			color: $list-group-title-active-color;
		}

		.list-group-text,
		a.list-group-text,
		.list-group-text a {
			color: $list-group-text-active-color;
		}

		.list-group-subtext,
		a.list-group-subtext,
		.list-group-subtext a {
			color: $list-group-subtext-active-color;
		}

		.list-group-link {
			color: $list-group-link-active-color;
		}
	}
}

.list-group-item-flex {
	display: flex;
	padding-left: $list-group-item-padding-x / 2;
	padding-right: $list-group-item-padding-x / 2;

	.autofit-col {
		justify-content: $list-group-item-flex-align-items;
		padding-left: $list-group-item-padding-x / 2;
		padding-right: $list-group-item-padding-x / 2;

		.custom-control:only-child {
			margin-bottom: 0;
			margin-top: $list-group-item-flex-offset-top;

			.custom-control-input,
			.custom-control-label::before,
			.custom-control-label::after {
				margin-top: $list-group-item-flex-checkbox-offset-top;
			}
		}

		.form-check:only-child {
			margin-bottom: 0;
			margin-top: $list-group-item-flex-offset-top;
			padding-top: $list-group-item-flex-checkbox-offset-top;
		}

		.sticker:only-child {
			margin-top: $list-group-item-flex-offset-top;
		}

		.list-group-title:only-child {
			align-items: center;
			display: flex;
			height: 32px;
			margin-top: 0;
		}

		.dropdown-action {
			margin-top: $list-group-item-flex-offset-top;
		}

		.quick-action-item {
			margin-top: $list-group-item-flex-offset-top;
		}
	}
}

.list-group-item-action:focus {
	z-index: 1;
}

// List Group Link

.list-group-link {
	color: $list-group-link-color;

	&:hover,
	&:focus {
		color: $list-group-link-hover-color;
	}
}

// List Group Flush

%list-group-flush {
	.list-group-item {
		border-left-width: 0;

		@include border-radius(0);

		border-right-width: 0;

		> .autofit-col {
			&:first-child {
				padding-left: 0;
			}

			&:last-child {
				padding-right: 0;
			}
		}
	}
}

%list-group-flush-vertical {
	.list-group-item {
		border-left-width: 0;

		@include border-radius(0);

		border-right-width: 0;

		> .autofit-col {
			&:first-child {
				padding-left: 0;
			}

			&:last-child {
				padding-right: 0;
			}
		}
	}

	&:first-child {
		.list-group-item:first-child {
			border-top-width: 0;
		}
	}

	&:last-child {
		.list-group-item:last-child {
			border-bottom-width: 0;
		}
	}
}

// Show Quick Action

.show-quick-actions-on-hover {
	.list-group-item:not(.active) {
		&:hover {
			.quick-action-menu {
				display: flex;
			}
		}
	}

	.focus:not(.active) {
		.quick-action-menu {
			display: flex;
		}
	}
}

.list-group {
	.quick-action-menu {
		align-items: $list-group-item-flex-align-items;
		background-color: $list-group-bg;
		margin-bottom: -$list-group-item-padding-y;
		margin-top: -$list-group-item-padding-y;
		padding-bottom: $list-group-item-padding-y;
		padding-top: $list-group-item-padding-y;
	}
}

.list-group-bordered .quick-action-menu {
	margin-bottom: 0;
	margin-top: 0;
	padding-bottom: $list-group-item-padding-y;
	padding-top: $list-group-item-padding-y;
}

.list-group-item-flex.active {
	.quick-action-menu {
		background-color: $list-group-active-bg;
	}

	.quick-action-item {
		color: $list-group-active-color;
	}
}

// List Group Notification

.list-group-notification {
	&.list-group-bordered {
		.quick-action-menu {
			margin-bottom: $list-group-notification-item-border-bottom-width;
			margin-top: $list-group-notification-item-border-top-width;
		}
	}

	.list-group-item {
		border-width: 0;

		@include clay-list-group-notification-item-variant($list-group-notification-item);
	}

	.list-group-item-primary {
		@include clay-list-group-notification-item-variant($list-group-notification-item-primary);
	}

	.quick-action-menu {
		margin-bottom: -$list-group-item-padding-y + $list-group-notification-item-border-bottom-width;
		margin-top: -$list-group-item-padding-y + $list-group-notification-item-border-top-width;
	}

	.autofit-col .quick-action-item {
		margin-top: $list-group-notification-item-border-top-width - $list-group-item-flex-offset-top;
	}
}
.modal-content {
	@if not ($modal-content-border-radius == $border-radius-lg) {
		@include border-radius($modal-content-border-radius);
	}

	overflow: hidden;
}

.modal-header {
	align-items: center;
	background-color: $modal-header-bg;
	border-color: $modal-header-border-color;
	color: $modal-header-color;
	flex-shrink: 0;
	height: $modal-header-height;
	padding-bottom: 0;
	padding-top: 0;

	@include clay-scale-component {
		height: $modal-header-height-mobile;
	}

	.close {
		margin: 0;
		padding: 0;
	}
}

.modal-body {
	background-color: $modal-body-bg;
	color: $modal-body-color;

	&.inline-scroller {
		-webkit-overflow-scrolling: touch;
		overflow: auto;
		padding: $modal-inner-padding;
	}
}

.modal-body-flush {
	padding: 0;
}

.modal-footer {
	background-color: $modal-footer-bg;

	@include box-shadow($modal-footer-box-shadow);

	color: $modal-footer-color;
	flex-shrink: 0;
	flex-wrap: wrap;
	height: $modal-footer-height;
	padding-bottom: $modal-footer-padding-y;
	padding-left: $modal-footer-padding-x;
	padding-right: $modal-footer-padding-x;
	padding-top: $modal-footer-padding-y;

	@include clay-scale-component {
		height: $modal-footer-height-mobile;
	}
}

// Modal Item

.modal-item-first,
.modal-item,
.modal-item-last {
	padding-bottom: $modal-item-padding-y;
	padding-left: $modal-item-padding-x;
	padding-right: $modal-item-padding-x;
	padding-top: $modal-item-padding-y;
}

.modal-item-first {
	margin-right: auto;
}

.modal-item {
	flex-grow: 1;
}

.modal-footer {
	> .modal-item-first {
		margin-right: auto;
	}
}

// Modal Title

.modal-title {
	font-size: $modal-title-font-size;
	font-weight: $modal-title-font-weight;
	flex-grow: 1;
	text-align: $modal-title-text-align;

	@include text-truncate;

	@include clay-scale-component {
		font-size: $modal-title-font-size-mobile;
	}
}

.modal-title-indicator {
	display: inline-block;
	font-size: $modal-title-indicator-font-size;
	margin-right: $modal-title-indicator-spacer-x;
	margin-top: -0.2em;
	vertical-align: middle;
}

// Modal Close

.modal .close {
	&:first-child {
		margin-left: -$modal-close-spacer-x;
	}

	&:last-child {
		margin-right: -$modal-close-spacer-x;
	}
}

.close + .modal-title {
	margin-left: $modal-close-spacer-x;
}

.modal-title + .close {
	margin-right: $modal-close-spacer-x;
}

// Modal Iframe

.modal-body-iframe {
	height: 160px;
	padding: 0;

	iframe {
		border-width: 0;
		height: 100%;
		position: absolute;
		width: 100%;
	}
}

// Modal Full Screen

.modal-full-screen {
	bottom: 48px;
	left: 48px;
	margin: 0;
	max-width: none;
	position: absolute;
	right: 48px;
	top: 48px;

	@include clay-scale-component {
		bottom: 0;
		left: 0;
		right: 0;
		top: 0;
	}

	.modal-content {
		border-color: $modal-content-border-color;

		@include border-radius($modal-content-border-radius);

		border-width: $modal-content-border-width;
		height: 100%;

		@include clay-scale-component {
			@include border-radius(0);

			border-width: 0;
		}
	}

	.modal-body {
		overflow: auto;
	}
}

// Modal Responsive Full Screen

.modal-full-screen-sm-down {
	@include media-breakpoint-down(sm) {
		bottom: 0;
		left: 0;
		margin: 0;
		max-width: none;
		position: absolute;
		right: 0;
		top: 0;

		.modal-body {
			overflow: auto;
		}

		.modal-content {
			@include border-radius(0);

			border-width: 0;
			height: 100%;
		}
	}
}

// Modal Variants

@each $color, $value in $modal-palette {
	.modal-#{$color} {
		@include clay-modal-variant($value);
	}
}
.multi-step-nav {
	align-items: flex-end;
	display: flex;
	flex-wrap: wrap;
	list-style: none;
	margin-bottom: $multi-step-nav-margin-bottom;
	padding: $multi-step-nav-padding-y $multi-step-nav-padding-x;
	position: relative;
}

.multi-step-indicator-label-bottom {
	.multi-step-item {
		padding-bottom: $multi-step-indicator-label-font-size * $line-height-base;
	}

	.multi-step-indicator-label {
		top: $multi-step-icon-size;
	}
}

.multi-step-indicator-label-top {
	.multi-step-item {
		padding-top: $multi-step-indicator-label-font-size * $line-height-base;
	}

	.multi-step-indicator-label {
		bottom: $multi-step-icon-size + $multi-step-divider-height;
	}
}

.multi-step-title-center {
	.multi-step-title {
		margin-left: $multi-step-icon-size / 2;
		max-width: $multi-step-title-max-width;
		overflow: hidden;
		position: relative;
		text-align: center;
		text-overflow: ellipsis;
		transform: translateX(-50%);
		white-space: nowrap;
		width: auto;
	}
}

.multi-step-item {
	margin-bottom: $multi-step-item-margin-bottom;
	position: relative;

	&.active {
		.multi-step-icon {
			background-color: $multi-step-icon-active-bg;
			background-image: $multi-step-icon-active-bg-image;
			background-position: $multi-step-icon-active-bg-position;
			background-repeat: no-repeat;
			background-size: $multi-step-icon-active-bg-size;
			color: $multi-step-icon-active-color;

			@if ($multi-step-icon-active-bg-image) {
				&[data-multi-step-icon] {
					&:before {
						content: normal;
					}
				}
			}
		}

		.multi-step-divider {
			background-color: $multi-step-divider-active-bg;
		}
	}

	&.active.complete {
		.multi-step-icon {
			background-color: $multi-step-icon-active-bg;
			color: $multi-step-icon-active-color;
		}
	}

	&.complete {
		.dropdown .multi-step-icon {
			&, &:active {
				background-image: none;
			}
		}

		.multi-step-icon {
			background-color: $multi-step-icon-complete-bg;
			color: $multi-step-icon-complete-color;

			@if ($multi-step-icon-complete-bg-image) {
				background-image: $multi-step-icon-complete-bg-image;
				background-position: $multi-step-icon-complete-bg-position;
				background-repeat: no-repeat;
				background-size: $multi-step-icon-complete-bg-size;

				&[data-multi-step-icon] {
					&:before {
						content: normal;
					}
				}

				// BS4 resets background-image in buttons https://github.com/twbs/bootstrap/issues/23353
				&:active {
					background-image: $multi-step-icon-complete-bg-image;
				}
			}
		}

		.multi-step-divider {
			background-color: $multi-step-divider-complete-bg;
		}
	}

	&.disabled {
		.multi-step-title {
			color: $multi-step-title-disabled-color;
		}

		.multi-step-icon {
			background-color: $multi-step-icon-disabled-bg;
			background-image: $multi-step-icon-disabled-bg-image;
			background-position: $multi-step-icon-disabled-bg-position;
			background-repeat: no-repeat;
			background-size: $multi-step-icon-disabled-bg-size;
			color: $multi-step-icon-disabled-color;
			cursor: $multi-step-icon-disabled-cursor;

			@if ($multi-step-icon-disabled-bg-image) {
				&[data-multi-step-icon] {
					&:before {
						content: normal;
					}
				}
			}
		}

		.multi-step-indicator-label {
			color: $multi-step-indicator-label-disabled-color;
		}

		.multi-step-divider {
			background-color: $multi-step-divider-disabled-bg;
		}
	}
}

.multi-step-title {
	color: $multi-step-title-color;
	font-size: $multi-step-title-font-size;
	font-weight: $multi-step-title-font-weight;
	line-height: normal;
	margin-bottom: $multi-step-title-margin-bottom;
	word-wrap: break-word;
}

.multi-step-item-expand {
	flex-grow: 1;
	width: $multi-step-item-width;
}

.multi-step-divider {
	background-color: $multi-step-divider-bg;
	height: $multi-step-divider-height;
	margin-left: $multi-step-icon-size;
	margin-top: -$multi-step-divider-height;
	position: relative;
	top: $multi-step-divider-top;
}

.multi-step-indicator {
	position: relative;
	width: $multi-step-indicator-width;

	.dropdown-item-indicator,
	.dropdown-item-indicator-start,
	.dropdown-item-indicator-end {
		display: none;
	}

	.complete {
		.dropdown-item-indicator,
		.dropdown-item-indicator-start,
		.dropdown-item-indicator-end {
			display: block;
		}
	}

	.multi-step-indicator-label {
		color: $multi-step-indicator-label-color;
		font-size: $multi-step-indicator-label-font-size;
		font-weight: $multi-step-indicator-label-font-weight;
		left: 50%;
		max-width: $multi-step-indicator-label-max-width;
		position: absolute;
		transform: translateX(-50%);

		@include text-truncate;
	}
}

button.multi-step-icon {
	cursor: pointer;
	border-width: 0;
	padding: 0;

	&:hover,
	&:focus {
		background-color: $multi-step-icon-hover-bg;
		color: $multi-step-icon-hover-color;
		text-decoration: $multi-step-icon-hover-text-decoration;
	}
}

a.multi-step-icon {
	&:hover,
	&:focus {
		background-color: $multi-step-icon-hover-bg;
		color: $multi-step-icon-hover-color;
		text-decoration: $multi-step-icon-hover-text-decoration;
	}
}

.multi-step-icon {
	align-items: center;
	background-color: $multi-step-icon-bg;
	border-radius: $multi-step-icon-border-radius;
	color: $multi-step-icon-color;
	display: flex;
	font-size: $multi-step-icon-font-size;
	font-weight: $multi-step-icon-font-weight;
	justify-content: center;
	height: $multi-step-icon-size;
	width: $multi-step-icon-size;

	&[data-multi-step-icon]:before {
		content: attr(data-multi-step-icon);
		height: $multi-step-icon-size;
		line-height: $multi-step-icon-size;
		text-align: center;
		width: $multi-step-icon-size;
	}

	.btn-link {
		vertical-align: baseline;
	}

	.lexicon-icon {
		height: $multi-step-icon-font-size;
		margin-top: 0;
		width: $multi-step-icon-font-size;
	}
}

.multi-step-item-fixed-width {
	&.multi-step-item,
	.multi-step-item-expand {
		flex-grow: 0;
		width: $multi-step-item-fixed-width;
	}
}

.multi-step-nav-collapse-sm {
	@include media-breakpoint-down(sm) {
		flex-wrap: nowrap;

		&.multi-step-indicator-label-top {
			.multi-step-indicator-label {
				bottom: auto;
				top: 0;
			}
		}

		&.multi-step-indicator-label-bottom {
			.multi-step-indicator-label {
				bottom: 0;
				top: auto;
			}
		}

		&.multi-step-title-center {
			.multi-step-title {
				margin-left: 0;
				max-width: none;
				transform: none;
			}
		}

		.active {
			&.multi-step-item {
				position: static;
			}

			.multi-step-title {
				display: block;
				left: 0;
				position: absolute;
				right: 0;
				text-align: center;
				top: 0;

				+ .multi-step-indicator {
					margin-top: calc(1rem * #{$line-height-base});
				}
			}

			.multi-step-indicator {
				position: static;
			}

			.multi-step-indicator-label {
				display: block;
				left: 0;
				max-width: none;
				position: absolute;
				right: 0;
				text-align: center;
				transform: none;
				width: auto;
			}
		}

		.multi-step-item {
			margin-bottom: 0;
			min-width: $multi-step-icon-size;
			padding-top: $multi-step-title-font-size + $multi-step-title-margin-bottom + ($multi-step-divider-height / 2);
		}

		.multi-step-title {
			display: none;
		}

		.multi-step-indicator-label {
			display: none;
		}
	}
}
.nav {
	font-size: $nav-font-size;
}

.nav-btn.btn-unstyled,
.nav-link {
	position: relative;

	&:focus {
		z-index: 1;
	}

	&.disabled {
		color: $nav-link-disabled-color;
		cursor: $nav-link-disabled-cursor;
	}
}

// Nav Btn

.nav-btn {
	align-items: center;
	display: flex;
	height: $nav-item-monospaced-size;
	justify-content: center;
	line-height: $line-height-base;
	margin: $nav-btn-margin-y $nav-btn-margin-x;
	min-width: $nav-item-monospaced-size;
	padding-bottom: $nav-btn-padding-y;
	padding-left: $nav-btn-padding-x;
	padding-right: $nav-btn-padding-x;
	padding-top: $nav-btn-padding-y;
	text-align: center;
	width: auto;

	&.btn-link {
		margin-left: 0;
		margin-right: 0;
	}

	.lexicon-icon {
		margin-top: 0;
	}
}

.nav-btn,
.nav-link {
	&.disabled {
		opacity: 1;
	}
}

.nav-link.btn-unstyled {
	padding: $nav-link-padding-y $nav-link-padding-x;
}

// Nav Item Monospaced

.nav-btn-monospaced {
	padding: 0;
}

.nav-link-monospaced {
	align-items: center;
	display: flex;
	height: $nav-item-monospaced-size;
	justify-content: center;
	margin: $nav-btn-margin-y $nav-btn-margin-x;
	min-width: $nav-item-monospaced-size;
	padding: 0;

	.lexicon-icon {
		margin-top: 0;
	}
}

// Nav Item

.nav-item {
	word-wrap: break-word;
}

.nav-item[class*='col-'] {
	padding-left: 0;
	padding-right: 0;
	text-align: center;
}

.nav-text-truncate {
	display: inline-block;
	margin-bottom: -6px;
	max-width: 100%;

	@include text-truncate;
}

.dropdown-toggle .nav-text-truncate {
	max-width: calc(100% - 24px);
}

// Nav Form

.nav-form {
	padding-bottom: $nav-stacked-nav-form-padding-bottom;
	padding-left: $nav-stacked-nav-form-padding-left;
	padding-right: $nav-stacked-nav-form-padding-right;
	padding-top: $nav-stacked-nav-form-padding-top;
}

.nav .nav-form {
	padding-bottom: $nav-form-padding-bottom;
	padding-left: $nav-form-padding-left;
	padding-right: $nav-form-padding-right;
	padding-top: $nav-form-padding-top;
}

// Nav Stacked

.nav-stacked {
	display: block;

	.nav-form {
		padding-bottom: $nav-stacked-nav-form-padding-bottom;
		padding-left: $nav-stacked-nav-form-padding-left;
		padding-right: $nav-stacked-nav-form-padding-right;
		padding-top: $nav-stacked-nav-form-padding-top;
	}
}

// Nav Unstyled

.nav-unstyled {
	flex-wrap: nowrap;

	.nav-btn {
		margin: 0 0.25rem;
		padding: 0 0.25rem;
	}

	.nav-link {
		line-height: $nav-item-monospaced-size;
		padding: 0 0.25rem;
	}

	.nav-link-monospaced {
		margin: 0 0.25rem;
	}
}

// Nav Nested

.nav-nested {
	flex-direction: column;
	flex-wrap: nowrap;

	@include clay-nav-nested($nav-nested-spacer-x);
}

.nav-nested-margins {
	flex-direction: column;
	flex-wrap: nowrap;

	> li .nav > li {
		margin-left: $nav-nested-margins-spacer-x;
	}
}

// Nav Tabs

.nav-tabs {
	font-size: $nav-tabs-font-size;

	.nav-item.show .nav-link {
		background-color: $nav-tabs-link-show-bg;
		border-color: $nav-tabs-link-show-border-color;
		color: $nav-tabs-link-show-color;
	}

	.nav-link {
		color: $nav-tabs-link-color;
		padding-bottom: $nav-tabs-link-padding-y;
		padding-left: $nav-tabs-link-padding-x;
		padding-right: $nav-tabs-link-padding-x;
		padding-top: $nav-tabs-link-padding-y;
		white-space: nowrap;
	}

	+ .tab-content {
		.tab-pane {
			background-color: $nav-tabs-tab-pane-bg;

			@include border-radius($nav-tabs-tab-pane-border-radius);

			padding: $nav-tabs-tab-pane-padding;

			&.active:first-child {
				border-top-left-radius: 0;
			}
		}
	}
}

.dropdown-item[data-toggle="tab"] {
	.dropdown-item-indicator,
	.dropdown-item-indicator-start,
	.dropdown-item-indicator-end {
		display: none;
	}

	&.active {
		.dropdown-item-indicator,
		.dropdown-item-indicator-start,
		.dropdown-item-indicator-end {
			display: block;
		}
	}
}

// Nav Underline

@each $value in $nav-underline-link-highlight-palette {
	$index: index($nav-underline-link-highlight-palette, $value);

	.nav-underline .nav-item:nth-of-type(#{$index}n + 0) {
		.nav-link::after {
			background-color: nth($nav-underline-link-highlight-palette, $index);
		}
	}
}

.nav-underline {
	font-size: $nav-underline-font-size;

	.nav-link {
		color: $nav-underline-link-color;
		padding: $nav-underline-link-padding-y $nav-underline-link-padding-x;

		&:hover,
		&:focus {
			color: $nav-underline-link-hover-color;
		}

		&:after {
			bottom: $nav-underline-link-highlight-bottom;
			content: $nav-underline-link-highlight-content;
			display: block;
			height: $nav-underline-link-highlight-height;
			position: absolute;
			left: $nav-underline-link-highlight-left;
			right: $nav-underline-link-highlight-right;
			top: $nav-underline-link-highlight-top;
			width: auto;
		}
	}

	.nav-item .nav-link.active:after {
		background-color: $nav-underline-link-active-highlight;
	}

	.nav-link.active,
	.nav-item.show .nav-link {
		color: $nav-underline-link-active-color;

		&:after {
			@if not ($nav-underline-link-active-content == $nav-underline-link-highlight-content) {
				content: $nav-underline-link-active-content;
			}

			@if not ($nav-underline-link-active-highlight-height == $nav-underline-link-highlight-height) {
				height: $nav-underline-link-active-highlight-height;
			}
		}
	}

	.nav-item .nav-link.disabled:after {
		background-color: $nav-underline-link-disabled-highlight;
	}

	.nav-link.disabled {
		color: $nav-underline-link-disabled-color;
	}
}
.menubar {
	position: relative;
}

.menubar-toggler {
	@extend %btn-unstyled;

	display: none;
}

// Menubar Vertical MD

.menubar-vertical-expand-md {
	@include clay-menubar-vertical-expand($menubar-vertical-expand-md);

	&.menubar-transparent {
		@include clay-menubar-vertical-variant($menubar-vertical-transparent-md);
	}
}

// Menubar Vertical LG

.menubar-vertical-expand-lg {
	@include clay-menubar-vertical-expand($menubar-vertical-expand-lg);

	&.menubar-transparent {
		@include clay-menubar-vertical-variant($menubar-vertical-transparent-lg);
	}
}
// Navbar

.navbar {
	border-width: 0;
	font-size: $navbar-font-size;

	.container,
	.container-fluid {
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
	}
}

.navbar-nowrap {
	flex-wrap: nowrap;

	.container,
	.container-fluid,
	.navbar-nav {
		flex-wrap: nowrap !important;
	}

	.navbar-text {
		min-width: 0;
		white-space: nowrap;
	}
}

.navbar-nav,
.navbar-form {
	.dropdown-menu-right {
		left: auto;
		right: 0;
	}
}

.navbar-nav {
	flex-direction: row;

	.dropdown-menu {
		position: absolute;
	}

	.nav-link {
		padding-left: $navbar-nav-link-padding-x;
		padding-right: $navbar-nav-link-padding-x;
	}
}

.navbar-nav-expand {
	flex-grow: 1;
	min-width: 0;
}

.navbar-nav-last {
	margin-left: auto;
}

.navbar-nav .nav-item {
	word-wrap: normal;

	> .custom-control,
	> .form-check {
		margin-bottom: 0;
		margin-left: $navbar-nav-link-padding-x;
		margin-right: $navbar-nav-link-padding-x;
	}
}

.nav-item-expand {
	flex-grow: 1;
	min-width: 0;
}

.nav-item-shrink {
	min-width: 0;
}

.navbar-title {
	font-size: $navbar-title-font-size;
	font-weight: $navbar-title-font-weight;
	margin-bottom: $navbar-title-margin-bottom;
	text-transform: $navbar-title-text-transform;
}

.navbar-text {
	padding-left: 0.5rem;
	padding-right: 0.5rem;
}

.navbar-collapse {
	max-width: 100%;

	.navbar-nav {
		flex-direction: column;
	}

	.dropdown-toggle .navbar-text-truncate {
		max-width: calc(100% - #{$navbar-text-truncate-spacer-right});
	}
}

.navbar-text-truncate {
	display: inline-block;
	max-width: 100%;
	pointer-events: none;

	@include text-truncate;

	vertical-align: bottom;
}

// Navbar Toggler

.navbar-toggler {
	&:focus {
		z-index: $zindex-navbar-toggler-focus;
	}

	&:not(:disabled):not(.disabled) {
		cursor: $navbar-toggler-cursor;
	}
}

.navbar-toggler-link {
	align-items: center;
	display: flex;
	border-width: 0;
	line-height: $line-height-base;
	max-width: 100%;
	padding: $navbar-brand-padding-y $navbar-nav-link-padding-x;
	position: relative;

	.lexicon-icon {
		min-width: 1em;
		margin-left: 3px;
		margin-top: 0;
	}
}

// Navbar Brand

.navbar-brand {
	margin-right: 0;
	max-width: calc(100% - 72px);
	padding-left: $navbar-nav-link-padding-x;
	padding-right: $navbar-nav-link-padding-x;
}

// Navbar Form

.navbar-form {
	align-items: center;
	display: flex;
	padding-left: $navbar-nav-link-padding-x;
	padding-right: $navbar-nav-link-padding-x;

	> form {
		width: 100%;
	}
}

.navbar-form-autofit {
	flex-basis: 100px;
	flex-grow: 1;

	form {
		display: flex;
		width: 100%;
	}
}

// Navbar Overlay

.navbar-overlay {
	background-color: $body-bg;
}

// Navbar Display Utilities

.navbar-breakpoint-d-block,
.navbar-breakpoint-d-inline-block,
.navbar-breakpoint-d-flex {
	display: none !important;
}

// Navbar Expand

.navbar-expand {
	flex-wrap: wrap;
	justify-content: space-between;

	.navbar-nav {
		flex-wrap: wrap;
	}

	@each $breakpoint in map-keys($grid-breakpoints) {
		$next: breakpoint-next($breakpoint, $grid-breakpoints);
		$infix: breakpoint-infix($next, $grid-breakpoints);

		&#{$infix} { // .navbar-expand, sm, md, lg, xl
			justify-content: space-between;

			.nav-item {
				align-items: center;
				display: flex;
			}

			.nav-item .navbar-text-truncate {
				max-width: $navbar-text-truncate-max-width;
			}

			.container,
			.container-fluid {
				display: flex;
				flex-wrap: wrap;
				justify-content: space-between;
				padding-left: $grid-gutter-width / 2;
				padding-right: $grid-gutter-width / 2;
			}

			.navbar-collapse {
				.container,
				.container-fluid {
					padding-left: 0;
					padding-right: 0;
				}
			}

			@if not ($infix == '') { // .navbar-expand-sm, md, lg, xl
				@include media-breakpoint-down($breakpoint) {
					&.navbar-collapse-absolute {
						.navbar-collapse {
							left: 0;
							padding: 0 $navbar-padding-x;
							position: absolute;
							right: 0;
							top: 100%;
							z-index: $zindex-navbar-collapse-absolute;

							.container,
							.container-fluid {
								padding-left: $grid-gutter-width / 2;
								padding-right: $grid-gutter-width / 2;
							}

							.navbar-nav,
							.navbar-form {
								&:last-child {
									padding-bottom: $navbar-padding-y;
								}
							}
						}
					}

					.navbar-collapse {
						.container,
						.container-fluid {
							display: block;
							padding-left: 0;
							padding-right: 0;
						}

						.nav-item {
							display: block;
						}

						.navbar-text-truncate {
							max-width: 100%;
						}

						.navbar-nav {
							.dropdown-toggle .navbar-text-truncate {
								max-width: calc(100% - #{$navbar-text-truncate-spacer-right});
							}

							.dropdown-divider {
								margin-left: -$navbar-padding-x;
								margin-right: -$navbar-padding-x;
							}

							.dropdown-item {
								&:hover,
								&:focus {
									background-color: transparent;
								}

								&.active {
									background-color: transparent;
								}
							}

							.dropdown-menu {
								background-color: transparent;
								border-width: 0;
								box-shadow: none;
								margin: 0;
								max-height: none;
								max-width: none;
								overflow: visible;
								padding: 0;
								position: static;
							}
						}
					}

					.show-dropdown-on-collapse {
						.dropdown-header,
						.dropdown-item {
							padding: $nav-link-padding-y $navbar-nav-link-padding-x;
						}

						.dropdown-menu {
							display: block;
						}

						.dropdown-toggle {
							display: none;
						}
					}

					.navbar-breakpoint-down-d-block {
						display: block !important;
					}

					.navbar-breakpoint-down-d-inline-block {
						display: inline-block !important;
					}

					.navbar-breakpoint-down-d-flex {
						display: flex !important;
					}

					.navbar-breakpoint-down-d-none {
						display: none !important;
					}
				}
			}

			@include media-breakpoint-up($next) {
				@if not ($infix == '') { // .navbar-expand-sm, md, lg, xl
					.navbar-brand .navbar-text-truncate {
						max-width: $navbar-text-truncate-max-width;
					}

					.navbar-collapse {
						flex-grow: 1;
						flex-wrap: wrap;
						justify-content: space-between;

						.navbar-nav {
							flex-direction: row;
							flex-wrap: wrap;
						}

						.dropdown-toggle .navbar-text-truncate {
							max-width: $navbar-text-truncate-max-width - $navbar-text-truncate-spacer-right;
						}
					}

					.navbar-breakpoint-d-block {
						display: block !important;
					}

					.navbar-breakpoint-d-inline-block {
						display: inline-block !important;
					}

					.navbar-breakpoint-d-flex {
						display: flex !important;
					}

					.navbar-breakpoint-d-none {
						display: none !important;
					}
				}
			}
		}
	}
}

// Navbar Overlay Styles for `.navbar-overlay-xs-down`,
// `.navbar-overlay-sm-down`, `.navbar-overlay-md-down`,
// `.navbar-overlay-lg-down`, `.navbar-overlay-up`

@each $breakpoint in map-keys($grid-breakpoints) {
	$index: index(map-keys($grid-breakpoints), $breakpoint);
	$length: length(map-keys($grid-breakpoints));
	$infix: '.navbar-overlay-#{$breakpoint}-down';

	@if ($index == $length) {
		$infix: '.navbar-overlay-up';
	}

	#{$infix} {
		@include media-breakpoint-down($breakpoint) {
			@include border-radius($navbar-border-radius);

			bottom: 0;
			display: none;
			justify-content: space-between;
			left: 0;
			margin-left: 0;
			margin-right: 0;
			padding-bottom: $navbar-padding-y;
			padding-left: $navbar-padding-x;
			padding-right: $navbar-padding-x;
			padding-top: $navbar-padding-y;
			position: absolute;
			right: 0;
			top: 0;
			z-index: $zindex-navbar-overlay;

			&.show {
				display: flex;
			}
		}
	}
}

// Navbar Underline

.navbar-underline {
	.navbar-toggler-link {
		&:after {
			background-color: $navbar-underline-active-bg;
			bottom: -$navbar-padding-y;
			content: '';
			display: block;
			height: 0.1875rem;
			left: 0;
			position: absolute;
			right: 0;
			width: auto;
		}
	}
}

.navbar-underline.navbar-expand {
	@each $breakpoint in map-keys($grid-breakpoints) {
		$next: breakpoint-next($breakpoint, $grid-breakpoints);
		$infix: breakpoint-infix($next, $grid-breakpoints);

		&#{$infix} { // .navbar-expand, sm, md, lg, xl
			@include media-breakpoint-up($next) {
				.navbar-nav .nav-link {
					&.active:after {
						background-color: $navbar-underline-active-bg;
						bottom: -$navbar-padding-y;
						content: '';
						display: block;
						height: 0.1875rem;
						left: 0;
						position: absolute;
						right: 0;
						width: auto;
					}
				}
			}
		}
	}
}
.application-bar {
	flex-wrap: nowrap;

	@include clay-navbar-size($application-bar-size);

	.container,
	.container-fluid {
		flex-wrap: nowrap;
	}

	.navbar-nav {
		flex-wrap: nowrap;
	}
}

.application-bar-dark {
	@include clay-navbar-variant($application-bar-dark);
}
.management-bar {
	@include clay-navbar-size($management-bar-size);
}

.management-bar-light {
	@include clay-navbar-variant($management-bar-light);
}

.management-bar-primary {
	@include clay-navbar-variant($management-bar-primary);
}
.navigation-bar {
	@include clay-navbar-size($navigation-bar-size);
}

.navigation-bar-light {
	@include clay-navbar-variant($navigation-bar-light);
}

.navigation-bar-secondary {
	@include clay-navbar-variant($navigation-bar-secondary);
}
.pagination {
	flex-wrap: wrap;
	font-size: $pagination-font-size;
	margin-bottom: $pagination-margin-bottom;
}

.pagination-bar {
	align-items: center;
	display: flex;
	flex-wrap: wrap;

	@include clay-scale-component {
		flex-direction: column;
		justify-content: center;
	}

	.pagination {
		@include clay-scale-component {
			margin-top: 0.5rem;
		}
	}
}

.page-link {
	@include border-radius($pagination-link-border-radius);

	&:focus {
		z-index: 3;
	}

	&:not(:disabled):not(.disabled) {
		cursor: $pagination-link-cursor;
	}

	&.btn-unstyled {
		background-color: $pagination-bg;
		border-width: $pagination-border-width;
		line-height: $pagination-line-height;
		max-width: none;
		padding: $pagination-padding-y $pagination-padding-x;
	}
}

.page-item {
	margin-bottom: $pagination-item-margin-y;
	margin-left: $pagination-item-margin-x;
	margin-right: $pagination-item-margin-x;
	margin-top: $pagination-item-margin-y;

	&:first-child,
	&:last-child {
		.page-link {
			@include border-radius($pagination-link-border-radius);
		}
	}

	&.disabled .page-link {
		cursor: $pagination-disabled-cursor;
		opacity: $pagination-disabled-opacity;
		pointer-events: $pagination-disabled-pointer-events;
	}

	&.active .page-link {
		cursor: default;
	}
}

.pagination-items-per-page {
	font-size: $pagination-items-per-page-font-size;
	margin-bottom: $pagination-margin-bottom;

	> a,
	> .btn-unstyled {
		background-color: $pagination-items-per-page-bg;
		border-color: $pagination-items-per-page-border-color;

		@include border-radius($pagination-items-per-page-border-radius);

		border-style: solid;
		border-width: $pagination-border-width;
		color: $pagination-items-per-page-color;
		display: block;
		line-height: $pagination-line-height;
		padding: $pagination-padding-y $pagination-padding-x;
		text-decoration: none;

		&:hover,
		&:focus {
			background-color: $pagination-items-per-page-hover-bg;
			border-color: $pagination-items-per-page-hover-border-color;
			color: $pagination-items-per-page-hover-color;
		}
	}

	+ .pagination-results {
		@include clay-scale-component {
			margin-left: auto;
		}
	}
}

.show {
	&.page-item,
	&.pagination-items-per-page {
		.dropdown-toggle {
			background-color: $pagination-active-bg;
			border-color: $pagination-active-border-color;
			color: $pagination-active-color;
		}
	}
}

.page-item .dropdown-menu,
.pagination-items-per-page .dropdown-menu {
	margin-bottom: $pagination-dropdown-menu-spacer-y;
	margin-top: $pagination-dropdown-menu-spacer-y;
}

.pagination-results {
	border-color: transparent;
	border-style: solid;
	border-width: $pagination-border-width;
	color: $pagination-results-color;
	font-size: $pagination-font-size;
	line-height: $pagination-line-height;
	margin-bottom: $pagination-margin-bottom;
	margin-right: auto;
	padding: $pagination-padding-y $pagination-padding-x;
}

// Pagination Sizes

.pagination-sm {
	.pagination-items-per-page {
		@include border-radius($pagination-link-border-radius-sm);
	}

	.pagination-items-per-page > a,
	.pagination-items-per-page > .btn-unstyled,
	.pagination-results {
		font-size: $pagination-font-size-sm;
		line-height: $pagination-line-height-sm;
		padding: $pagination-padding-y-sm $pagination-padding-x;
	}

	.page-link {
		font-size: $pagination-font-size-sm;
		line-height: $pagination-line-height-sm;

		&.btn-unstyled {
			padding: $pagination-padding-y-sm $pagination-padding-x-sm;
		}
	}
}

.pagination-lg {
	.pagination-items-per-page {
		@include border-radius($pagination-link-border-radius-lg);
	}

	.pagination-items-per-page > a,
	.pagination-items-per-page > .btn-unstyled,
	.pagination-results {
		font-size: $pagination-font-size-lg;
		line-height: $pagination-line-height-lg;
		padding: $pagination-padding-y-lg $pagination-padding-x;
	}

	.page-link {
		font-size: $pagination-font-size-lg;
		line-height: $pagination-line-height-lg;

		&.btn-unstyled {
			padding: $pagination-padding-y-lg $pagination-padding-x-lg;
		}
	}
}
.panel {
	background-color: $panel-bg;
	border-color: $panel-border-color;
	border-style: $panel-border-style;
	border-width: $panel-border-width;

	@include border-radius($panel-border-radius);

	margin-bottom: $panel-margin-bottom;
	word-wrap: break-word;
}

.panel-header {
	border-bottom: $panel-header-border-bottom-width solid transparent;

	@if not ($panel-header-offset-border-radius == 0) {
		@include border-top-radius($panel-header-offset-border-radius);
	}

	display: block;
	font-size: $panel-header-font-size;
	line-height: $panel-header-line-height;
	padding: $panel-header-padding-y $panel-header-padding-x;
	position: relative;
	width: 100%;

	&.collapsed {
		@if not ($panel-header-offset-border-radius == 0) {
			@include border-bottom-radius($panel-header-offset-border-radius);
		}

		@include transition(border-radius 1s ease, border-width 1s ease);

		border-bottom-width: 0;
	}

	&.collapse-icon {
		padding-left: $panel-header-collapse-icon-padding-left;
		padding-right: $panel-header-collapse-icon-padding-right;
	}

	.collapse-icon-closed,
	.collapse-icon-open {
		bottom: $panel-header-collapse-icon-bottom;
		font-size: $panel-header-collapse-icon-font-size;
		left: $panel-header-collapse-icon-left;
		right: $panel-header-collapse-icon-right;
		top: $panel-header-collapse-icon-top;
	}
}

.panel-header-link {
	color: inherit;
	display: block;
	padding: $panel-header-padding-y $panel-header-padding-x;
	text-decoration: $panel-header-link-text-decoration;

	&:hover {
		color: inherit;
		text-decoration: $panel-header-link-hover-text-decoration;
	}

	&:focus {
		z-index: 1;
	}

	.collapse-icon {
		padding-left: $collapse-icon-padding-left;
		padding-right: $collapse-icon-padding-right;
	}
}

.panel-body {
	padding: $panel-body-padding-y $panel-header-padding-x;
}

.panel-footer {
	@if not ($panel-footer-offset-border-radius == 0) {
		@include border-bottom-radius($panel-footer-offset-border-radius);
	}

	border-top: $panel-footer-border-top-width solid transparent;
	padding: $panel-footer-padding-y $panel-footer-padding-x;
}

.panel-title {
	font-size: $panel-title-font-size;
	font-weight: $panel-title-font-weight;
	text-transform: $panel-title-text-transform;
}

// Panel Group

.panel-group {
	background-color: $panel-bg;

	@include border-radius($panel-border-radius);

	.panel {
		margin-bottom: $panel-group-panel-margin-bottom;

		&:first-child,
		&:first-child .panel-header {
			@include border-bottom-radius(0);
		}

		&:not(:first-child) {
			@include border-radius(0);

			@if ($panel-border-bottom-width > 0) {
				margin-top: -$panel-border-bottom-width;
			}

			.panel-header {
				@include border-radius(0);
			}
		}

		&:last-child {
			@include border-bottom-radius($panel-border-radius);

			.panel-header.collapsed {
				@if not ($panel-header-offset-border-radius == 0) {
					@include border-bottom-radius($panel-header-offset-border-radius);
				}

				@include transition(border-radius 1s ease);
			}
		}
	}

	.panel-header {
		border-bottom-width: 0;

		+ .panel-collapse > .panel-body {
			border-top: $panel-header-border-bottom-width solid transparent;
		}
	}
}

// Panel Group Fluid

.panel-group-fluid,
.panel-group-flush {
	.panel {
		@if ($panel-border-left-width > 0) {
			border-left-width: 0;
		}

		@if ($panel-border-right-width > 0) {
			border-right-width: 0;
		}

		&:first-child,
		&:last-child {
			@if ($panel-border-radius > 0) {
				border-radius: 0;
			}
		}
	}
}

.panel-group-fluid-first {
	.panel {
		@if ($panel-border-left-width > 0) {
			border-left-width: 0;
		}

		@if ($panel-border-right-width > 0) {
			border-right-width: 0;
		}

		&:first-child {
			@if ($panel-border-top-width > 0) {
				border-top-width: 0;
			}
		}

		&:last-child {
			@if ($panel-border-radius > 0) {
				border-bottom-left-radius: 0;
				border-bottom-right-radius: 0;
			}
		}
	}
}

.panel-group-fluid-last {
	.panel {
		@if ($panel-border-left-width > 0) {
			border-left-width: 0;
		}

		@if ($panel-border-right-width > 0) {
			border-right-width: 0;
		}

		&:first-child {
			@if ($panel-border-radius > 0) {
				border-top-left-radius: 0;
				border-top-right-radius: 0;
			}
		}

		&:last-child {
			@if ($panel-border-bottom-width > 0) {
				border-bottom-width: 0;
			}
		}
	}
}

.card-body {
	> .panel-group-fluid,
	> .panel-group-fluid-first,
	> .panel-group-fluid-last {
		margin-left: -$card-spacer-x;
		margin-right: -$card-spacer-x;
	}
}

.sheet {
	> .panel-group-fluid {
		margin-left: -$sheet-padding-left;
		margin-right: -$sheet-padding-right;
	}

	> .panel-group-fluid-first {
		margin-left: -$sheet-padding-left;
		margin-right: -$sheet-padding-right;
		margin-top: -$sheet-padding-top;
	}

	> .panel-group-fluid-last {
		margin-bottom: -$sheet-padding-bottom;
		margin-left: -$sheet-padding-left;
		margin-right: -$sheet-padding-right;
	}
}

// Panel Group Flush

.panel-group-flush {
	.panel-header,
	.panel-header-link {
		padding-left: 0;
		padding-right: 0;
	}

	.panel-body {
		margin-bottom: $panel-group-flush-body-margin-bottom;
		padding: $panel-group-flush-body-padding;
	}

	.collapse-icon {
		padding-left: $panel-group-flush-collapse-icon-padding-left;
		padding-right: $panel-group-flush-collapse-icon-padding-right;
	}

	.collapse-icon-closed,
	.collapse-icon-open {
		left: $panel-group-flush-collapse-icon-left;
		right: $panel-group-flush-collapse-icon-right;
	}
}

// Panel Variants

.panel-secondary {
	@include clay-panel-variant($panel-secondary);
}
.bs-popover-bottom .arrow::after {
	border-bottom-color: $popover-bottom-arrow-color;
}

.bs-popover-left .arrow::after {
	border-left-color: $popover-left-arrow-color;
}

.bs-popover-right .arrow::after {
	border-right-color: $popover-right-arrow-color;
}

.bs-popover-top .arrow::after {
	border-top-color: $popover-top-arrow-color;
}

.popover {
	.inline-scroller {
		max-height: $popover-inline-scroller-max-height;
	}
}

.popover-header {
	border-color: $popover-header-border-color;

	@if not ($popover-offset-border-width == calc(#{$border-radius-lg} - #{$popover-border-width})) {
		@include border-top-radius($popover-offset-border-width);
	}

	@if not ($popover-header-font-size == $font-size-base) {
		font-size: $popover-header-font-size;
	}

	font-weight: $popover-header-font-weight;

	margin-bottom: $popover-header-margin-y;
	margin-left: $popover-header-margin-x;
	margin-right: $popover-header-margin-x;
	margin-top: $popover-header-margin-y;
}

.popover-body {
	@include border-bottom-radius($popover-offset-border-width);
}

// Top

.clay-popover-top,
.clay-popover-top-left,
.clay-popover-top-right {
	margin-bottom: $popover-arrow-height;

	.arrow {
		bottom: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);
		margin: 0;

		&::after {
			border-top-color: $popover-arrow-color;
			border-width: $popover-arrow-height ($popover-arrow-width / 2) 0;
			bottom: $popover-border-width;
		}

		&::before {
			border-top-color: $popover-arrow-outer-color;
			border-width: $popover-arrow-height ($popover-arrow-width / 2) 0;
			bottom: 0;
		}
	}
}

.clay-popover-top .arrow::after {
	border-top-color: $popover-top-arrow-color;
}

.clay-popover-top-left .arrow::after {
	border-top-color: $popover-top-left-arrow-color;
}

.clay-popover-top-right .arrow::after {
	border-top-color: $popover-top-right-arrow-color;
}

// Right

.clay-popover-right,
.clay-popover-right-bottom,
.clay-popover-right-top {
	margin-left: $popover-arrow-height;

	.arrow {
		height: $popover-arrow-width;
		left: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);
		margin: 0;
		width: $popover-arrow-height;

		&::after {
			border-right-color: $popover-arrow-color;
			border-width: ($popover-arrow-width / 2) $popover-arrow-height ($popover-arrow-width / 2) 0;
			left: $popover-border-width;
		}

		&::before {
			border-right-color: $popover-arrow-outer-color;
			border-width: ($popover-arrow-width / 2) $popover-arrow-height ($popover-arrow-width / 2) 0;
			left: 0;
		}
	}
}

.clay-popover-right .arrow::after {
	border-right-color: $popover-right-arrow-color;
}

.clay-popover-right-bottom .arrow::after {
	border-right-color: $popover-right-bottom-arrow-color;
}

.clay-popover-right-top .arrow::after {
	border-right-color: $popover-right-top-arrow-color;
}

// Bottom

.clay-popover-bottom,
.clay-popover-bottom-left,
.clay-popover-bottom-right {
	margin-top: $popover-arrow-height;

	.arrow {
		margin: 0;
		top: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);

		&:after {
			border-bottom-color: $popover-arrow-color;
			border-width: 0 ($popover-arrow-width / 2) $popover-arrow-height ($popover-arrow-width / 2);
			top: $popover-border-width;
		}

		&:before {
			border-bottom-color: $popover-arrow-outer-color;
			border-width: 0 ($popover-arrow-width / 2) $popover-arrow-height ($popover-arrow-width / 2);
			top: 0;
		}
	}
}

.clay-popover-bottom .arrow::after {
	border-bottom-color: $popover-bottom-arrow-color;
}

.clay-popover-bottom-left .arrow::after {
	border-bottom-color: $popover-bottom-left-arrow-color;
}

.clay-popover-bottom-right .arrow::after {
	border-bottom-color: $popover-bottom-right-arrow-color;
}

// Left

.clay-popover-left,
.clay-popover-left-bottom,
.clay-popover-left-top {
	margin-right: $popover-arrow-height;

	.arrow {
		height: $popover-arrow-width;
		margin: 0;
		right: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);
		width: $popover-arrow-height;

		&::after {
			border-left-color: $popover-arrow-color;
			border-width: ($popover-arrow-width / 2) 0 ($popover-arrow-width / 2) $popover-arrow-height;
			right: $popover-border-width;
		}

		&::before {
			border-left-color: $popover-arrow-outer-color;
			border-width: ($popover-arrow-width / 2) 0 ($popover-arrow-width / 2) $popover-arrow-height;
			right: 0;
		}
	}
}

.clay-popover-left .arrow::after {
	border-left-color: $popover-left-arrow-color;
}

.clay-popover-left-bottom .arrow::after {
	border-left-color: $popover-left-bottom-arrow-color;
}

.clay-popover-left-top .arrow::after {
	border-left-color: $popover-left-top-arrow-color;
}

// Bottom / Top

.clay-popover-bottom,
.clay-popover-top {
	.arrow {
		left: 50%;
		margin-left: -($popover-arrow-width / 2);
	}
}

.clay-popover-bottom-left,
.clay-popover-top-left {
	.arrow {
		left: $popover-arrow-offset;
	}
}

.clay-popover-bottom-right,
.clay-popover-top-right {
	.arrow {
		right: $popover-arrow-offset;
	}
}

// Right / Left

.clay-popover-left,
.clay-popover-right {
	.arrow {
		margin-top: -($popover-arrow-height / 2);
		top: 50%;
	}
}

.clay-popover-left-bottom,
.clay-popover-right-bottom {
	.arrow {
		bottom: $popover-arrow-offset;
	}
}

.clay-popover-left-top,
.clay-popover-right-top {
	.arrow {
		top: $popover-arrow-offset;
	}
}
.progress {
	flex-grow: 1;
	min-width: $progress-min-width;
}

.progress-bar {
	@if ($progress-bar-box-shadow) {
		@include box-shadow($progress-bar-box-shadow);
	}
}

.progress-lg,
.progress-lg > .progress {
	@include border-radius($progress-border-radius-lg);

	font-size: $progress-font-size-lg;
	height: $progress-height-lg;
	line-height: $progress-height-lg;
}

// Progress Group

.progress-group {
	align-items: center;
	display: flex;

	.component-subtitle {
		@include clay-link($progress-group-subtitle);
	}
}

.progress-group-addon {
	font-size: $progress-group-addon-font-size;
	font-weight: $progress-group-addon-font-weight;
	margin-right: $progress-group-addon-spacer-x;
	text-align: center;

	&:first-child {
		padding-left: 0;
	}

	&:last-child {
		padding-right: 0;
	}
}

.progress ~ .progress-group-addon {
	margin-left: $progress-group-addon-spacer-x;
	margin-right: 0;
}

.progress-group-feedback {
	color: $progress-group-feedback-color;
}

.progress-group-stacked {
	display: block;

	.progress {
		margin-bottom: $progress-group-stacked-progress-margin-bottom;
		margin-top: $progress-group-stacked-progress-margin-top;
	}

	.progress-group-addon {
		margin-left: 0;
		margin-right: 0;
	}
}

// Progress Variants

@each $color, $value in $progress-palette {
	.progress-#{$color} {
		.progress-bar {
			background-color: map-get($value, bar-bg);
		}

		.progress-group-feedback {
			color: map-get($value, group-feedback-color);
		}
	}
}
.quick-action-menu {
	align-items: center;
	bottom: 0;
	display: none;
	font-size: $quick-action-font-size;
	left: auto;
	padding-bottom: $quick-action-padding-y;
	padding-left: $quick-action-padding-x;
	padding-right: $quick-action-padding-x;
	padding-top: $quick-action-padding-y;
	position: absolute;
	right: 100%;
	top: 0;
}

.quick-action-item {
	@include border-radius($quick-action-item-border-radius);

	display: flex;
	line-height: 1;
	margin-bottom: $quick-action-item-margin-y;
	margin-left: $quick-action-item-margin-x;
	margin-right: $quick-action-item-margin-x;
	margin-top: $quick-action-item-margin-y;
	min-height: $quick-action-item-min-height;
	min-width: $quick-action-item-min-width;
	padding-bottom: $quick-action-item-padding-y;
	padding-left: $quick-action-item-padding-x;
	padding-right: $quick-action-item-padding-x;
	padding-top: $quick-action-item-padding-y;

	&:disabled,
	&.disabled {
		cursor: $quick-action-item-disabled-cursor;
		opacity: $quick-action-item-disabled-opacity;
	}

	.lexicon-icon {
		margin-top: 0;
	}
}
.sheet {
	background-color: $sheet-bg;
	border-color: $sheet-border-color;
	border-style: $sheet-border-style;
	border-width: $sheet-border-width;

	@include border-radius($sheet-border-radius);

	padding-bottom: $sheet-padding-bottom;
	padding-left:  $sheet-padding-left;
	padding-right:  $sheet-padding-right;
	padding-top: $sheet-padding-top;

	@include clay-scale-component {
		padding-bottom: $sheet-padding-bottom-mobile;
		padding-left:  $sheet-padding-left-mobile;
		padding-right:  $sheet-padding-right-mobile;
		padding-top: $sheet-padding-top-mobile;
	}

	.panel-group {
		&,
		.panel:last-child .panel-body {
			margin-bottom: $sheet-panel-group-margin-bottom;

			@include clay-scale-component {
				margin-bottom: $sheet-panel-group-margin-bottom-mobile;
			}
		}

		.panel-body {
			margin-bottom: $sheet-section-margin-bottom;

			@include clay-scale-component {
				margin-bottom: $sheet-section-margin-bottom-mobile;
			}
		}
	}
}

.sheet-header {
	margin-bottom: $sheet-header-margin-bottom;

	@include clay-scale-component {
		margin-bottom: $sheet-header-margin-bottom-mobile;
	}

	&::after {
		clear: both;
		content: '';
		display: block;
	}
}

.sheet-section {
	margin-bottom: $sheet-section-margin-bottom;

	@include clay-scale-component {
		margin-bottom: $sheet-section-margin-bottom-mobile;
	}

	> fieldset {
		margin-bottom: -$sheet-section-margin-bottom;

		@include clay-scale-component {
			margin-bottom: -$sheet-section-margin-bottom-mobile;
		}
	}

	&::after {
		clear: both;
		content: '';
		display: block;
	}
}

fieldset {
	+ .sheet-footer {
		margin-top: 0;
	}
}

.sheet-footer {
	display: flex;
	margin-bottom: $sheet-footer-margin-bottom;
	margin-left: $sheet-footer-margin-left;
	margin-right: $sheet-footer-margin-right;
	margin-top: $sheet-footer-margin-top;

	@include clay-scale-component {
		margin-bottom: $sheet-footer-margin-bottom-mobile;
		margin-left: $sheet-footer-margin-left-mobile;
		margin-right: $sheet-footer-margin-right-mobile;
		margin-top: $sheet-footer-margin-top-mobile;
	}

	&::after {
		clear: both;
		content: '';
		display: block;
	}
}

.sheet-footer-btn-block-sm-down {
	@include sheet-footer-btn-block($sheet-footer-btn-block-sm-down);
}

// Sheet Sizes

.sheet-lg {
	margin-left: auto;
	margin-right: auto;
	max-width: $sheet-lg-max-width;
}

// Sheet Title

.sheet-title {
	color: $sheet-title-color;
	display: block;
	font-size: $sheet-title-font-size;
	font-weight: $sheet-title-font-weight;
	line-height: $sheet-title-line-height;
	margin-bottom: $sheet-title-margin-bottom;
	word-wrap: break-word;

	@include clay-scale-component {
		font-size: $sheet-title-font-size-mobile;
		margin-bottom: $sheet-title-margin-bottom-mobile;
	}
}

// Sheet Subtitle

.sheet-subtitle {
	border-color: $sheet-subtitle-border-color;
	border-style: $sheet-subtitle-border-style;
	border-width: $sheet-subtitle-border-width;
	color: $sheet-subtitle-color;
	display: block;
	font-size: $sheet-subtitle-font-size;
	font-weight: $sheet-subtitle-font-weight;
	line-height: $sheet-subtitle-line-height;
	margin-bottom: $sheet-subtitle-margin-bottom;
	padding-bottom: $sheet-subtitle-padding-y;
	padding-left: $sheet-subtitle-padding-x;
	padding-right: $sheet-subtitle-padding-x;
	padding-top: $sheet-subtitle-padding-y;
	position: relative;
	text-transform: $sheet-subtitle-text-transform;
	word-wrap: break-word;

	@include clay-scale-component {
		font-size: $sheet-subtitle-font-size-mobile;
		margin-bottom: $sheet-subtitle-margin-bottom-mobile;
	}

	&.autofit-row {
		padding-bottom: 0;

		.autofit-col {
			margin-bottom: $sheet-subtitle-padding-y;
		}
	}

	&.collapse-icon {
		padding-left: $sheet-subtitle-collapse-icon-padding-left;
		padding-right: $sheet-subtitle-collapse-icon-padding-right;
	}

	.collapse-icon-closed,
	.collapse-icon-open {
		bottom: $sheet-subtitle-collapse-icon-bottom;
		left: $sheet-subtitle-collapse-icon-left;
		right: $sheet-subtitle-collapse-icon-right;
		top: $sheet-subtitle-collapse-icon-top;
	}

	.heading-text {
		margin-bottom: $sheet-subtitle-heading-text-margin-bottom;
		margin-top: $sheet-subtitle-heading-text-margin-top;
	}

	a,
	.btn {
		text-transform: none;
	}
}

a.sheet-subtitle {
	color: $sheet-subtitle-link-color;
	text-decoration: $sheet-subtitle-link-text-decoration;

	&:hover {
		color: $sheet-subtitle-link-hover-color;
		text-decoration: $sheet-subtitle-link-hover-text-decoration;
	}
}

// Sheet Tertiary Title

.sheet-tertiary-title {
	color: $sheet-tertiary-title-color;
	display: block;
	font-size: $sheet-tertiary-title-font-size;
	font-weight: $sheet-tertiary-title-font-weight;
	line-height: $sheet-tertiary-title-line-height;
	margin-bottom: $sheet-tertiary-title-margin-bottom;
	padding-bottom: $sheet-tertiary-title-padding-y;
	padding-left: $sheet-tertiary-title-padding-x;
	padding-right: $sheet-tertiary-title-padding-x;
	padding-top: $sheet-tertiary-title-padding-y;
	text-transform: $sheet-tertiary-title-text-transform;
	word-wrap: break-word;

	@include clay-scale-component {
		font-size: $sheet-tertiary-title-font-size-mobile;
		margin-bottom: $sheet-tertiary-title-margin-bottom-mobile;
	}
}

// Sheet Text

.sheet-text {
	color: $sheet-text-color;
	font-size: $sheet-text-font-size;
	font-weight: $sheet-text-font-weight;
	margin-bottom: $sheet-text-margin-bottom;
	word-wrap: break-word;

	@include clay-scale-component {
		font-size: $sheet-text-font-size-mobile;
		margin-bottom: $sheet-text-margin-bottom-mobile;
	}
}
.container-fluid-1280.sidenav-container {
	padding-left: floor(($grid-gutter-width / 2));
	padding-right: floor(($grid-gutter-width / 2));
}

.sidenav-container {
	position: relative;

	> .sidenav-menu-slider {
		visibility: hidden;
		width: 0;
	}

	> .sidenav-content {
		left: 0;
	}
}

.sidenav-container.open {
	&.sidenav-transition {
		> .sidenav-menu-slider {
			overflow: hidden;
		}
	}

	> .sidenav-menu-slider {
		overflow: visible;
		visibility: visible;
	}
}

.sidenav-content {
	position: relative;

	@include media-breakpoint-up(md) {
		position: static;

		&::after {
			clear: both;
			content: '';
			display: block;
		}
	}
}

.sidenav-menu {
	height: 100%;
	position: relative;
}

.sidenav-menu-slider {
	overflow: hidden;
	position: absolute;
	width: $sidenav-width;
	z-index: 10;
}

.sidenav-fixed > .sidenav-menu-slider {
	bottom: 0;
	left: 0;
	position: fixed;
	top: 0;
	z-index: $zindex-sidenav;
}

.sidenav-right {
	> .sidenav-content {
		left: auto;
		right: 0;
	}

	> .sidenav-menu-slider {
		left: auto;
		right: 0;

		.sidenav-menu {
			right: 0;
		}
	}
}

.sidenav-js-fouc > .sidenav-menu-slider {
	opacity: 0;
	visibility: hidden;
}

// JS API Transition

.sidenav-transition {
	.sidenav-content,
	.sidenav-menu,
	.sidenav-menu-slider {
		transition: $sidenav-transition;
	}
}

// Simple Sidenav Transition

.sidenav-transition {
	transition: $sidenav-transition;
}

// Simple Sidenav

.sidenav-fixed.sidenav-menu-slider {
	bottom: 0;
	left: 0;
	position: fixed;
	top: 0;
	visibility: hidden;
	width: 0;

	&.open {
		visibility: visible;
		width: $sidenav-width;
	}

	.sidenav-menu {
		position: absolute;
	}
}

.sidenav-menu-slider {
	.sidenav-menu {
		width: $sidenav-width;
	}

	&.sidenav-right {
		left: auto;
		right: 0;

		.sidenav-menu {
			right: 0;
		}
	}
}
.sidebar {
	height: 100%;
	overflow: auto;

	-webkit-overflow-scrolling: touch;

	.container-fluid {
		padding-left: $sidebar-padding-left;
		padding-right: $sidebar-padding-right;
	}
}

// Sidebar Header / Footer

.sidebar-header,
.sidebar-footer {
	padding-bottom: $sidebar-padding-bottom;
	padding-left: $sidebar-padding-left;
	padding-right: $sidebar-padding-right;
	padding-top: $sidebar-padding-top;
}

.sidebar-header {
	.component-title {
		@include clay-text-typography($sidebar-header-component-title);
	}

	.component-subtitle {
		@include clay-text-typography($sidebar-header-component-subtitle);
	}
}

// Sidebar Body

.sidebar-body {
	overflow: auto;

	-webkit-overflow-scrolling: touch;

	padding-bottom: $sidebar-padding-bottom;
	padding-left: $sidebar-padding-left;
	padding-right: $sidebar-padding-right;
	padding-top: $sidebar-padding-top;

	> .sidebar-section {
		margin-bottom: 2rem;

		&:last-child {
			margin-bottom: 0;
		}
	}
}

// Sidebar Section

.sidebar-section {
	position: relative;
	word-wrap: break-word;
}

// Sidebar List Group

.sidebar-list-group {
	display: flex;
	flex-direction: column;
	font-size: $sidebar-list-group-font-size;
	margin-bottom: 0;
	padding-left: 0;

	@extend %#{$sidebar-list-group-type} !optional;

	.autofit-col {
		padding-bottom: $sidebar-list-group-autofit-col-padding-y;
		padding-left: $sidebar-list-group-autofit-col-padding-x;
		padding-right: $sidebar-list-group-autofit-col-padding-x;
		padding-top: $sidebar-list-group-autofit-col-padding-y;

		.list-group-title:only-child {
			height: map-get($sidebar-list-group-sticker-size, size);
		}
	}

	.list-group-item {
		background-color: $sidebar-list-group-bg;
		border-color: $sidebar-list-group-border-color;
		padding: $sidebar-list-group-item-padding;
	}

	.sticker {
		@include clay-sticker-size($sidebar-list-group-sticker-size);
	}
}

// Sidebar Panel

.sidebar-panel {
	margin-bottom: $sidebar-panel-margin-bottom;
	position: relative;
}

// Sidebar Definition List (dl dt dd)

.sidebar-dt {
	@include clay-text-typography($sidebar-dt);
}

.sidebar-dd {
	@include clay-text-typography($sidebar-dd);
}

// Sidebar Variants

.sidebar-light {
	@include clay-sidebar-variant($sidebar-light);
}

.sidebar-light .component-navigation-bar {
	@include clay-navbar-variant($sidebar-light-navigation-bar);
}
table {
	border-collapse: separate;
}

th {
	height: 20px;
}

.table-head-title {
	.inline-item-before {
		margin-right: $table-head-title-inline-item-spacer-x;

		+ .text-truncate-inline {
			max-width: $table-head-title-text-truncate-max-width;
		}
	}

	.inline-item-after {
		margin-left: $table-head-title-inline-item-spacer-x;
	}
}

.table {
	border-collapse: collapse;
	font-size: $table-font-size;
	margin-bottom: $table-margin-bottom;

	thead {
		td,
		th {
			// Webkit rendering issue with responsive-tables
			background-color: $table-head-bg;
			border-bottom-width: $table-head-border-bottom-width;
			border-top-width: $table-head-border-top-width;
		}

		th a {
			@include clay-link($table-head-link);
		}
	}

	th {
		color: $table-head-color;
		font-size: $table-head-font-size;
		font-weight: $table-head-font-weight;
		height: $table-head-height;
		position: relative;
	}

	td {
		border-bottom-width: $table-data-border-bottom-width;
		border-left-width: $table-data-border-left-width;
		border-right-width: $table-data-border-right-width;
		border-top-width: $table-data-border-top-width;

		border-color: $table-data-border-color;
		border-style: $table-data-border-style;
		position: relative;
		vertical-align: $table-data-vertical-align;
	}

	td:first-child,
	th:first-child,
	.table-cell-start {
		padding-left: $table-cell-gutters;
	}

	td:last-child,
	th:last-child,
	.table-cell-end {
		padding-right: $table-cell-gutters;
	}

	tbody,
	tfoot {
		td,
		th {
			// Webkit rendering issue with responsive-tables
			background-color: $table-bg;
		}
	}

	.autofit-col {
		justify-content: center;
		padding-left: $table-cell-padding;
		padding-right: $table-cell-padding;

		&:first-child {
			padding-left: 0;
		}

		&:last-child {
			padding-right: 0;
		}
	}

	.custom-control,
	.form-check {
		margin-bottom: 0;
	}
}

.table-column-text-start {
	text-align: left;
}

.table-column-text-center {
	text-align: center;
}

.table-column-text-end {
	text-align: right;
}

%table-cell-expand {
	display: table-cell;
	max-width: $table-cell-expand-min-width;
	min-width: $table-cell-expand-min-width;
	width: auto;
	word-wrap: break-word;
}

%table-cell-contract {
	display: table-cell;
	width: 1%;
}

// Table Bordered

.table-bordered {
	thead {
		td,
		th {
			@if ($table-head-border-top-width == 0 and $table-head-border-top-width) {
				border-top-width: $table-border-width;
			}
		}
	}

	td,
	th {
		border-width: $table-bordered-border-width;
	}
}

// Table Striped

.table-striped {
	tbody tr:nth-of-type(odd) {
		td,
		th {
			background-color: $table-accent-bg;
		}
	}
}

// Table Hover

.table-hover {
	tbody tr {
		&:hover {
			td,
			th {
				background-color: $table-hover-bg;
			}
		}
	}
}

// Table Active

.table .table-active {
	> td,
	> th {
		background-color: $table-active-bg;
	}
}

// Table Disabled

.table-disabled {
	color: $table-disabled-color;

	> td,
	> th {
		background-color: $table-disabled-bg;
		cursor: $table-disabled-cursor;

		a {
			color: $table-disabled-color;
			pointer-events: $table-disabled-pointer-events;
		}
	}

	.table-title,
	.table-list-title {
		color: $table-disabled-color;
	}
}

.table-hover .table-disabled:hover {
	> td,
	> th {
		background-color: $table-disabled-bg;
	}
}

.table-striped {
	tbody .table-disabled:nth-of-type(odd) {
		td,
		th {
			background-color: $table-disabled-bg;
		}
	}
}

// Table Title

.table-title {
	@include clay-text-typography($table-title);
}

.table-title a {
	@include clay-link($table-title-link);
}

// Table Link

.table-link {
	@include clay-link($table-link);
}

// Table Action Link

.table-action-link {
	@include clay-link($table-action-link);
}

// Table List Skin

.table-list {
	@include border-radius($table-list-border-radius);

	color: $table-list-color;
	font-size: $table-list-font-size;
	margin-bottom: $table-list-margin-bottom;
	margin-top: $table-list-margin-top;

	thead,
	tbody,
	tfoot {
		&:first-child {
			tr:first-child {
				th:first-child,
				td:first-child,
				.table-cell-start {
					@if $enable-rounded {
						border-top-left-radius: $table-list-border-radius;
					}
				}

				th:last-child,
				td:last-child,
				.table-cell-end {
					@if $enable-rounded {
						border-top-right-radius: $table-list-border-radius;
					}
				}
			}
		}

		&:last-child {
			tr:last-child {
				th:first-child,
				td:first-child,
				.table-cell-start {
					@if $enable-rounded {
						border-bottom-left-radius: $table-list-border-radius;
					}
				}

				th:last-child,
				td:last-child,
				.table-cell-end {
					@if $enable-rounded {
						border-bottom-right-radius: $table-list-border-radius;
					}
				}
			}
		}
	}

	.table-row-start {
		.table-cell-start {
			@if $enable-rounded {
				border-top-left-radius: $table-list-border-radius;
			}
		}

		.table-cell-end {
			@if $enable-rounded {
				border-top-right-radius: $table-list-border-radius;
			}
		}
	}

	.table-row-end {
		.table-cell-start {
			@if $enable-rounded {
				border-bottom-left-radius: $table-list-border-radius;
			}
		}

		.table-cell-end {
			@if $enable-rounded {
				border-bottom-right-radius: $table-list-border-radius;
			}
		}
	}

	th,
	td {
		box-shadow: inset 0 #{$table-list-border-y-width} $table-list-border-color, // top
					0 #{$table-list-border-y-width} $table-list-border-color; // bottom
		padding-top: $table-list-border-y-width + $table-cell-padding;

		&:first-child {
			box-shadow: inset 0 #{$table-list-border-y-width} $table-list-border-color, // top
						0 #{$table-list-border-y-width} $table-list-border-color, // bottom
						inset #{$table-list-border-x-width} 0 $table-list-border-color; // left
			padding-left: $table-list-border-x-width + $table-cell-padding;
			padding-top: $table-list-border-y-width + $table-cell-padding;
		}

		&:last-child {
			box-shadow: inset 0 #{$table-list-border-y-width} $table-list-border-color, // top
						inset #{-$table-list-border-x-width} 0 $table-list-border-color, // right
						0 #{$table-list-border-y-width} $table-list-border-color; // bottom
			padding-right: $table-list-border-x-width + $table-cell-padding;
			padding-top: $table-list-border-y-width + $table-cell-padding;
		}

		&:only-child {
			box-shadow: inset 0 #{$table-list-border-y-width} $table-list-border-color, // top
						inset #{-$table-list-border-x-width} 0 $table-list-border-color, // right
						0 #{$table-list-border-y-width} $table-list-border-color, // bottom
						inset #{$table-list-border-x-width} 0 $table-list-border-color; // left
			padding-left: $table-list-border-x-width + $table-cell-padding;
			padding-right: $table-list-border-x-width + $table-cell-padding;
			padding-top: $table-list-border-y-width + $table-cell-padding;
		}
	}

	.table-cell-start {
		box-shadow: inset 0 #{$table-list-border-y-width} $table-list-border-color, // top
					0 #{$table-list-border-y-width} $table-list-border-color, // bottom
					inset #{$table-list-border-x-width} 0 $table-list-border-color; // left
		padding-left: $table-list-border-x-width + $table-cell-padding;
		padding-top: $table-list-border-y-width + $table-cell-padding;
	}

	.table-cell-end {
		box-shadow: inset 0 #{$table-list-border-y-width} $table-list-border-color, // top
					inset #{-$table-list-border-x-width} 0 $table-list-border-color, // right
					0 #{$table-list-border-y-width} $table-list-border-color; // bottom
		padding-right: $table-list-border-x-width + $table-cell-padding;
		padding-top: $table-list-border-y-width + $table-cell-padding;
	}

	thead {
		td,
		th {
			// Webkit rendering issue with responsive-tables
			background-color: $table-list-head-bg;
			border-width: 0;
			font-size: $table-list-head-font-size;
			font-weight: $table-list-head-font-weight;
			height: $table-list-head-height;
			vertical-align: $table-list-head-vertical-alignment;
		}

		th a {
			@include clay-link($table-list-head-link);
		}
	}

	tbody,
	tfoot {
		td,
		th {
			// Webkit rendering issue with responsive-tables
			background-color: $table-list-bg;
			border-width: 0;
			vertical-align: middle;
		}
	}
}

.table-list.table-bordered {
	border-width: 0;

	th,
	td {
		box-shadow: inset 0 #{$table-list-border-y-width} #{$table-list-border-color}, // top
					inset #{-$table-list-border-x-width} 0 #{$table-list-border-color}, // right
					0 #{$table-list-border-y-width} #{$table-list-border-color}; // bottom
		padding-right: $table-list-border-x-width + $table-cell-padding;
		padding-top: $table-list-border-y-width + $table-cell-padding;

		&:first-child {
			box-shadow: inset 0 #{$table-list-border-y-width} #{$table-list-border-color}, // top
						inset #{-$table-list-border-x-width} 0 #{$table-list-border-color}, // right
						0 #{$table-list-border-y-width} #{$table-list-border-color}, // bottom
						inset #{$table-list-border-x-width} 0 #{$table-list-border-color}; // left
			padding-left: $table-list-border-x-width + $table-cell-padding;
			padding-right: $table-list-border-x-width + $table-cell-padding;
			padding-top: $table-list-border-y-width + $table-cell-padding;
		}
	}
}

// Table List Striped

.table-list.table-striped {
	tbody tr:nth-of-type(odd) {
		td,
		th {
			background-color: $table-list-accent-bg;
		}
	}
}

// Table List Hover

.table-list.table-hover {
	tbody tr {
		&:hover {
			td,
			th {
				background-color: $table-list-hover-bg;
			}
		}
	}
}

// Table List Active

.table-list.table-hover {
	.table-active {
		&:hover {
			background-color: $table-list-active-bg;

			> th,
			> td {
				background-color: $table-list-active-bg;
			}
		}
	}
}

.table-list .table-active {
	&,
	> th,
	> td {
		background-color: $table-list-active-bg;
	}
}

// Table List Disabled

.table-list .table-disabled {
	color: $table-list-disabled-color;

	> td,
	> th {
		background-color: $table-list-disabled-bg;
		cursor: $table-list-disabled-cursor;

		a {
			color: $table-list-disabled-color;
			pointer-events: $table-list-disabled-pointer-events;
		}
	}

	.table-title,
	.table-list-title {
		color: $table-list-disabled-color;
	}
}

.table-list.table-hover .table-disabled:hover {
	> td,
	> th {
		background-color: $table-list-disabled-bg;
	}
}

.table-list.table-striped {
	tbody .table-disabled:nth-of-type(odd) {
		td,
		th {
			background-color: $table-list-disabled-bg;
		}
	}
}

// Table List Title

.table-list-title {
	@include clay-text-typography($table-list-title);
}

.table-list-title a {
	@include clay-link($table-list-title-link);
}

// Table List Link

.table-list-link {
	@include clay-link($table-list-link);
}

// Table List Action Link

.table-list-action-link {
	@include clay-link($table-list-action-link);
}

// Table Helpers

.table-autofit {
	td,
	th {
		width: 1%;
	}

	.table-cell-expand {
		@extend %table-cell-expand;
	}

	.table-cell-expand-small {
		max-width: $table-cell-expand-small-max-width;
		width: $table-cell-expand-small-width;
		word-wrap: break-word;
	}

	.table-cell-expand-smaller {
		max-width: $table-cell-expand-smaller-max-width;
		width: $table-cell-expand-smaller-width;
		word-wrap: break-word;
	}

	.table-cell-expand-smallest {
		max-width: $table-cell-expand-smallest-max-width;
		width: $table-cell-expand-smallest-width;
		word-wrap: break-word;
	}
}

.table-nowrap {
	td,
	th {
		white-space: nowrap;
	}
}

.table-heading-nowrap thead {
	td,
	th {
		white-space: nowrap;
	}
}

.table .table-divider {
	td,
	th {
		background-color: $table-divider-bg;
		color: $table-divider-color;
		font-size: $table-divider-font-size;
		font-weight: $table-divider-font-weight;
		padding: $table-divider-padding;
		text-transform: $table-divider-text-transform;
	}
}

.table-list .table-divider {
	td,
	th {
		padding-bottom: $table-list-divider-padding-y;
		padding-left: $table-list-border-x-width + $table-list-divider-padding-x;
		padding-right: $table-list-border-x-width + $table-list-divider-padding-x;
		padding-top: $table-list-border-y-width + $table-list-divider-padding-y;
	}
}

// Table Vertical Align

.table-valign-bottom {
	tbody,
	tfoot,
	thead {
		td,
		th {
			vertical-align: bottom;
		}
	}

	tbody {
		td,
		th {
			padding-bottom: $table-valign-bottom-body-cell-padding-bottom;
		}
	}

	&.show-quick-actions-on-hover {
		.quick-action-menu {
			align-items: flex-end;
		}
	}
}

.table-valign-middle {
	tbody,
	tfoot,
	thead {
		td,
		th {
			vertical-align: middle;
		}
	}
}

.table-valign-top {
	tbody,
	tfoot,
	thead {
		td,
		th {
			vertical-align: top;
		}
	}

	tbody {
		td,
		th {
			padding-top: $table-valign-top-body-cell-padding-top;
		}
	}

	&.show-quick-actions-on-hover {
		.quick-action-menu {
			align-items: flex-start;
		}
	}
}

// Tbody Vertical Align

.tbody-valign-bottom {
	tbody {
		td,
		th {
			padding-bottom: $table-valign-bottom-body-cell-padding-bottom;
			vertical-align: bottom;
		}
	}

	&.show-quick-actions-on-hover {
		.quick-action-menu {
			align-items: flex-end;
		}
	}
}

.tbody-valign-middle {
	tbody td {
		vertical-align: middle;
	}
}

.tbody-valign-top {
	tbody {
		td,
		th {
			padding-top: $table-valign-top-body-cell-padding-top;
			vertical-align: top;
		}
	}

	&.show-quick-actions-on-hover {
		.quick-action-menu {
			align-items: flex-start;
		}
	}
}

// Thead Vertical Align

.thead-valign-bottom {
	thead {
		td,
		th {
			vertical-align: bottom;
		}
	}
}

.thead-valign-middle {
	thead {
		td,
		th {
			vertical-align: middle;
		}
	}
}

.thead-valign-top {
	thead {
		td,
		th {
			vertical-align: top;
		}
	}
}

// Show Quick Action

.show-quick-actions-on-hover {
	tr:not(.table-active):not(.table-disabled) {
		&:hover {
			.quick-action-menu {
				display: flex;
			}
		}
	}

	.table-focus:not(.table-active):not(.table-disabled) {
		.quick-action-menu {
			display: flex;
		}
	}
}

.table {
	.quick-action-menu {
		align-items: $table-quick-action-menu-align-items;
		background-color: $table-quick-action-menu-bg;
		padding-bottom: $table-cell-padding;
		padding-top: $table-cell-padding;
	}
}

.table-striped {
	tbody tr:nth-of-type(odd) {
		.quick-action-menu {
			background-color: $table-quick-action-menu-accent-bg;
		}
	}

	tbody .table-active:nth-of-type(odd) {
		.quick-action-menu {
			background-color: $table-quick-action-menu-accent-active-bg;
		}
	}
}

.table-hover {
	tbody tr {
		&:hover {
			.quick-action-menu {
				background-color: $table-quick-action-menu-hover-bg;
			}
		}
	}

	tbody .table-active {
		&:hover {
			.quick-action-menu {
				background-color: $table-quick-action-menu-active-bg;
			}
		}
	}
}

.table-active {
	.quick-action-menu {
		background-color: $table-quick-action-menu-active-bg;
	}
}

.table-list {
	.quick-action-menu {
		align-items: $table-list-quick-action-menu-align-items;
		background-color: $table-list-quick-action-menu-bg;
		bottom: 0;
		top: $table-list-border-y-width;
	}
}

.table-list.table-striped {
	tbody tr:nth-of-type(odd) {
		.quick-action-menu {
			background-color: $table-list-quick-action-menu-accent-bg;
		}
	}

	tbody .table-active:nth-of-type(odd) {
		.quick-action-menu {
			background-color: $table-list-quick-action-menu-accent-active-bg;
		}
	}
}

.table-list.table-hover {
	tbody tr {
		&:hover {
			.quick-action-menu {
				background-color: $table-list-quick-action-menu-hover-bg;
			}
		}
	}

	tbody .table-active {
		&:hover {
			.quick-action-menu {
				background-color: $table-list-quick-action-menu-active-bg;
			}
		}
	}
}

.table-list .table-active {
	.quick-action-menu {
		background-color: $table-list-quick-action-menu-active-bg;
	}
}

// Table Responsive

.table-responsive {
	@each $breakpoint in map-keys($grid-breakpoints) {
		$next: breakpoint-next($breakpoint, $grid-breakpoints);
		$infix: breakpoint-infix($next, $grid-breakpoints);

		&#{$infix} {
			margin-bottom: $table-responsive-margin-bottom;
		}
	}
}

// Table Utilities

.table {
	// Min Width

	.table-cell-minw-50 {
		min-width: 50px;
	}

	.table-cell-minw-75 {
		min-width: 75px;
	}

	.table-cell-minw-100 {
		min-width: 100px;
	}

	.table-cell-minw-150 {
		min-width: 150px;
	}

	.table-cell-minw-200 {
		min-width: 200px;
	}

	.table-cell-minw-250 {
		min-width: 250px;
	}

	.table-cell-minw-300 {
		min-width: 300px;
	}

	.table-cell-minw-350 {
		min-width: 350px;
	}

	.table-cell-minw-400 {
		min-width: 400px;
	}

	// White Space

	.table-cell-ws-normal {
		white-space: normal;
	}

	.table-cell-ws-nowrap {
		white-space: nowrap;
	}
}
.tbar {
	display: flex;

	> .container,
	> .container-fluid {
		display: flex;
	}
}

.tbar-nav {
	display: flex;
	flex-grow: 1;
	flex-shrink: 1;
	flex-wrap: nowrap;
	list-style: none;
	margin-bottom: 0;
	min-width: 3.125rem;
	padding-left: 0;
	word-wrap: break-word;

	> .tbar-item {
		justify-content: center;
	}
}

.tbar-nav-shrink {
	flex-grow: 0;
	flex-shrink: 0;
	width: auto;
}

.tbar-nav-wrap {
	flex-wrap: wrap;
}

.tbar-item {
	@extend %autofit-col;

	max-width: 100%;
	padding-bottom: $tbar-item-padding-y;
	padding-left: $tbar-item-padding-x;
	padding-right: $tbar-item-padding-x;
	padding-top: $tbar-item-padding-y;

	&:first-child {
		padding-left: 0;
	}

	&:last-child {
		padding-right: 0;
	}
}

.tbar-item-expand {
	@extend %autofit-col-expand;

	text-align: center;
}

.tbar-section {
	@extend %autofit-section;
}

.tbar-link {
	display: inline-block;
}

.tbar-btn-monospaced,
.tbar-link-monospaced {
	align-items: center;
	display: inline-flex;
	flex-direction: column;
	justify-content: center;
	overflow: hidden;
	padding: 0;
	text-align: center;

	.inline-item .lexicon-icon,
	.lexicon-icon {
		margin-top: 0;
	}
}

// Tbar Inline {xs|sm|md|lg|xl} Down

.tbar-inline-xs-down {
	@include clay-tbar-inline-down($tbar-inline-xs-down);
}

.tbar-inline-sm-down {
	@include clay-tbar-inline-down($tbar-inline-sm-down);
}

.tbar-inline-md-down {
	@include clay-tbar-inline-down($tbar-inline-md-down);
}

.tbar-inline-lg-down {
	@include clay-tbar-inline-down($tbar-inline-lg-down);
}

.tbar-inline-xl-down {
	@include clay-tbar-inline-down($tbar-inline-xl-down);
}

// Component Tbar

.component-tbar {
	@include clay-tbar-variant($component-tbar);
}

// Subnav Tbar

.subnav-tbar {
	.btn-unstyled {
		color: $link-color;
		text-decoration: $link-decoration;

		&:hover {
			color: $link-hover-color;
			text-decoration: $link-hover-decoration;
		}
	}

	@include clay-tbar-variant($subnav-tbar);
}

// Subnav Tbar Variants

.subnav-tbar-primary {
	@include clay-tbar-variant($subnav-tbar-primary);

	&.subnav-tbar-disabled {
		@include clay-tbar-variant($subnav-tbar-primary-disabled);
	}
}

.subnav-tbar-light {
	@include clay-tbar-variant($subnav-tbar-light);
}
.timeline {
	@include list-unstyled;

	padding-left: $timeline-outer-spacing;

	.panel,
	.panel-group {
		margin-bottom: 0;
	}
}

.timeline-icon {
	background-color: $timeline-icon-bg;
	border: $timeline-icon-border-width solid $timeline-icon-border-color;
	border-radius: $timeline-icon-border-radius;
	display: block;

	@include clay-monospace($timeline-icon-size);
}

.timeline-increment {
	background-color: $timeline-increment-bg;
	left: -($timeline-inner-spacing - $timeline-border-modifier);
	position: absolute;
	text-align: center;
	top: 50%;
	-ms-transform: translate(-50%, -50%);
	transform: translate(-50%, -50%);
	z-index: 1;
}

.timeline-increment-text {
	display: block;
	max-width: $timeline-inner-spacing + $timeline-outer-spacing;
}

.timeline-item-label {
	color: $timeline-item-label-color;
}

.timeline-item {
	padding-bottom: $timeline-item-padding-bottom;
	padding-left: $timeline-inner-spacing;
	padding-top: $timeline-item-padding-top;
	position: relative;

	&:before {
		background-color: $timeline-border-color;
		bottom: 0;
		content: '';
		display: block;
		left: 0;
		position: absolute;
		top: 0;
		width: $timeline-border-width;
	}

	&.active {
		.timeline-icon {
			background-color: $timeline-icon-active-bg;
			border-color: $timeline-icon-active-border-color;
		}
	}

	.panel,
	.panel-heading {
		position: relative;
	}

	.panel {
		.timeline-increment {
			margin-left: -$card-border-width;
		}
	}
}

// Timeline Right

.timeline-right {
	padding-left: 0;
	padding-right: $timeline-outer-spacing;

	.timeline-item {
		@include clay-timeline-item-reverse;
	}
}

.timeline-right-xs-only {
	@include media-breakpoint-down(xs) {
		padding-left: 0;
		padding-right: $timeline-outer-spacing;

		.timeline-item {
			@include clay-timeline-item-reverse;
		}
	}
}

// Timeline Center

.timeline-center {
	@include media-breakpoint-up(md) {
		padding-left: 0;

		.timeline-item {
			margin-left: 50%;
			width: 50%;

			.timeline-item-label {
				left: -100%;
				margin-left: -($timeline-inner-spacing * 2);
				position: absolute;
				text-align: right;
				top: 50%;
				-ms-transform: translateY(-50%);
				transform: translateY(-50%);
				width: 100%;
			}
		}

		.timeline-item.timeline-item-reverse {
			@include clay-timeline-item-reverse;

			margin-left: 0;

			.timeline-item-label {
				margin-left: auto;
				margin-right: -($timeline-inner-spacing * 2);
				right: -100%;
				text-align: left;
			}
		}
	}
}

.timeline-even .timeline-item:nth-of-type(even),
.timeline-odd .timeline-item:nth-of-type(odd) {
	@include media-breakpoint-up(md) {
		@include clay-timeline-item-reverse;

		margin-left: 0;

		.timeline-item-label {
			margin-left: auto;
			margin-right: -($timeline-inner-spacing * 2);
			right: -100%;
			text-align: left;
		}
	}
}

.timeline-spacing-xl {
	@include clay-timeline-spacing($timeline-outer-spacing-xl, $timeline-inner-spacing-xl, $timeline-item-padding-y-xl);

	.timeline-increment-text {
		max-width: $timeline-inner-spacing-xl + $timeline-outer-spacing-xl;
	}
}
.toggle-switch {
	cursor: pointer;
}

.toggle-switch-bar {
	.toggle-switch-handle {
		display: block;
		float: left;
		min-width: $toggle-switch-bar-width;
		text-transform: uppercase;
	}

	.toggle-switch-icon {
		font-size: $toggle-switch-bar-font-size;

		.lexicon-icon {
			margin-top: -0.2em;
		}
	}

	.button-icon {
		font-size: $toggle-switch-button-font-size;
	}
}

.toggle-switch-check {
	font-size: 62.5%;
	opacity: 0;
	position: absolute;

	&:empty ~ .toggle-switch-bar {
		cursor: pointer;
		display: block;
		float: left;
		font-size: 0.75rem;
		height: $toggle-switch-bar-height;
		line-height: $toggle-switch-bar-height;
		position: relative;
		text-indent: 0;

		-ms-user-select: none;
		user-select: none;

		&:after {
			background-color: $toggle-switch-button-bg;
			border-color: $toggle-switch-button-border-color;

			@include border-radius($toggle-switch-button-border-radius);

			border-style: solid;
			border-width: $toggle-switch-button-border-width;
			bottom: $toggle-switch-bar-padding;
			content: '';
			display: block;
			height: $toggle-switch-button-width;
			left: $toggle-switch-bar-padding;
			position: absolute;
			top: $toggle-switch-bar-padding;
			transition: $toggle-switch-transition;
			width: $toggle-switch-button-width;
		}

		&:before {
			background-color: $toggle-switch-bar-bg;
			border-color: $toggle-switch-bar-border-color;

			@include border-radius($toggle-switch-bar-border-radius);

			border-style: solid;
			border-width: $toggle-switch-bar-border-width;
			bottom: 0;
			content: ' ';
			display: block;
			left: 0;
			position: absolute;
			top: 0;
			transition: $toggle-switch-transition;
			width: $toggle-switch-bar-width;
		}

		.toggle-switch-handle {
			&:after {
				content: attr(data-label-off);
				margin-left: clay-data-label-text-position($toggle-switch-bar-width, $toggle-switch-bar-padding);
				transition: $toggle-switch-transition;
				white-space: nowrap;
			}

			&:before {
				transition: $toggle-switch-transition;
			}
		}

		.toggle-switch-icon {
			color: $toggle-switch-bar-icon-color;
			left: $toggle-switch-bar-padding;
			line-height: $toggle-switch-button-width;
			position: absolute;
			text-align: center;
			text-indent: 0;
			top: $toggle-switch-bar-padding;
			transition: $toggle-switch-transition;
			width: $toggle-switch-button-width;
			z-index: 1;
		}

		.toggle-switch-icon-on {
			left: $toggle-switch-bar-padding;
			opacity: 0;
		}

		.toggle-switch-icon-off {
			left: $toggle-switch-bar-width - $toggle-switch-bar-padding - $toggle-switch-button-width;
		}

		.button-icon {
			color: $toggle-switch-button-icon-color;
		}

		.button-icon-on {
			opacity: 0;
		}
	}

	&:checked ~ .toggle-switch-bar {
		&:after {
			background-color: $toggle-switch-button-on-bg;
			border-color: $toggle-switch-button-on-border-color;

			@include border-radius($toggle-switch-button-on-border-radius);

			border-style: solid;
			border-width: $toggle-switch-button-border-width;
			left: $toggle-switch-bar-width - $toggle-switch-bar-padding - $toggle-switch-button-width;
		}

		&:before {
			background-color: $toggle-switch-bar-on-bg;
			border-color: $toggle-switch-bar-on-border-color;

			@include border-radius($toggle-switch-bar-border-radius);

			border-style: solid;
			border-width: $toggle-switch-bar-border-width;
		}

		.toggle-switch-handle:after {
			content: attr(data-label-on);
		}

		.toggle-switch-icon {
			color: $toggle-switch-bar-on-icon-color;
		}

		.button-icon {
			color: $toggle-switch-button-on-icon-color;
			left: $toggle-switch-bar-width - $toggle-switch-bar-padding - $toggle-switch-button-width;
		}

		.button-icon-on,
		.toggle-switch-icon-on {
			opacity: 1;
		}

		.button-icon-off,
		.toggle-switch-icon-off {
			opacity: 0;
		}
	}

	&:disabled,
	&.disabled {
		~ .toggle-switch-bar {
			cursor: $toggle-switch-disabled-cursor;
			opacity: $toggle-switch-disabled-opacity;
		}
	}

	&:focus ~ .toggle-switch-bar:before {
		@include box-shadow($toggle-switch-bar-focus-box-shadow);
	}
}

.toggle-switch-label {
	display: block;
	margin-bottom: 2px;
}

.toggle-switch-text {
	clear: both;
	display: block;
	font-size: 0.75rem;
}

.toggle-switch-text-left {
	float: left;
	line-height: $toggle-switch-bar-height;
	margin-right: 8px;
}

.toggle-switch-text-right {
	clear: none;
	float: left;
	line-height: $toggle-switch-bar-height;
	margin-left: 8px;
}

@include clay-scale-component {
	.toggle-switch-bar {
		.toggle-switch-handle {
			min-width: $toggle-switch-bar-width-mobile;
		}

		.toggle-switch-icon {
			font-size: $toggle-switch-bar-font-size-mobile;
		}

		.button-icon {
			font-size: $toggle-switch-button-font-size-mobile;
		}
	}

	.toggle-switch-check {
		&:empty ~ .toggle-switch-bar {
			height: $toggle-switch-bar-height-mobile;
			line-height: $toggle-switch-bar-height-mobile;
			text-indent: 0;

			&:after {
				bottom: $toggle-switch-bar-padding-mobile;
				height: $toggle-switch-button-width-mobile;
				left: $toggle-switch-bar-padding-mobile;
				top: $toggle-switch-bar-padding-mobile;
				width: $toggle-switch-button-width-mobile;
			}

			&:before {
				width: $toggle-switch-bar-width-mobile;
			}

			.toggle-switch-handle:after {
				margin-left: clay-data-label-text-position($toggle-switch-bar-width-mobile, $toggle-switch-bar-padding-mobile);
			}

			.toggle-switch-icon {
				left: $toggle-switch-bar-padding-mobile;
				line-height: $toggle-switch-button-width-mobile;
				top: $toggle-switch-bar-padding-mobile;
				width: $toggle-switch-button-width-mobile;
			}

			.toggle-switch-icon-on {
				left: $toggle-switch-bar-padding-mobile;
			}

			.toggle-switch-icon-off {
				left: $toggle-switch-bar-width-mobile - $toggle-switch-bar-padding-mobile - $toggle-switch-button-width-mobile;
			}
		}

		&:checked ~ .toggle-switch-bar {
			&:after {
				left: $toggle-switch-bar-width-mobile - $toggle-switch-bar-padding-mobile - $toggle-switch-button-width-mobile;
			}

			.toggle-switch-handle:after {
				margin-left: clay-data-label-text-position($toggle-switch-bar-width-mobile, $toggle-switch-bar-padding-mobile);
			}

			.button-icon {
				left: $toggle-switch-bar-width-mobile - $toggle-switch-bar-padding-mobile - $toggle-switch-button-width-mobile;
			}
		}
	}

	.toggle-switch-text-left,
	.toggle-switch-text-right {
		line-height: $toggle-switch-bar-height-mobile;
	}
}
.tooltip-inner {
	@include box-shadow($tooltip-box-shadow);
}

// Tooltip Positions

.clay-tooltip-bottom,
.clay-tooltip-top {
	.arrow {
		left: 50%;
		margin-left: -($tooltip-arrow-width / 2);
	}
}

.clay-tooltip-bottom-left,
.clay-tooltip-top-left {
	.arrow {
		left: $tooltip-arrow-offset;
	}
}

.clay-tooltip-bottom-right,
.clay-tooltip-top-right {
	.arrow {
		right: $tooltip-arrow-offset;
	}
}

.clay-tooltip-left,
.clay-tooltip-right {
	.arrow {
		margin-top: -($tooltip-arrow-width / 2);
		top: 50%;
	}
}

.clay-tooltip-left-bottom,
.clay-tooltip-right-bottom {
	.arrow {
		bottom: $tooltip-arrow-offset;
	}
}

.clay-tooltip-left-top,
.clay-tooltip-right-top {
	.arrow {
		top: $tooltip-arrow-offset;
	}
}

// Bottom

.clay-tooltip-bottom,
.clay-tooltip-bottom-left,
.clay-tooltip-bottom-right {
	padding-top: $tooltip-arrow-height;

	.arrow {
		top: 0;

		&::before {
			border-bottom-color: $tooltip-arrow-color;
			border-width: 0 ($tooltip-arrow-width / 2) $tooltip-arrow-height;
			bottom: 0;
		}
	}
}

// Left

.clay-tooltip-left,
.clay-tooltip-left-bottom,
.clay-tooltip-left-top {
	padding-right: $tooltip-arrow-height;

	.arrow {
		height: $tooltip-arrow-width;
		right: 0;
		width: $tooltip-arrow-height;

		&::before {
			border-left-color: $tooltip-arrow-color;
			border-width: ($tooltip-arrow-width / 2) 0 ($tooltip-arrow-width / 2) $tooltip-arrow-height;
			left: 0;
		}
	}
}

// Right

.clay-tooltip-right,
.clay-tooltip-right-bottom,
.clay-tooltip-right-top {
	padding-left: $tooltip-arrow-height;

	.arrow {
		height: $tooltip-arrow-width;
		left: 0;
		width: $tooltip-arrow-height;

		&::before {
			border-right-color: $tooltip-arrow-color;
			border-width: ($tooltip-arrow-width / 2) $tooltip-arrow-height ($tooltip-arrow-width / 2) 0;
			right: 0;
		}
	}
}

// Top

.clay-tooltip-top,
.clay-tooltip-top-left,
.clay-tooltip-top-right {
	padding-bottom: $tooltip-arrow-height;

	.arrow {
		bottom: 0;

		&::before {
			border-top-color: $tooltip-arrow-color;
			border-width: $tooltip-arrow-height ($tooltip-arrow-width / 2) 0;
			top: 0;
		}
	}
}
body {
	-moz-osx-font-smoothing: $body-moz-osx-font-smoothing;
	-ms-overflow-style: scrollbar;
	-webkit-font-smoothing: $body-webkit-font-smoothing;

	@include clay-scale-component {
		font-size: $font-size-base-mobile;
	}
}

a {
	@if ($link-cursor != pointer) {
		cursor: $link-cursor;
	}
}

// Headings

h1,
.h1 {
	@include clay-scale-component {
		font-size: $h1-font-size-mobile;
	}
}

h2,
.h2 {
	@include clay-scale-component {
		font-size: $h2-font-size-mobile;
	}
}

h3,
.h3 {
	@include clay-scale-component {
		font-size: $h3-font-size-mobile;
	}
}

h4,
.h4 {
	@include clay-scale-component {
		font-size: $h4-font-size-mobile;
	}
}

h5,
.h5 {
	@include clay-scale-component {
		font-size: $h5-font-size-mobile;
	}
}

h6,
.h6 {
	@include clay-scale-component {
		font-size: $h6-font-size-mobile;
	}
}

b {
	font-weight: $b-font-weight;
}

strong {
	font-weight: $strong-font-weight;
}

// Reference Mark

.reference-mark {
	display: inline-block;
	font-size: $reference-mark-font-size;
	position: relative;
	vertical-align: $reference-mark-vertical-align;
}

// Marked Text

mark,
.mark {
	@include clay-highlight-text($mark-bg, $mark-color);
}

// Text Truncate

.text-truncate {
	display: block;
}

.text-truncate-inline {
	display: inline-flex;
	max-width: 100%;

	.text-truncate {
		display: inline-block;
		max-width: 100%;
		overflow: hidden;
		text-overflow: ellipsis;
		vertical-align: bottom;
		white-space: nowrap;
		word-wrap: normal;
	}
}
// Background

.bg-checkered {
	@include clay-bg-checkered($bg-checkered-fg);
}

// Rounded

.rounded {
	border-radius: $rounded-border-radius !important;
}

.rounded-circle {
	border-radius: $rounded-circle-border-radius !important;
}

.rounded-0 {
	border-radius: $rounded-0-border-radius !important;
}

// Close

.close {
	cursor: $link-cursor;
	float: none;

	@include clay-link($close);

	&:disabled,
	&.disabled {
		cursor: $disabled-cursor;
	}
}

// Autofit Row

%autofit-row {
	display: flex;
	flex-wrap: nowrap;
	width: 100%;

	@at-root {
		ul#{&} {
			@include list-unstyled;
		}
	}
}

.autofit-row {
	@extend %autofit-row;
}

// Autofit Row Center

%autofit-row-center {
	> .autofit-col {
		justify-content: center;
	}
}

.autofit-row-center {
	@extend %autofit-row-center;
}

// Autofit Row End

%autofit-row-end {
	> .autofit-col {
		justify-content: flex-end;
	}
}

.autofit-row-end {
	@extend %autofit-row-end;
}

// Autofit Padded

.autofit-padded {
	> .autofit-col {
		padding-bottom: $autofit-padded-col-padding-y;
		padding-left: $autofit-padded-col-padding-x;
		padding-right: $autofit-padded-col-padding-x;
		padding-top: $autofit-padded-col-padding-y;
	}
}

.autofit-padded-no-gutters-x {
	margin-left: math-sign($autofit-padded-col-padding-x);
	margin-right: math-sign($autofit-padded-col-padding-x);
	width: auto;

	> .autofit-col {
		padding-bottom: $autofit-padded-col-padding-y;
		padding-left: $autofit-padded-col-padding-x;
		padding-right: $autofit-padded-col-padding-x;
		padding-top: $autofit-padded-col-padding-y;
	}
}

.autofit-padded-no-gutters-y {
	margin-bottom: math-sign($autofit-padded-col-padding-y);
	margin-top: math-sign($autofit-padded-col-padding-y);
	width: auto;

	> .autofit-col {
		padding-bottom: $autofit-padded-col-padding-y;
		padding-left: $autofit-padded-col-padding-x;
		padding-right: $autofit-padded-col-padding-x;
		padding-top: $autofit-padded-col-padding-y;
	}
}

.autofit-padded-no-gutters {
	margin-bottom: math-sign($autofit-padded-col-padding-y);
	margin-left: math-sign($autofit-padded-col-padding-x);
	margin-right: math-sign($autofit-padded-col-padding-x);
	margin-top: math-sign($autofit-padded-col-padding-y);
	width: auto;

	> .autofit-col {
		padding-bottom: $autofit-padded-col-padding-y;
		padding-left: $autofit-padded-col-padding-x;
		padding-right: $autofit-padded-col-padding-x;
		padding-top: $autofit-padded-col-padding-y;
	}
}

// Autofit Columns

%autofit-col {
	display: flex;
	flex-direction: column;
	flex-shrink: 0;
	min-height: 0;
	position: relative;
}

.autofit-col {
	@extend %autofit-col;
}

%autofit-col-expand {
	flex-grow: 1;
	flex-shrink: 1;
	min-width: $autofit-col-expand-min-width;
	word-wrap: break-word;
}

.autofit-col-expand {
	@extend %autofit-col-expand;
}

// Autofit Section

%autofit-section {
	max-width: 100%;
}

.autofit-section {
	@extend %autofit-section;
}

// Autofit Float

%autofit-float {
	@include clay-autofit-float;
}

.autofit-float {
	@extend %autofit-float;
}

%autofit-float-sm-down {
	@include media-breakpoint-down(sm) {
		@include clay-autofit-float;
	}
}

.autofit-float-sm-down {
	@extend %autofit-float-sm-down;
}

// Autofit Float Md Down

%autofit-float-md-down {
	@include media-breakpoint-down(md) {
		@include clay-autofit-float;
	}
}

.autofit-float-md-down {
	@extend %autofit-float-md-down;
}

// Autofit Float End

%autofit-float-end {
	@include clay-autofit-float;

	justify-content: flex-end;
}

.autofit-float-end {
	@extend %autofit-float-end;
}

%autofit-float-end-sm-down {
	@include media-breakpoint-down(sm) {
		@include clay-autofit-float;

		justify-content: flex-end;
	}
}

.autofit-float-end-sm-down {
	@extend %autofit-float-end-sm-down;
}

%autofit-float-end-md-down {
	@include media-breakpoint-down(md) {
		@include clay-autofit-float;

		justify-content: flex-end;
	}
}

.autofit-float-end-md-down {
	@extend %autofit-float-end-md-down;
}

// Headings (h1-6)

.heading-start {
	margin-right: $heading-spacer-x;
}

.heading-end {
	margin-left: $heading-spacer-x;
}

.heading-text {
	margin-bottom: $heading-text-margin-bottom;
	margin-top: $heading-text-margin-top;
}

// Inline Scroller

.inline-scroller {
	list-style: none;
	margin: 0;
	max-height: $inline-scroller-max-height;
	overflow: auto;

	-webkit-overflow-scrolling: touch;

	padding: 0;
}

// Inline Item

.inline-item {
	align-items: center;
	display: inline-flex;
	vertical-align: middle;

	.inline-item {
		display: inline;
	}

	.lexicon-icon {
		margin-top: $inline-item-lexicon-icon-margin-top;
	}
}

.inline-item-before {
	margin-right: $inline-item-spacer-x;
}

.inline-item-middle {
	margin-left: $inline-item-spacer-x;
	margin-right: $inline-item-spacer-x;

	+ .inline-item-middle {
		margin-left: 0;
	}
}

.inline-item-after {
	margin-left: $inline-item-spacer-x;
}

// Page Header

.page-header {
	background-color: $page-header-bg;
}
.loading-animation {
	display: block;
	font-size: $loading-icon-font-size;
	height: 1em;
	margin-left: auto;
	margin-right: auto;
	position: relative;
	text-align: left;
	vertical-align: middle;
	width: 1em;
}

// Loading Icon Dotted

%loading-animation {
	@include clay-loading-animation-variant($loading-animation);
}

%loading-animation-light {
	@include clay-loading-animation-variant($loading-animation-light);
}

.loading-animation {
	@extend %loading-animation !optional;
}

.loading-animation-light {
	@extend %loading-animation-light !optional;
}

// Loading Icon Sizes

.loading-animation.loading-animation-sm {
	font-size: $loading-icon-font-size-sm;
}